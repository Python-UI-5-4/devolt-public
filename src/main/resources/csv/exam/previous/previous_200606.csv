test,date,snumber,sname,qnumber,qname1,qname2,example1,example2,example3,example4,answer,explain
"previous","220305",1,"소프트웨어설계",1,"검토회의 전에 요구사항 명세서를 미리 배포하여 사전 검토한 후 짧은 검토 회의를 통해 오류를 조기에 검출하는데 목적을 두는 요구 사항 검토 방법은?","","① 빌드 검증","② 동료 검토","③ 워크 스루","④ 개발자 검토","③ 워크 스루","워크 스루는 요구사항 명세서를 작성한 사람이 문서를 읽어주고, 참여자들이 질문하거나 의견을 제시하는 방식으로 진행되는 요구사항 검토 방법입니다."
"previous","220305",1,"소프트웨어설계",2,"코드 설계에서 일정한 일련번호를 부여하는 방식의 코드는?","","① 연상 코드","② 블록 코드","③ 순차 코드","④ 표의 숫자 코드","③ 순차 코드","순차 코드는 일정한 기준에 따라 최초의 자료부터 차례로 일련번호를 부여하는 방식의 코드로, 제품번호, 주민등록번호, 상품 코드 등이 순차 코드에 해당합니다."
"previous","220305",1,"소프트웨어설계",3,"객체지향 프로그램에서 데이터를 추상화하는 단위는?","","① 메소드","② 클래스","③ 상속성","④ 메시지","② 클래스","클래스를 통해 데이터는 속성으로, 함수는 메소드로 정의됩니다."
"previous","220305",1,"소프트웨어설계",4,"데이터 흐름도(DFD)의 구성요소에 포함되지 않는 것은?","","① process","② data flow","③ data store","④ data dictionary","④ data dictionary","데이터 흐름도는 프로세스, 데이터 흐름, 데이터 저장소의 구성 요소로 이루어져 있습니다."
"previous","220305",1,"소프트웨어설계",5,"소프트웨어 설계시 구축된 플랫폼의 성능특성 분석에 사용되는 측정 항목이 아닌 것은?","","① 응답시간(Response Time)","② 가용성(Availability)","③ 사용률(Utilization)","④ 서버 튜닝(Server Tuning)","④ 서버 튜닝(Server Tuning)","서버 튜닝은 구축된 플랫폼의 성능을 개선하기 위한 작업을 의미하며, 성능 특성 분석에 사용되는 측정 항목이 아니라, 성능 특성 분석의 결과를 바탕으로 수행되는 작업입니다."
"previous","220305",1,"소프트웨어설계",6,"UML 확장 모델에서 스테레오 타입 객체를 표현할 때 사용하는 기호로 맞는 것은?","","① 《 》","② (( ))","③ {{ }}","④ [[ ]]","① 《 》","UML 확장 모델에서 스테레오 타입 객체는 겹화살괄호({{ }}) 모양으로 표현하며, 스테레오 타입이 기본 타입에 추가적인 의미를 부여하는 것을 나타냅니다."
"previous","220305",1,"소프트웨어설계",7,"GoF(Gang of Four)의 디자인 패턴에서 행위 패턴에 속하는 것은?","","① Builder","② Visitor","③ Prototype","④ Bridge","② Visitor","Builder와 Prototype은 생성 패턴에, Bridge는 구조 패턴에 속합니다."
"previous","220305",1,"소프트웨어설계",8,"자료 사전에서 자료의 생략을 의미하는 기호는?","","① { }","② **","③ =","④ (　)","④ (　)","(　)는 괄호 안에 아무것도 입력하지 않고 비워두는 것으로 자료의 생략을 의미합니다."
"previous","220305",1,"소프트웨어설계",9,"트랜잭션이 올바르게 처리되고 있는지 데이터를 감시하고 제어하는 미들웨어는?","","① RPC","② ORB","③ TP monitor","④ HUB","③ TP monitor","TP monitor는 트랜잭션 관리 시스템(Transaction Management System)의 약자로, 트랜잭션의 일관성을 보장하는 데 사용되는 미들웨어입니다."
"previous","220305",1,"소프트웨어설계",10,"UI 설계 원칙에서 누구나 쉽게 이해하고 사용할 수 있어야 한다는 것은?","","① 유효성","② 직관성","③ 무결성","④ 유연성","② 직관성","직관성은 누구나 쉽게 이해하고 사용할 수 있어야 한다는 원칙으로, 이를 위해서는 사용자의 습관과 경험을 고려하여, 일반적으로 사용되는 용어와 아이콘을 사용하고, 일관된 디자인을 유지해야 합니다."
"previous","220305",1,"소프트웨어설계",11,"XP(eXtreme Programming)의 5가지 가치로 거리가 먼 것은?","","① 용기","② 의사소통","③ 정형분석","④ 피드백","③ 정형분석","정형분석은 소프트웨어 요구사항을 분석하고 설계하는 데에 사용되는 전통적인 방법론입니다."
"previous","220305",1,"소프트웨어설계",12,"UML 모델에서 사용하는 Structural Diagram 에 속하지 않은 것은?","","① Class Diagram","② Object Diagram","③ Component Diagram","④ Activity Diagram","④ Activity Diagram","행위 다이어그램은 시스템의 동작을 나타내는 다이어그램으로, 활동 다이어그램, 상태 머신 다이어그램, 시퀀스 다이어그램, 협업 다이어그램, 커뮤니케이션 다이어그램 등이 있습니다."
"previous","220305",1,"소프트웨어설계",13,"소프트웨어 개발 방법 중 요구사항 분석(requirements annalysis)과 거리가 먼 것은?","","①  비용과 일정에 대한 제약설정","② 타당성 조사","③ 요구사항 정의 문서화","④ 설계 명세서 작성","④ 설계 명세서 작성","설계 명세서 작성은 요구사항 분석을 바탕으로 소프트웨어의 구조와 기능을 구체화하는 과정입니다."
"previous","220305",1,"소프트웨어설계",14,"럼바우(Rumbaugh)의 객체지향 분석 절차를 가장 바르게 나열한 것은?","","① 객체 모형→동적 모형→기능 모형","② 객체 모형→기능 모형→동적 모형","③ 기능 모형→동적 모형→객체 모형","④ 기능 모형→객체 모형→동적 모형","① 객체 모형→동적 모형→기능 모형","럼바우의 객체지향 분석에서는 먼저 시스템을 구성하는 객체들을 식별하고, 이들 객체들의 속성과 상호작용을 파악하여 객체 모형을 만듭니다. 이후에는 객체들의 동작과 상호작용을 분석하여 동적 모형을 만들고, 마지막으로 시스템이 제공해야 하는 기능을 파악하여 기능 모형을 만듭니다."
"previous","220305",1,"소프트웨어설계",15,"공통 모듈에 대한 명세 기법 중 해당 기능에 대해 일관되게 이해하고 한 가지로 해석될 수 있도록 작성하는 원칙은?","","① 상호작용성","② 명확성","③ 독립성","④ 내용성","② 명확성","명확성은 공통 모듈에 대한 명세를 작성할 때 해당 기능에 대해 일관되게 이해하고 한 가지로 해석될 수 있도록 작성하는 원칙입니다. 이는 모듈의 기능을 명확하게 정의하고 모호한 해석을 방지하여 개발자들이 모듈을 보다 쉽게 이해하고 사용할 수 있도록 도와줍니다."
"previous","220305",1,"소프트웨어설계",16,"객체지향 기법에서 클래스들 사이의 ‘부분-전체(part-whole)' 관계 또는 ’부분(is-a-part-of)'의 관계로 설명되는 연관성을 나타내는 용어는?","","① 일반화","② 추상화","③ 캡슐화","④ 집단화","④ 집단화","집단화는 한 클래스가 다른 클래스의 일부분으로 포함되는 관계를 의미합니다."
"previous","220305",1,"소프트웨어설계",17,"CASE가 갖고 있는 주요 기능이 아닌 것은?","","① 그래픽 지원","② 소프트웨어 생명주기 전 단계의 연결","③ 언어번역","④ 다양한 소프트웨어 개발 모형 지원","③ 언어번역","CASE는 소프트웨어 개발 생명주기의 전 단계를 연결하고, 다양한 소프트웨어 개발 모형을 지원하며, 그래픽 지원을 제공하는데, 언어번역 기능은 갖고 있지 않습니다."
"previous","220305",1,"소프트웨어설계",18,"DBMS 분석시 고려사항으로 거리가 먼 것은?","","① 가용성","② 성능","③ 네트워크 구성도","④ 상호 호환성","③ 네트워크 구성도","네트워크 구성도는 DBMS 자체와는 직접적인 연관성이 적습니다."
"previous","220305",1,"소프트웨어설계",19,"HIPO(Hierarchy Input Process Output)에 대한 설명으로 거리가 먼 것은?","","① 상향식 소프트웨어 개발을 위한 문서화 도구이다.","② HIPO 차트 종류에는 가시적 도표, 총체적 도표, 세부적 도표가 있다.","③ 기능과 자료의 의존 관계를 동시에 표현할 수 있다.","④ 보기 쉽고 이해하기 쉽다.","① 상향식 소프트웨어 개발을 위한 문서화 도구이다.","HIPO(Hierarchy Input Process Output)는 하향식 소프트웨어 개발을 위한 문서화 도구입니다."
"previous","220305",1,"소프트웨어설계",20,"객체지향 분석 방법론 중 E-R 다이어그램을 사용하여 객체의 행위를 모델링하며, 객체식별, 구조 식별, 주체 정의, 속성 및 관계 정의, 서비스 정의 등의 과정으로 구성되는 것은?","","① Coad와 Yourdon 방법","② Booch 방법","③ Jacobson 방법","④ Wirfs-Brocks 방법","① Coad와 Yourdon 방법","Coad와 Yourdon 방법은 객체지향 분석 방법론 중 하나로, 객체의 행위를 중심으로 모델링하며, 객체의 속성과 관계를 정의하고, 객체의 역할과 책임을 명확하게 정의하여 시스템을 구성하는 방법을 강조합니다."
"previous","220305",2,"소프트웨어개발",21,"정렬된 N개의 데이터를 처리하는데 O(Nlog2N)의 시간이 소요되는 정렬 알고리즘은?","","① 선택정렬","② 삽입정렬","③ 버블정렬","④ 합병정렬","④ 합병정렬","선택정렬, 삽입정렬, 버블정렬은 모두 평균적으로 O(N^2)의 시간을 소요합니다. 합병정렬은 정렬된 두 개의 리스트를 합쳐 하나의 정렬된 리스트를 만드는 방식의 정렬 알고리즘으로, 최선의 경우 O(Nlog2N)의 시간, 최악의 경우 O(Nlog2N)의 시간을 소요합니다."
"previous","220305",2,"소프트웨어개발",22,"White Box Testing 에 대한 설명으로 옳지 않은 것은?","","① Base Path Testing, Boundary Value Analysis가 대표적인 기법이다.","② Source Code 의 모든 문장을 한번 이상 수행함으로서 진행된다.","③ 모듈 안의 작동을 직접 관찰 할 수 있다.","④ 산출물의 각 기능별로 적절한 프로그램의 제어구조에 따라 선택, 반복 등의 부분들을 수행함으로써 논리적 경로를 점검한다.","① Base Path Testing, Boundary Value Analysis가 대표적인 기법이다.","Boundary Value Analysis(경계값 분석)는 블랙 박스 테스트의 대표적인 기법입니다."
"previous","220305",2,"소프트웨어개발",23,"소프트웨어 품질 측정을 위해 개발자 관점에서 고려해야 할 항목으로 거리가 먼 것은?","","① 정확성","② 무결성","③ 사용성","④ 간결성","④ 간결성","간결성은 소프트웨어의 크기나 복잡성을 측정하는 요소로, 개발자 관점에서는 소프트웨어의 크기나 복잡성이 소프트웨어의 품질에 미치는 영향이 크지 않다고 볼 수 있습니다."
"previous","220305",2,"소프트웨어개발",24,"인터페이스 구현 검증도구 중 아래에서 설명하는 것은?","https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F200606%2FDEVOLT_EXAM_MOCK_200606_24.gif?alt=media","① xUnit","② STAF","③ FitNesse","④ RubyNode","② STAF","보기는 서비스 호출 및 컴포넌트 재사용 등 환경 지원하는 테스트 프레임워크인 STAF에 대한 설명입니다."
"previous","220305",2,"소프트웨어개발",25,"EAI(Enterprise Application Integration)의 구축 유형으로 옳지 않은 것은?","","① Point-to-Point","② Hub&Spoke","③ Message Bus","④ Tree","④ Tree","Tree는 EAI의 구축 유형이 아닙니다. Tree는 계층 구조를 의미하며, EAI의 구축 유형은 애플리케이션의 연결 방식을 의미합니다."
"previous","220305",2,"소프트웨어개발",26,"다음 트리를 전위 순회(preorder traversal)한 결과는?","https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F200606%2FDEVOLT_EXAM_MOCK_200606_26.gif?alt=media","① +*AB/*CDE","② AB/C*D*E+","③ A/B*C*D+E","④ +**/ABCDE","④ +**/ABCDE","전위 순회는 루트를 먼저 방문하고 Left, Right 트리를 방문하는 순회 방식입니다."
"previous","220305",2,"소프트웨어개발",27,"인터페이스 보안을 위해 네트워크 영역에 적용될 수 있는 솔루션과 거리가 먼 것은?","","① IPSec","② SMTP","③ SSL","④ S-HTTP","② SMTP","SMTP는 Simple Mail Transfer Protocol의 약자로, 전자 메일을 전송하기 위한 프로토콜입니다. SMTP는 네트워크 통신을 보호하기 위한 기능을 제공하지 않습니다."
"previous","220305",2,"소프트웨어개발",28,"평가 점수에 따른 성적부여는 다음 표와 같다. 이를 구현한 소프트웨어를 경계값 분석 기법으로 테스트 하고자 할 때 다음 중 테스트 케이스의 입력 값으로 옳지 않은 것은?","https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F200606%2FDEVOLT_EXAM_MOCK_200606_28.gif?alt=media","① 59","② 80","③ 90","④ 101","③ 90","경계값 분석 기법은 경계가 되는 곳, 즉 보기에서의 0, 59, 60, 79, 80, 100을 테스트하는 기법입니다. 90은 80~100 사이의 값이기 때문에 테스트의 의미가 없고, 101은 100까지의 평가점수 기준에서 벗어나기 때문에 그 이상의 값을 넣은 반응을 확인할 수 있습니다."
"previous","220305",2,"소프트웨어개발",29,"반정규화(Denormalization) 유형중 중복 테이블을 추가하는 방법에 해당하지 않는 것은?","","① 빌드 테이블의 추가","② 집계 테이블의 추가","③ 진행 테이블의 추가","④ 특정 부분만을 포함하는 테이블의 추가","① 빌드 테이블의 추가","빌드 테이블은 중복 테이블을 추가하는 방법이 아니라, 테이블의 데이터를 생성하기 위해 사용되는 테이블입니다."
"previous","220305",2,"소프트웨어개발",30,"ISO/IEC 9126의 소프트웨어 품질 특성 중 기능서(Functionlity)의 하위 특성으로 옳지 않은 것은?","","① 학습성","② 적합성","③ 정확성","④ 보안성","① 학습성","학습성은 소프트웨어를 사용하기 위해 사용자에게 필요한 학습 노력의 양을 의미합니다. 따라서, 학습성은 기능성 품질 특성보다는 사용성 품질 특성에 더 부합하는 개념입니다."
"previous","220305",2,"소프트웨어개발",31,"다음 트리의 차수(degree)와 단말 노드(terminal node)의 수는?","https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F200606%2FDEVOLT_EXAM_MOCK_200606_31.gif?alt=media","① 차수: 4, 단말 노드: 4","② 차수: 2, 단말 노드: 4","③ 차수: 4, 단말 노드: 8","④ 차수: 2, 단말 노드: 8","② 차수: 2, 단말 노드: 4","트리의 차수는 전체 트리에서 가장 큰 차수를, 단말 노드는 자식이 없는 노드를 의미합니다."
"previous","220305",2,"소프트웨어개발",32,"디지털 저작권 관리(DRM)의 기술 요소가 아닌 것은?","","① 크랙 방지 기술","② 정책 관리 기술","③ 암호화 기술","④ 방화벽 기술","④ 방화벽 기술","방화벽 기술은 네트워크의 보안을 유지하기 위한 기술입니다. 디지털 콘텐츠의 저작권을 보호하기 위한 기술은 아니므로, DRM의 기술 요소가 아닙니다."
"previous","220305",2,"소프트웨어개발",33,"소프트 웨어 테스트에서 오류의 80%는 전체 모듈의 20% 내에서 발견된다는 법칙은?","","① Brooks의 법칙","② Boehm의 법칙","③ Pareto의 법칙","④ Jackson의 법칙","③ Pareto의 법칙","Pareto의 법칙은 이탈리아의 경제학자 Vilfredo Pareto가 1897년에 발표한 법칙으로, 전체에서 차지하는 비중이 극히 작은 소수의 요인에 의해 전체의 상당 부분이 결정된다는 법칙입니다."
"previous","220305",2,"소프트웨어개발",34,"소프트웨어 형상 관리의 의미로 적절한 것은?","","① 비용에 관한 사항을 효율적으로 관리하는 것","② 개발 과정의 변경 사항을 관리하는 것","③ 테스트 과정에서 소프트웨어를 통합하는 것","④ 개발 인력을 관리하는 것","② 개발 과정의 변경 사항을 관리하는 것","소프트웨어 형상 관리는 소프트웨어의 개발, 테스트, 배포, 유지보수 과정에서 발생하는 모든 변경 사항을 체계적으로 관리하는 활동입니다."
"previous","220305",2,"소프트웨어개발",35,"알고리즘 시간복잡도 O(I)이 의미하는 것은?","","① 컴퓨터 처리가 불가","② 알고리즘 입력 데이터 수가 한 개","③ 알고리즘 수행시간이 입력 데이터 수와 관계없이 일정","④ 알고리즘 길이가 입력 데이터보다 작음","③ 알고리즘 수행시간이 입력 데이터 수와 관계없이 일정","알고리즘 시간복잡도 O(I)은 입력 데이터 수와 비례하는 시간복잡도를 의미합니다. 즉, 입력 데이터 수가 증가하면 알고리즘의 수행시간도 증가하지만, 그 비율은 일정합니다."
"previous","220305",2,"소프트웨어개발",36,"소스코드 품질분석 도구 중 정적분석 도구가 아닌 것은?","","① pmd","② cppcheck","③ valMeter","④ checkstyle","③ valMeter","valMeter는 소스 코드의 성능을 분석하는 도구로, 소스 코드를 실행하여 성능 지표를 측정하는 동적 분석 도구입니다."
"previous","220305",2,"소프트웨어개발",37,"검증 검사 기법 중 개발자의 장소에서 사용자가 개발자 앞에서 행하는 기법이며, 일반적으로 통제된 환경에서 사용자와 개발자가 함께 확인하면서 수행되는 검사는?","","① 동치 분할 검사","② 형상 검사","③ 알파 검사","④ 베타 검사","③ 알파 검사","알파 검사는 개발자의 장소에서 사용자가 개발자 앞에서 행하는 검사 기법으로, 개발자의 장소에서 이루어지므로, 개발자가 즉시 피드백을 제공할 수 있으며 통제된 환경에서 이루어지므로, 시스템의 안정성을 유지하면서 검사를 수행할 수 있고, 사용자와 개발자가 함께 검사를 수행하므로, 사용자의 요구사항을 정확하게 반영할 수 있다는 장점이 있습니다."
"previous","220305",2,"소프트웨어개발",38,"하향식 통합에 있어서 모듈 간의 통합 시험을 위해 일시적으로 필요한 조건만을 가지고 임시로 제공되는 시험용 모듈을 무엇이라고 하는가?","","① Stub","② Driver","③ Procedure","④ Function","① Stub","Stub은 아직 개발되지 않은 모듈을 대신하여 사용되며, 실제 기능을 수행하지 않고 단순히 호출을 받아서 응답만을 제공합니다."
"previous","220305",2,"소프트웨어개발",39,"SW 패키징 도구 활용 시 고려 사항과 거리가 먼 것은?","","① 패키징 시 사용자에게 배포되는 SW이므로 보안을 고려한다.","② 사용자 편의성을 위한 복합성 및 비효율성 문제를 고려한다.","③ 보안상 단일 기종에서만 사용할 수 있도록 해야 한다.","④ 제품 SW 종류에 적합한 암호화 알고리즘을 적용한다.","③ 보안상 단일 기종에서만 사용할 수 있도록 해야 한다.","보안상 단일 기종에서만 사용할 수 있도록 해야 한다는 것은 이기종 연동을 고려하지 않은 것으로, SW 패키징 도구 활용 시 고려 사항과 거리가 먼 내용입니다."
"previous","220305",2,"소프트웨어개발",40,"외계인코드(Alien Code)에 대한 설명으로 옳은 것은?","","① 프로그램의 로직이 복잡하여 이해하기 어려운 프로그램을 의미한다.","② 아주 오래되거나 참고문서 또는 개발자가 없어 유지보수 작업이 어려운 프로그램을 의미한다.","③ 오류가 없어 디버깅 과정이 필요 없는 프로그램을 의미한다.","④ 사용자가 직접 작성한 프로그램을 의미한다.","② 아주 오래되거나 참고문서 또는 개발자가 없어 유지보수 작업이 어려운 프로그램을 의미한다.","외계인코드(Alien Code)는 개발자가 원래 코드를 이해하지 못하거나, 개발자가 퇴사하거나 사망하여 더 이상 코드를 이해할 수 있는 사람이 없기 때문에 유지보수가 어렵습니다."
"previous","220305",3,"데이터베이스구축",41,"SQL 의 분류 중 DDL에 해당하지 않는 것은?","","① UPDATE","② ALTER","③ DROP","④ CREATE","① UPDATE","UPDATE는 데이터베이스의 구조를 변경하지 않고, 기존 데이터를 수정하는 명령어이므로 DML에 해당합니다."
"previous","220305",3,"데이터베이스구축",42,"다음 두 릴레이션에서 외래키로 사용된 것은? (단 밑줄 친 속성은 키본키이다.)","https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F200606%2FDEVOLT_EXAM_MOCK_200606_42.gif?alt=media","① 수강번호","② 과목번호","③ 학번","④ 과목명","② 과목번호","'과목번호'는 수강 릴레이션에서 과목 릴레이션을 참조하기 위한 외래키입니다. "
"previous","220305",3,"데이터베이스구축",43,"데이터 무결성 제약조건 중 “개체 무결성 제약”조건에 대한 설명으로 맞는 것은?","","① 릴레이션 내의 튜플들이 각 속성의 도메인에 지정된 값만을 가져야 한다.","② 기본키에 속해 있는 애트리뷰트는 널값이나 중복값을 가질 수 없다.","③ 릴레이션은 참조할 수 없는 외래키 값을 가질 수 없다.","④ 외래키 값은 참조 릴레이션의 기본키 값과 동일해야 한다.","② 기본키에 속해 있는 애트리뷰트는 널값이나 중복값을 가질 수 없다.","기본키는 릴레이션 내에서 각 튜플을 유일하게 식별하는 속성이므로, 중복값이나 널값을 가질 수 없으며, 이는 데이터의 일관성과 무결성을 보장하기 위한 개체 무결성 제약조건입니다."
"previous","220305",3,"데이터베이스구축",44,"뷰(view)에 대한 설명으로 옳지 않은 것은?","","① 뷰는 CREATE 문을 사용하여 정의한다.","② 뷰는 데이터의 논리적 독립성을 제공한다.","③ 뷰를 제거할 때에는 DROP 문을 사용한다.","④ 뷰는 저장장치 내에 물리적으로 존재한다.","④ 뷰는 저장장치 내에 물리적으로 존재한다.","뷰는 하나 이상의 테이블에서 유도되는 가상 테이블입니다. 뷰는 물리적으로 존재하는 것이 아니라, 테이블의 데이터를 조합하여 가상의 테이블로 제공하는 것입니다."
"previous","220305",3,"데이터베이스구축",45,"다음 SQL 문의 실행 결과는?","https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F200606%2FDEVOLT_EXAM_MOCK_200606_45.gif?alt=media","① 10,000","② 15,000","③ 20,000","④ 25,000","④ 25,000","도서가격 테이블에서 자료구조와 일치하는 책번호의 가격을 찾아서 출력합니다."
"previous","220305",3,"데이터베이스구축",46,"데이터베이스의 논리적 설계(logical design) 단계에서 수행하는 작업이 아닌 것은?","","① 레코드 집중의 분석 및 설계","② 논리적 데이터베이스 구조로 매핑(mapping)","③ 트랜잭션 인터페이스 설계","④ 스키마의 평가 및 정제","① 레코드 집중의 분석 및 설계","레코드 집중의 분석 및 설계는 데이터베이스의 물리적 설계 단계에서 수행하는 작업입니다."
"previous","220305",3,"데이터베이스구축",47,"이행적 함수 종속 관계를 의미하는 것은?","","① A→B이고 B→C 일 때, A→C를 만족하는 관계","② A→B이고 B→C 일 때, C→A를 만족하는 관계","③ A→B이고 B→C 일 때, B→A를 만족하는 관계","④ A→B이고 B→C 일 때, C→B를 만족하는 관계","① A→B이고 B→C 일 때, A→C를 만족하는 관계","이행적 함수 종속 관계란, X→Y, Y→Z가 성립하는 경우, X→Z가 성립하는 경우를 말합니다."
"previous","220305",3,"데이터베이스구축",48,"하나의 애트리뷰트가 가질 수 있는 원자값들의 집합을 의미하는 것은?","","① 도메인","② 튜플","③ 엔티티","④ 다형성","① 도메인","도메인은 하나의 애트리뷰트가 가질 수 있는 값들의 범위를 의미합니다."
"previous","220305",3,"데이터베이스구축",49,"STUDENT 테이블에 독일어과 학생 50명, 중국어과 학생 30명, 영어영문학과 학생 50명의 정보가 저장되어 있을 때, 다음 두 SQL문의 실행 결과 튜플 수는? (단, DEPT 컬럼은 학과명)","https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F200606%2FDEVOLT_EXAM_MOCK_200606_49.gif?alt=media","① ⓐ 3, ⓑ 3","② ⓐ 50, ⓑ 3","③ ⓐ 130, ⓑ 3","④ ⓐ 130, ⓑ 130","③ ⓐ 130, ⓑ 3","a에서는 단순 SELECT(조건검색)의 경우 전체테이블의 튜플을 검색하기 때문에 130건(=50+30+50)이 조회되고, b에서는 DISTINCT(중복제거)의 경우 동일한 튜플을 제거하고 검색하기 때문에 독일어과 1건, 중국어과 1건, 영어영문학과 1건으로 총 3건이 조회됩니다."
"previous","220305",3,"데이터베이스구축",50,"관계대수 연산에서 두 릴레이션이 공통으로 가지고 있는 속성을 이용하여 두 개의 릴레이션을 하나로 합쳐서 새로운 릴레이션을 만드는 연산은?","","① https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F200606%2FDEVOLT_EXAM_MOCK_200606_50_01.gif?alt=media","② https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F200606%2FDEVOLT_EXAM_MOCK_200606_50_02.gif?alt=media","③ https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F200606%2FDEVOLT_EXAM_MOCK_200606_50_03.gif?alt=media","④ https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F200606%2FDEVOLT_EXAM_MOCK_200606_50_04.gif?alt=media","① https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F200606%2FDEVOLT_EXAM_MOCK_200606_50_01.gif?alt=media","관계대수 연산 중 교집합(intersection) 연산을 이용하여 두 개의 릴레이션을 하나로 합쳐서 새로운 릴레이션을 만들 수 있습니다."
"previous","220305",3,"데이터베이스구축",51,"트랜잭션의 특성 중 다음 설명에 해당하는 것은?","https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F200606%2FDEVOLT_EXAM_MOCK_200606_51.gif?alt=media","① Durability","② Share","③ Consistency","④ Atomicity","④ Atomicity","보기는 트랜잭션 연산은 데이터베이스에 모두 반영되든지 아니면 전혀 반영되지 않아야 한다는 Atomicity(원자성)에 관련한 설명입니다."
"previous","220305",3,"데이터베이스구축",52,"분산 데이터베이스 목표 중 “데이터베이스의 분산된 물리적 환경에서 특정 지역의 컴퓨터 시스템이나 네트워크에 장애가 발생해도 데이터 무결성이 보장된다”는 것과 관계있는 것은?","","① 장애 투명성","② 병행 투명성","③ 위치 투명성","④ 중복 투명성","① 장애 투명성","장애 투명성은 분산 데이터베이스에서 특정 지역의 컴퓨터 시스템이나 네트워크에 장애가 발생해도 데이터 무결성이 보장되는 목표와 관련이 있습니다."
"previous","220305",3,"데이터베이스구축",53,"데이터베이스 시스템에서 삽입, 갱신, 삭제 등의 이벤트가 발생할 때마다 관련 작업이 자동으로 수행되는 절차형 SQL은?","","① 트리거(rtigger)","② 무결성(integrity)","③ 잠금(lock)","④ 복귀(rollback)","① 트리거(rtigger)","트리거는 데이터베이스 시스템에서 삽입, 갱신, 삭제 등의 이벤트가 발생할 때마다 관련 작업이 자동으로 수행되는 절차형 SQL로, 데이터베이스 무결성 유지, 데이터 변경 감사, 데이터 흐름 제어 등의 목적으로 사용됩니다."
"previous","220305",3,"데이터베이스구축",54,"참조 무결성을 유지하기 위하여 DROP문에서 부모 테이블의 항목 값을 삭제할 경우 자동적으로 자식 테이블의 해당 레코드를 삭제하기 위한 옵션은?","","① CLUSTER","② CASCADE","③ SET-NULL","④ RESTRICTED","② CASCADE","CASCADE 옵션은 부모 테이블의 항목 값을 삭제할 경우 자동적으로 자식 테이블의 해당 레코드를 삭제하는 옵션입니다. 따라서, 참조 무결성을 유지하기 위하여 DROP문에서 부모 테이블의 항목 값을 삭제할 경우 자동적으로 자식 테이블의 해당 레코드를 삭제하기 위해서는 CASCADE 옵션을 사용해야 합니다."
"previous","220305",3,"데이터베이스구축",55,"DML에 해당하는 SQL 명령으로만 나열된 것은?","","① DELETE, UPDATE, CREATE, ALTER","② INSERT, DELETE, UPDATE, DROP","③ SELECT, INSERT, DELETE, UPDATE","④ SELECT, INSERT, DELETE, ALTER","③ SELECT, INSERT, DELETE, UPDATE","CREATE와 ALTER, DROP은 DDL에 해당하는 SQL 명령어입니다."
"previous","220305",3,"데이터베이스구축",56,"데이터 제어언어(DCL)의 기능으로 옳지 않은 것은?","","① 데이터 보안","② 논리적, 물리적 데이터 구조 정의","③ 무결성 유지","④ 병행수행 제어","② 논리적, 물리적 데이터 구조 정의","논리적, 물리적 데이터 구조 정의는 데이터베이스 설계 단계에서 수행하는 작업으로, 데이터 제어언어의 기능이 아닙니다."
"previous","220305",3,"데이터베이스구축",57,"병행제어의 로킹(Locking) 단위에 대한 설명으로 옳지 않은 것은?","","① 데이터베이스, 파일, 레코드 등은 로킹 단위가 될 수 있다.","② 로킹 단위가 작아지면 로킹 오버헤드가 감소한다.","③ 로킹 단위가 작아지면 데이터베이스 공유도가 증가한다.","④ 한꺼번에 로킹 할 수 있는 객체의 크기를 로킹 단위라고 한다.","② 로킹 단위가 작아지면 로킹 오버헤드가 감소한다.","로킹의 단위 크기가 작으면 관리 기 복잡하여 병행 수준이 높아지고 오버헤드가 증가합니다."
"previous","220305",3,"데이터베이스구축",58,"E-R 모델의 표현 방법으로 옳지 않은 것은?","","① 개체타입: 사각형","② 관계타입: 마름모","③ 속성: 오각형","④ 연결: 선","③ 속성: 오각형","E-R모델에서 속성은 타원으로 표현합니다."
"previous","220305",3,"데이터베이스구축",59,"다음 설명의 ( )안에 들어갈 내용으로 작합한 것은?","https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F200606%2FDEVOLT_EXAM_MOCK_200606_59.gif?alt=media","① 중복성","② 최소성","③ 참조성","④ 동일성","② 최소성","후보키는 유일성과 최소성을 모두 만족시켜야 하고, 슈퍼키는 유일성만 만족시키면 최소성은 만족시키지 않아도 됩니다."
"previous","220305",3,"데이터베이스구축",60,"정규화 과정 중 1NF에서 2NF가 되기 위한 조건은?","","① 1NF를 만족하는 모든 도메인이 원자 값이어야 한다.","② 1NF를 만족하고 키가 아닌 모든 애트리뷰트들이 기본 키에 이행적으로 함수 종속되지 않아야 한다.","③ 1NF를 만족하고 다치 종속이 제거되어야 한다.","④ 1NF를 만족하고 키가 아닌 모든 속성이 기본키에 대하여 완전 함수적 종속 관계를 만족해야 한다.","④ 1NF를 만족하고 키가 아닌 모든 속성이 기본키에 대하여 완전 함수적 종속 관계를 만족해야 한다.","1NF의 조건은 원자값으로 구성될 것, 2NF의 조건은 부분 함수 종속 제거(완전 함수적 종속 관계), 3NF이ㅡ 조건은 이행 함수 종속 제거, BCNF의 조건은 결정자 함수 종속, 4NF의 조건은 다중값(다치) 종속성 제거, 5NF의 조건은 조인 종속성을 제거하는 것입니다."
"previous","220305",4,"프로그래밍언어활용",61,"IPv6에 대한 설명으로 틀린 것은?","","① 128비트의 주소 공간을 제공한다.","② 인증 및 보안 기능을 포함하고 있다.","③ 패킷 크기가 64Kbyte로 고정되어 있다.","④ IPv6 확장 헤더를 통해 네트워크 기능 확장이 용이하다.","③ 패킷 크기가 64Kbyte로 고정되어 있다.","IPv6의 패킷 크기는 최소 1280바이트에서 최대 65535바이트까지로 가변적입니다."
"previous","220305",4,"프로그래밍언어활용",62,"C언어에서 비트 논리연산자에 해당하지 않는 것은?","","① ^","② ?","③ &","④ ~","② ?","?는 삼항 연산자(ternary operator)입니다."
"previous","220305",4,"프로그래밍언어활용",63,"TCP/IP 프로토콜 중 전송계층 프로토콜은?","","① HTTP","② SMTP","③ FTP","④ TCP","④ TCP","TCP는 전송 제어 프로토콜로써 데이터의 신뢰성을 보장하고 오류가 발생하면 재전송을 수행합니다."
"previous","220305",4,"프로그래밍언어활용",64,"시스템에서 모듈 사이의 결합도(Coupling)에 대한 설명으로 옳은 것은?","","① 한 모듈 내에 있는 처리요소들 사이의 기능적인 연관 정도를 나타낸다.","② 결합도가 높으면 시스템 구현 및 유지보수 작업이 쉽다.","③ 모듈간의 결합도를 약하게 하면 모듈 독립성이 향상된다.","④ 자료결합도는 내용결합도 보다 결합도가 높다.","③ 모듈간의 결합도를 약하게 하면 모듈 독립성이 향상된다.","모듈 결합도는 모듈 간의 상호 의존 정도를 나타내는 지표입니다. 결합도가 낮으면 모듈 간의 독립성이 높아지고, 결합도가 높으면 모듈 간의 독립성이 낮아집니다."
"previous","220305",4,"프로그래밍언어활용",65,"은행가 알고리즘(Banker's Algorithm)은 교착상태의 해결 방법 중 어떤 기법에 해당하는가?","","① Avoidance","② Detection","③ Prevention","④ Recovery","① Avoidance","은행가 알고리즘은 교착상태를 예방하는 기법입니다."
"previous","220305",4,"프로그래밍언어활용",66,"UNIX의 쉘(Shell)에 관한 설명으로 옳지 않은 것은?","","① 명령어 해석기이다.","② 시스템과 사용자 간의 인터페이스를 담당한다.","③ 여러 종류의 쉘이 있다.","④ 프로세스, 기억장치, 입출력 관리를 수행한다.","④ 프로세스, 기억장치, 입출력 관리를 수행한다.","UNIX의 쉘은 명령어 해석기로서, 사용자의 명령을 해석하고 시스템에 전달하는 역할을 합니다."
"previous","220305",4,"프로그래밍언어활용",67,"교착 상태 발생의 필요 충분 조건이 아닌 것은?","","① 상호 배제(mutual exclusion)","② 점유와 대기(hold and wait)","③ 환형 대기(circular wait)","④ 선점(preemption)","④ 선점(preemption)","교착상태 발생의 필요 충분 조건은 상호 배제, 점유와 대기, 환형 대기, 비선점입니다."
"previous","220305",4,"프로그래밍언어활용",68,"OSI-7계층에서 종단간 신뢰성 있고 효율적인 데이터를 전송하기 위해 오류검출과 복구, 흐름 제어를 수행하는 계층은?","","① 전송 계층","② 세션 계층","③ 표현 계층","④ 응용 계층","① 전송 계층","전송 계층은 데이터를 세그먼트로 분할하고, 각 세그먼트에 일련번호를 부여하여 전송 중에 발생할 수 있는 오류를 검출하고 복구합니다. 또한, 흐름 제어를 통해 송신 측과 수신 측의 데이터 처리 속도 차이를 조절하여 데이터 전송의 효율성을 높입니다."
"previous","220305",4,"프로그래밍언어활용",69,"IPv6의 주소체계로 거리가 먼 것은?","","① Unicast","② Anycast","③ Broadcast","④ Multicast","③ Broadcast","Broadcast는 특정 호스트가 아닌 네트워크상의 모든 호스트에 데이터를 전송하는 주소체계입니다."
"previous","220305",4,"프로그래밍언어활용",70,"TCP/IP 네트워크에서 IP 주소를 MAC 주소로 변환하는 프로토콜은?","","① UDP","② ARP","③ TCP","④ ICMP","② ARP","ARP는 IP 주소와 MAC 주소를 매핑하는 프로토콜로, 데이터를 전송하기 위해 IP 주소를 MAC 주소로 변환해야 할 때 사용됩니다."
"previous","220305",4,"프로그래밍언어활용",71,"프로세스 상태의 종류가 아닌 것은?","","① Ready","② Running","③ Requst","④ Exit","③ Requst","프로세스 상태는 크게 준비, 실행, 대기, 종료로 나눌 수 있으며, Request는 프로세스 상태를 나타내는 용어가 아닙니다."
"previous","220305",4,"프로그래밍언어활용",72,"스레드(Thread)에 대한 설명으로 옳지 않은 것은?","","① 한 개의 프로세스는 여러 개의 스레드를 가질 수 없다.","② 커널 스레드의 경우 운영체제에 의해 스레드를 운용한다.","③ 사용자 스레드의 경우 사용자가 만든 라이브러리를 사용하여 스레드를 운용한다.","④ 스레드를 사용함으로써 하드웨어, 운영체제의 성능과 응용 프로그램의 처리율을 향상시킬 수 있다.","① 한 개의 프로세스는 여러 개의 스레드를 가질 수 없다.","스레드는 프로세스 내의 실행 흐름으로, 프로세스는 여러 개의 스레드를 가질 수 있습니다."
"previous","220305",4,"프로그래밍언어활용",73,"HRN(Highest Response-ratio Next) 스케줄링 방식에 대한 설명으로 옳지 않은 것은?","","① 대기 시간이 긴 프로세스의 경우 우선 순위가 높아진다.","② SJF 기법을 보완하기 위한 방식이다.","③ 긴 작업과 짧은 작업 간의 지나친 불평등을 해소할 수 있다.","④ 우선 순위를 계산하여 그 수치가 가장 낮은 것부터 높은 순으로 우선 순위가 부여된다.","④ 우선 순위를 계산하여 그 수치가 가장 낮은 것부터 높은 순으로 우선 순위가 부여된다.","HRN 스케줄링 방식은 우선 순위를 계산하여 그 수치가 가장 높은 것부터 낮은 순으로 우선순위가 부여됩니다."
"previous","220305",4,"프로그래밍언어활용",74,"IEEE 802.11 워킹 그룹의 무선 LAN 표준화 현황 중 QoS 강화를 위해 MAC 지원 가능을 채택한 것은?","","① 802.22a","② 802.11b","③ 802.11g","④ 802.11e","④ 802.11e","802.11e는 VoIP, IPTV, 게임 등 다양한 QoS 요구 사항을 충족하기 위해 QoS 지원 기능을 제공합니다."
"previous","220305",4,"프로그래밍언어활용",75,"C언어에서 사용할 수 없는 변수명은?","","① student2019","② text-color","③ _korea","④ amount","② text-color","C언어에서는 변수명에 영어와 숫자, 그리고 언더스코어(_)만 사용 가능합니다."
"previous","220305",4,"프로그래밍언어활용",76,"스크립트 언어가 아닌 것은?","","① PHP","② Cobol","③ Basic","④ Python","② Cobol","Cobol은 전통적인 프로그래밍 언어로, 스크립트 언어의 특징을 갖고 있지 않습니다."
"previous","220305",4,"프로그래밍언어활용",77,"다음의 페이지 참조 열(Page reference string)에 대해 페이지 교체 기법으로 선입선출 알고리즘을 사용할 경우 페이지 부재(Page Fault) 횟수는? (단, 할당된 페이지 프레임 수는 3이고, 처음에는 모든 프레임이 비어 있다.)","https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F200606%2FDEVOLT_EXAM_MOCK_200606_77.gif?alt=media","① 13","② 14","③ 15","④ 20","② 14","선입선출 알고리즘은 가장 먼저 들어온 페이지를 먼저 교체하는 방식입니다."
"previous","220305",4,"프로그래밍언어활용",78,"C언어에서 배열 b[5]의 값은?","https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F200606%2FDEVOLT_EXAM_MOCK_200606_78.gif?alt=media","① 0","② 1","③ 2","④ 3","① 0","배열 b는 9개의 요소를 가지고 있으며, 1, 2, 3의 3개 요소만 초기화가 되어 있으므로 나머지 6개 요소의 값은 0입니다."
"previous","220305",4,"프로그래밍언어활용",79,"응집도가 가장 낮은 것은?","","① 기능적 응집도","② 시간적 응집도","③ 절차적 응집도","④ 우연적 응집도","④ 우연적 응집도","우연적 응집도는 모듈의 모든 구성 요소가 단순히 우연히 함께 있는 경우를 말합니다. 우연적 응집도가 가장 낮은 이유는 모듈의 기능이 명확하지 않고, 변경에 불편하기 때문입니다."
"previous","220305",4,"프로그래밍언어활용",80,"JAVA 언어에서 접근제한자가 아닌 것은?","","① public","② protected","③ package","④ private","③ package","package는 패키지를 지정하는 데 사용되는 키워드입니다."
"previous","220305",5,"정보시스템구축관리",81,"Rayleigh-Norden 곡선의 노력 분포도를 이용한 프로젝트 비용 산정기법은?","","① Putnam 모형","② 델파이 모형","③ COCOMO 모형","④ 기능점수 모형","① Putnam 모형","Putnam 모형은 소프트웨어 개발 주기의 단계별로 요구할 인력의 분포를 가정하고, Rayleigh-Norden 곡선의 노력 분포도를 이용한 프로젝트 비용 산정기법입니다."
"previous","220305",5,"정보시스템구축관리",82,"메모리상에서 프로그램의 복귀 주소와 변수사이에 특정 값을 저장해 두었다가 그 값이 변경되었을 경우 오버플로우 상태로 가정하여 프로그램 실행을 중단하는 기술은?","","① 모드체크","② 리커버리 통제","③ 시스로그","④ 스택가드","④ 스택가드","스택가드는 메모리상에서 프로그램의 복귀 주소와 변수 사이에 특정 값을 저장해 두었다가 그 값이 변경되었을 경우 오버플로우 상태로 가정하여 프로그램 실행을 중단하는 기술로, 이를 통해 스택 오버플로우 공격을 방지할 수 있습니다."
"previous","220305",5,"정보시스템구축관리",83,"백도어 탐지 방법으로 틀린 것은?","","① 무결성 검사","② 닫힌 포트 확인","③ 로그 분석","④ SetUID 파일 검사","② 닫힌 포트 확인","백도어는 일반적으로 외부에서 접근할 수 있는 포트를 열어둔 상태로 존재합니다. 따라서, 닫힌 포트만 확인하는 것은 백도어를 탐지하기에는 충분하지 않습니다."
"previous","220305",5,"정보시스템구축관리",84,"IP 또는 ICMP의 특성을 악용하여 특정 사이트에 집중적으로 데이터를 보내 네트워크 또는 시스템의 상태를 불능으로 만드는 공격 방법은?","","① TearDrop","② Smishing","③ Qshing","④ Smurfing","④ Smurfing","Smurfing 공격은 IP 또는 ICMP의 특성을 악용하여 특정 사이트에 집중적으로 데이터를 보내 네트워크 또는 시스템의 상태를 불능으로 만드는 공격 방법입니다."
"previous","220305",5,"정보시스템구축관리",85,"CMM(Capability Maturity Model) 모델의 레벨로 옳지 않은 것은?","","① 최적단계","② 관리단계","③ 정의단계","④ 계획단계","④ 계획단계","CMM 모델의 레벨에는 1단계(초기 단계), 2단계(반복 가능한 단계), 3단계(정의된 관계), 4단계(관리된 관계), 5단계(최적화 단계)가 있습니다."
"previous","220305",5,"정보시스템구축관리",86,"웹과 컴퓨터 프로그램에서 용량이 적은 데이터를 교환하기 위해 데이터 객체를 속성·값의 쌍 형태로 표현하는 형식으로 자바스크립트(JavaScript)를 토대로 개발되어진 형식은?","","① Python","② XML","③ JSON","④ WEB SEVER","③ JSON","JSON은 JavaScript Object Notation의 약자로, 자바스크립트의 객체 표현 방법을 기반으로 개발된 데이터 교환 형식입니다."
"previous","220305",5,"정보시스템구축관리",87,"크래커가 침입하여 백도어를 만들어 놓거나, 설정 파일을 변경했을 때 분석하는 도구는?","","① trace","② tripwire","③ udpdump","④ cron","② tripwire","Tripwire는 파일의 무결성을 검사하는 도구입니다. Tripwire는 시스템의 중요한 파일들에 대한 해시값을 생성하고, 이를 데이터베이스에 저장합니다. 이후에 변경된 파일의 해시값을 비교하여, 변경된 파일을 탐지합니다."
"previous","220305",5,"정보시스템구축관리",88,"소프트웨어 개발 프레임워크를 적용할 경우 기대효과로 거리가 먼 것은?","","① 품질보증","② 시스템 복잡도 증가","③ 개발 용이성","④ 변경 용이성","② 시스템 복잡도 증가","프레임워크는 특정 기능을 수행하기 위해 필요한 클래스 또는 인터페이스를 모아둔 집합체로, 적용하지 않을 때와 비교하여 시스템 복잡도가 오히려 감소하는 효과가 있을 수 있습니다."
"previous","220305",5,"정보시스템구축관리",89,"COCOMO model 중 기관 내부에서 개발된 중소 규모의 소프트웨어로 일괄 자료 처리나 과학기술 계산용, 비즈니스 자료 처리용으로 5만 라인 이하의 소프트웨어를 개발하는 유형은?","","① embeded","② organic","③ semi-detached","④ semi-embeded","② organic","COCOMO model은 소프트웨어 개발 프로젝트의 소요 시간을 예측하기 위한 모델로, 크게 organic, semi-detached, embedded의 세 가지 유형으로 구분되며, 그 중 organic 유형은 소규모의 프로젝트로, 개발팀이 경험이 풍부하고 요구 사항이 명확한 경우에 해당합니다."
"previous","220305",5,"정보시스템구축관리",90,"여러 개의 독립된 통신장치가 UWB(Ultra Wideband)기술 또는 블루투스 기술을 사용하여 통신망을 형성하는 무선 네트워크 기술은?","","① PICONET","② SCRUM","③ NFC","④ WI-SUN","① PICONET","PICONET은 Bluetooth 기술을 사용하여 2~8대의 장치가 서로 연결된 근거리 무선 네트워크입니다."
"previous","220305",5,"정보시스템구축관리",91,"프로토타입을 지속적으로 발전시켜 최종 소프트웨어 개발까지 이르는 개발방법으로 위험관리가 중심인 소프트웨어 생명주기 모형은?","","① 나선형 모형","② 델파이 모형","③ 폭포수 모형","④ 기능점수 모형","① 나선형 모형","나선형 모형은 초기 요구사항 수집과 분석, 위험분석, 프로토타입 개발, 테스트 및 검증, 그리고 최종 제품 개발 등의 단계를 반복적으로 수행하며, 위험을 최소화하고 품질을 향상시키는 것을 목표로 합니다."
"previous","220305",5,"정보시스템구축관리",92,"다음이 설명하는 용어로 옳은 것은?","https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F200606%2FDEVOLT_EXAM_MOCK_200606_92.gif?alt=media","① 하둡(Hadoop)","② 비컨(Beacon)","③ 포스퀘어(Foursquare)","④ 맴리스터(Memristor)","① 하둡(Hadoop)","하둡은 대용량 데이터를 분산 처리할 수 있는 오픈소스 프레임워크로, 이를 통해 여러 대의 컴퓨터를 하나의 클러스터로 구성하여 데이터를 처리할 수 있습니다."
"previous","220305",5,"정보시스템구축관리",93,"소인수 분해 문제를 이용한 공개키 암호화 기법에 널리 사용되는 암호 알고리즘 기법은?","","① RSA","② ECC","③ PKI","④ PEM","① RSA","RSA는 Rivest, Shamir, Adleman이 개발한 공개키 암호화 기법으로, 소인수 분해 문제를 이용합니다. RSA는 현재 가장 널리 사용되는 공개키 암호화 기법으로, SSL, TLS, SSH 등 다양한 암호화 프로토콜에서 사용됩니다."
"previous","220305",5,"정보시스템구축관리",94,"LOC 기법에 의하여 예측된 총 라인수가 50000라인, 프로그래머의 월 평균 생산성이 200라인, 개발에 참여할 프로그래머가 10인 일 때, 개발 소요 기간은?","","① 25개월","② 50개월","③ 200개월","④ 2000개월","① 25개월","LOC 기법에 의한 개발 소요 기간은 총 LOC / 월 평균 생산성 / 참여 인원으로 계산됩니다."
"previous","220305",5,"정보시스템구축관리",95,"최대 홉수를 15로 제한한 라우팅 프로토콜은?","","① RIP","② OSPF","③ Static","④ EIGRP","① RIP","RIP(Routing Information Protocol)는 거리 벡터 라우팅 프로토콜로, 라우터 간의 라우팅 정보를 홉 수와 함께 전송합니다. RIP는 최대 홉 수를 15로 제한하고 있으며, 홉 수가 16 이상인 경로는 무시합니다."
"previous","220305",5,"정보시스템구축관리",96,"컴퓨터 사용자의 키보드 움직임을 탐지해 ID, 패스워드 등 개인의 중요한 정보를 몰래 빼가는 해킹 공격은?","","① Key Logger Attack","② Worm","③ Rollback","④ Zombie Worm","① Key Logger Attack","키로거(Key Logger)는 사용자의 키보드 입력을 기록하는 프로그램입니다. 키로거는 사용자의 ID, 패스워드, 신용카드 번호 등 개인의 중요한 정보를 빼가는 데 악용될 수 있습니다."
"previous","220305",5,"정보시스템구축관리",97,"테일러링(Tailoring) 개발 방법론의 내부 기준에 해당하지 않는 것은?","","① 납기/비용","② 기술환경","③ 구성원 능력","④ 국제표준 품질기준","④ 국제표준 품질기준","테일러링 개발 방법론은 표준 개발 방법론을 프로젝트의 특성에 맞게 수정하고 보완하는 방법론입니다."
"previous","220305",5,"정보시스템구축관리",98,"폭포수 모형의 특징으로 거리가 먼 것은?","","① 개발 중 발생한 요구사항을 쉽게 반영할 수 있다.","② 순차적인 접근방법을 이용한다.","③ 단계적 정의와 산출물이 명확하다.","④ 모형의 적용 경험과 성공사례가 많다.","① 개발 중 발생한 요구사항을 쉽게 반영할 수 있다.","폭포수 모델은 선형적인 개발 프로세스 모델로, 각 단계가 완료되어야 다음 단계로 진행되기 때문에 개발 중 발생한 요구사항을 쉽게 반영하기 어렵습니다."
"previous","220305",5,"정보시스템구축관리",99,"다음 설명의 정보보안 침해 공격 관련 용어는?","https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F200606%2FDEVOLT_EXAM_MOCK_200606_99.gif?alt=media","① Smishing","② C-brain","③ Trojan Horse","④ Ransomware","④ Ransomware","Smishing은 SMS + Fishing 즉 SMS를 이용하는 피싱 사기를, C-Brain은 MS-DOS용 컴퓨터 바이러스로 기억 매체의 시동 섹터를 감염시키는 것을, 트로이 목마는 정상적인 기능인 척 하는 악성 프로그램을 가리키는 용어입니다."
"previous","220305",5,"정보시스템구축관리",100,"시스템 내의 정보는 오직 인가된 사용자만 수정할 수 있는 보안 요소는?","","① 기밀성","② 부인방지","③ 가용성","④ 무결성","④ 무결성","무결성은 정보의 정확성, 완전성, 일관성을 보장하는 것을 의미합니다."