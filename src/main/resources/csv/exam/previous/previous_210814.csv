test,date,snumber,sname,qnumber,qname1,qname2,example1,example2,example3,example4,answer,explain
"previous","220305",1,"소프트웨어설계",1,"요구사항 검증(Requirements Validation)과 관련한 설명으로 틀린 것은?","","① 요구사항이 고객이 정말 원하는 시스템을제대로 정의하고 있는지 점검하는 과정이다.","② 개발완료 이후에 문제점이 발견될 경우 막대한 재작업 비용이 들 수 있기 때문에 요구사항 검증은 매우 중요하다.","③ 요구사항이 실제 요구를 반영하는지, 문서상의 요구사항은 서로 상충되지 않는지 등을 점검한다.","④ 요구사항 검증 과정을 통해 모든 요구사항 문제를 발견할 수 있다.","④ 요구사항 검증 과정을 통해 모든 요구사항 문제를 발견할 수 있다.","요구사항 검증을 통해 대부분의 요구사항 문제를 발견할 수 있지만, 모든 요구사항 문제를 발견할 수 있는 것은 아닙니다."
"previous","220305",1,"소프트웨어설계",2,"UML 모델에서 한 사물의 명세가 바뀌면 다른사물에 영향을 주며, 일반적으로 한 클래스가다른 클래스를 오퍼레이션의 매개변수로 사용하는 경우에 나타나는 관계는?","","① Association","② Dependency","③ Realization","④ Generalization","② Dependency","한 클래스의 명세가 바뀌면 다른 클래스에 영향을 주며, 일반적으로 한 클래스가 다른 클래스를 오퍼레이션의 매개변수로 사용하는 경우에 나타나는 관계는 Dependency입니다."
"previous","220305",1,"소프트웨어설계",3,"익스트림 프로그래밍 (XP)에 대한 설명으로 틀린 것은?","","① 빠른 개발을 위해 테스트를 수행하지 않는다.","② 사용자의 요구사항은 언제든지 변할 수있다.","③ 고객과 직접 대면하며 요구사항을 이야기하기 위해 사용자 스토리(User Story)를 활용할 수 있다.","④ 기존의 방법론에 비해 실용성(Pragmatism)을 강조한 것이라고 볼 수있다.","① 빠른 개발을 위해 테스트를 수행하지 않는다.","익스트림 프로그래밍(XP)은 애자일 방법론의 한 종류로, 빠른 개발과 품질을 동시에 달성하기 위해 테스트를 중요하게 생각합니다."
"previous","220305",1,"소프트웨어설계",4,"소프트웨어 설계에서 사용되는 대표적인 추상화(Abstraction) 기법이 아닌 것은?","","① 자료 추상화","② 제어 추상화","③ 과정 추상화","④ 강도 추상화","④ 강도 추상화","강도 추상화는 소프트웨어 설계에서 사용되는 개념이 아닙니다."
"previous","220305",1,"소프트웨어설계",5,"객체지향 설계에서 정보 은닉(Information Hiding)과 관련한 설명으로 틀린 것은?","","① 필요하지 않은 정보는 접근할 수 없도록 하여 한 모듈 또는 하부시스템이 다른 모듈의 구현에 영향을 받지 않게 설계되는것을 의미한다.","② 모듈들 사이의 독립성을 유지시키는 데 도움이 된다.","③ 설계에서 은닉되어야 할 기본 정보로는 IP주소와 같은 물리적 코드, 상세 데이터 구조 등이 있다.","④ 모듈 내부의 자료 구조와 접근 동작들에만 수정을 국한하기 때문에 요구사항 등변화에 따른 수정이 불가능하다.","④ 모듈 내부의 자료 구조와 접근 동작들에만 수정을 국한하기 때문에 요구사항 등변화에 따른 수정이 불가능하다.","정보 은닉은 모듈 내부의 자료 구조와 접근 동작들을 숨기기 때문에, 요구사항 변화에 따라 이러한 부분들을 수정할 수 있습니다."
"previous","220305",1,"소프트웨어설계",6,"소프트웨어 공학에서 모델링 (Modeling)과관련한 설명으로 틀린 것은?","","① 개발팀이 응용문제를 이해하는 데 도움을 줄 수 있다.","② 유지보수 단계에서만 모델링 기법을 활용한다.","③ 개발될 시스템에 대하여 여러 분야의 엔지니어들이 공통된 개념을 공유하는 데 도움을 준다.","④ 절차적인 프로그램을 위한 자료흐름도는 프로세스 위주의 모델링 방법이다.","② 유지보수 단계에서만 모델링 기법을 활용한다.","모델링 기법은 소프트웨어 개발의 모든 단계에서 활용됩니다."
"previous","220305",1,"소프트웨어설계",7,"요구 분석(Requirement Analysis)에 대한 설명으로 틀린 것은?","","① 요구 분석은 소프트웨어 개발의 실제적인 첫 단계로 사용자의 요구에 대해 이해하는 단계라 할 수 있다.","② 요구 추출(Requirement Elicitation)은 프로젝트 계획 단계에 정의한 문제의 범위 안에 있는 사용자의 요구를 찾는 단계이다.","③ 도메인 분석(Domain Analysis)은 요구에 대한 정보를 수집하고 배경을 분석하여 이를 토대로 모델링을 하게 된다.","④ 기능적(Functional) 요구에서 시스템 구축에대한 성능, 보안, 품질, 안정 등에 대한 성능, 보안, 품질, 안정 등에 대한 요구사항을 도출한다.","④ 기능적(Functional) 요구에서 시스템 구축에대한 성능, 보안, 품질, 안정 등에 대한 성능, 보안, 품질, 안정 등에 대한 요구사항을 도출한다.","기능적 요구에서 시스템 구축에 대한 성능, 보안, 품질, 안정 등에 대한 요구사항을 도출하는 것은 옳지 않습니다."
"previous","220305",1,"소프트웨어설계",8,"클래스 다이어그램의 요소로 다음 설명에 해당하는 용어는?","https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F210814%2FDEVOLT_EXAM_MOCK_210814_08.gif?alt=media","① Instance","② Operation","③ Item","④ Hiding","② Operation","클래스 다이어그램에서 Operation은 클래스가 수행할 수 있는 동작이나 함수를 나타내는 요소입니다."
"previous","220305",1,"소프트웨어설계",9,"분산 시스템을 위한 마스터-슬레이브(Master-Slave) 아키텍처에 대한 설명으로 틀린 것은?","","① 일반적으로 실시간 시스템에서 사용된다.","② 마스터 프로세스는 일반적으로 연산, 통신, 조정을 책임진다.","③ 슬레이브 프로세스는 데이터 수집 기능을 수행할 수 없다.","④ 마스터 프로세스는 슬레이브 프로세스들을 제어할 수 있다.","③ 슬레이브 프로세스는 데이터 수집 기능을 수행할 수 없다.","슬레이브 프로세스는 데이터를 수집하여 마스터 프로세스에 전송할 수 있습니다."
"previous","220305",1,"소프트웨어설계",10,"슬레이브 프로세스는 데이터를 수집하여 마스터 프로세스에 전송할 수 있습니다.","","① Data Flow Diagram","② UML Diagram","③ E-R Diagram","④ AVL Diagram","④ AVL Diagram","AVL Diagram은 자료구조를 표현하는 다이어그램으로, 요구 사항 정의 및 분석·설계의 결과물을 표현하기 위한 다이어그램은 아닙니다."
"previous","220305",1,"소프트웨어설계",11,"객체지향의 주요 개념에 대한 설명으로 틀린 것은?","","① 캡슐화는 상위클래스에서 속성이나 연산을 전달받아 새로운 형태의 클래스로 확장하여 사용하는 것을 의미한다.","② 객체는 실세계에 존재하거나 생각할 수 있는 것을 말한다.","③ 클래스는 하나 이상의 유사한 객체들을 묶어 공통된 특성을 표현한 것이다.","④ 다형성은 상속받은 여러 개의 하위 객체들이 다른 형태의 특성을 갖는 객체로 이용될 수 있는 성질이다.","① 캡슐화는 상위클래스에서 속성이나 연산을 전달받아 새로운 형태의 클래스로 확장하여 사용하는 것을 의미한다.","객체지향의 주요 개념인 캡슐화는 객체의 속성과 기능을 하나로 묶어서 외부로부터 은닉하는 것을 의미합니다."
"previous","220305",1,"소프트웨어설계",12,"사용자 인터페이스(User Interface)에 대한 설명으로 틀린 것은?","","① 사용자와 시스템이 정보를 주고받는 상호작용이 잘 이루어지도록 하는 장치나 소프트웨어를 의미한다.","② 편리한 유지보수를 위해 개발자 중심으로 설계되어야 한다.","③ 배우기가 용이하고 쉽게 사용할 수 있도록 만들어져야 한다.","④ 사용자 요구사항이 UI에 반영될 수 있도록 구성해야 한다.","② 편리한 유지보수를 위해 개발자 중심으로 설계되어야 한다.","UI는 사용자의 편의성과 사용성을 최우선으로 고려하여 설계되어야 합니다."
"previous","220305",1,"소프트웨어설계",13,"GoF(Gang of Four) 디자인 패턴과 관련한 설명으로 틀린 것은?","","① 디자인 패턴을 목적(Purpose)으로 분류할 때 생성, 구조, 행위로 분류할 수 있다.","② Strategy 패턴은 대표적인 구조 패턴으로 인스턴스를 복제하여 사용하는 구조를 말한다.","③ 행위 패턴은 클래스나 객체들이 상호작용하는 방법과 책임을 분산하는 방법을 정의한다.","④ Singleton 패턴은 특정 클래스의 인스턴스가 오직 하나임을 보장하고, 이 인스턴스에 대한 접근 방법을 제공한다.","② Strategy 패턴은 대표적인 구조 패턴으로 인스턴스를 복제하여 사용하는 구조를 말한다.","Strategy 패턴은 구조 패턴이 아니라 행위 패턴입니다."
"previous","220305",1,"소프트웨어설계",14,"애자일 개발 방법론과 관련한 설명으로 틀린 것은?","","① 빠른 릴리즈를 통해 문제점을 빠르게 파악할 수 있다.","② 정확한 결과 도출을 위해 계획 수립과 문서화에 중점을 둔다.","③ 고객과의 의사소통을 중요하게 생각한다.","④ 진화하는 요구사항을 수용하는데 적합하다.","② 정확한 결과 도출을 위해 계획 수립과 문서화에 중점을 둔다.","애자일 개발 방법론은 변화에 유연하게 대응하기 위해 계획 수립과 문서화를 최소화합니다."
"previous","220305",1,"소프트웨어설계",15,"럼바우(Rumbaugh)의 객체지향 분석 기법 중 자료 흐름도(DFD)를 주로 이용하는 것은?","","① 기능 모델링","② 동적 모델링","③ 객체 모델링","④ 정적 모델링","① 기능 모델링","자료 흐름도는 시스템의 데이터 흐름을 표현하는 모델로, 기능 모델링에 속합니다."
"previous","220305",1,"소프트웨어설계",16,"순차 다이어그램(Sequence Diagram)과 관련한 설명으로 틀린 것은?","","① 객체들의 상호 작용을 나타내기 위해 사용한다.","② 시간의 흐름에 따라 객체들이 주고 받는 메시지의 전달 과정을 강조한다.","③ 동적 다이어그램보다는 정적 다이어그램에 가깝다.","④ 교류 다이어그램(Interaction Diagram)의 한 종류로 볼 수 있다.","③ 동적 다이어그램보다는 정적 다이어그램에 가깝다.","순차 다이어그램은 시간의 흐름에 따라 객체들이 주고 받는 메시지의 전달 과정을 강조하는 다이어그램으로, 시스템의 동작을 표현하는 데 사용됩니다."
"previous","220305",1,"소프트웨어설계",17,"객체지향 분석 기법과 관련한 설명으로 틀린것은?","","① 동적 모델링 기법이 사용될 수 있다.","② 기능 중심으로 시스템을 파악하며 순차적인처리가 중요시되는 하향식(Top-down)방식으로 볼 수 있다.","③ 데이터와 행위를 하나로 묶어 객체를 정의내리고 추상화시키는 작업이라 할 수 있다.","④ 코드 재사용에 의한 프로그램 생산성 향상 및 요구에 따른 시스템의 쉬운 변경이 가능하다.","② 기능 중심으로 시스템을 파악하며 순차적인처리가 중요시되는 하향식(Top-down)방식으로 볼 수 있다.","객체지향 분석 기법은 객체와 관계를 중심으로 시스템을 파악하는 기법입니다."
"previous","220305",1,"소프트웨어설계",18,"대표적으로 DOS 및 Unix 등의 운영체제에서조작을 위해 사용하던 것으로, 정해진 명령문자열을 입력하여 시스템을 조작하는 사용자인터페이스(User Interface)는?","","① GUI(Graphical User Interface)","② CLI(Command Line Interface)","③ CUI(Cell User Interface)","④ MUI(Mobile User Interface)","② CLI(Command Line Interface)","CLI(Command Line Interface)는 명령어를 입력하여 시스템을 조작하는 사용자 인터페이스입니다."
"previous","220305",1,"소프트웨어설계",19,"분산 시스템에서의 미들웨어 (Middleware)와 관련한 설명으로 틀린 것은?","","① 분산 시스템에서 다양한 부분을 관리하고 통신하며 데이터를 교환하게 해주는소프트웨어로 볼 수 있다.","② 위치 투명성(Location Transparency)을 제공한다.","③ 분산 시스템의 여러 컴포넌트가 요구하는 재사용가능한 서비스의 구현을 제공한다.","④ 애플리케이션과 사용자 사이에서만 분산서비스를 제공한다.","④ 애플리케이션과 사용자 사이에서만 분산서비스를 제공한다.","미들웨어는 애플리케이션과 운영체제, 하드웨어 사이에서 분산 시스템의 다양한 부분을 관리하고 통신하며 데이터를 교환하게 해주는 소프트웨어입니다."
"previous","220305",1,"소프트웨어설계",20,"소프트웨어 아키텍처와 관련한 설명으로 틀린것은?","","① 파이프 필터 아키텍처에서 데이터는 파이프를 통해 양방향으로 흐르며, 필터 이동 시 오버헤드가 발생하지 않는다.","② 외부에서 인식할 수 있는 특성이 담긴 소프트웨어의 골격이 되는 기본 구조로 볼수 있다.","③ 데이터 중심 아키텍처는 공유 데이터저장소를 통해 접근자 간의 통신이 이루어지므로 각 접근자의 수정과 확장이 용이하다.","④ 이해 관계자들의 품질 요구사항을 반영하여품질 속성을 결정한다.","① 파이프 필터 아키텍처에서 데이터는 파이프를 통해 양방향으로 흐르며, 필터 이동 시 오버헤드가 발생하지 않는다.","필터는 데이터를 처리하는 소프트웨어 모듈로, 데이터 처리 과정에서 필터를 이동해야 하는 경우, 필터의 전후 처리를 위한 오버헤드가 발생합니다."
"previous","220305",2,"소프트웨어개발",21,"테스트를 목적에 따라 분류했을 때,강도(Stress) 테스트에 대한 설명으로 옳은것은?","","① 시스템에 고의로 실패를 유도하고 시스템이정상적으로 복귀하는지 테스트한다.","② 시스템에 과다 정보량을 부과하여 과부하 시에도 시스템이 정상적으로 작동되는지를 테스트한다.","③ 사용자의 이벤트에 시스템이 응답하는 시간,특정 시간 내에 처리하는 업무량, 사용자 요구에 시스템이 반응하는 속도 등을 테스트한다.","④ 부당하고 불법적인 침입을 시도하여 보안시스템이 불법적인 침투를 잘 막아내는지 테스트한다.","② 시스템에 과다 정보량을 부과하여 과부하 시에도 시스템이 정상적으로 작동되는지를 테스트한다.","1은 복원력 테스트, 3은 성능 테스트, 4는 보안 테스트에 해당합니다."
"previous","220305",2,"소프트웨어개발",22,"다음 자료를 버블 정렬을 이용하여오름차순으로 정렬할 경우 PASS 3의 결과는?","https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F210814%2FDEVOLT_EXAM_MOCK_210814_22.gif?alt=media","① 6, 3, 5, 7, 9","② 3, 5, 6, 7, 9","③ 6, 7, 3, 5, 9","④ 3, 5, 9, 6, 7","② 3, 5, 6, 7, 9","버블 정렬은 서로 인접한 두 원소를 검사하여 정렬하는 알고리즘입니다."
"previous","220305",2,"소프트웨어개발",23,"다음 그래프에서 정점 A를 선택하여 깊이우선탐색(DFS)으로 운행한 결과는?","https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F210814%2FDEVOLT_EXAM_MOCK_210814_23.gif?alt=media","① ABECDFG","② ABECFDG","③ ABCDEFG","④ ABEFGCD","④ ABEFGCD","정점 A에서 시작하여 DFS를 수행하면 A-B-E-F-G-C-D 순서로 운행하게 되어 ABEFGCD가 됩니다."
"previous","220305",2,"소프트웨어개발",24,"다음 설명에 부합하는 용어로 옳은 것은?","https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F210814%2FDEVOLT_EXAM_MOCK_210814_24.gif?alt=media","① 통합 프로그램","② 저장소","③ 모듈","④ 데이터","③ 모듈","모듈은 하나의 기능을 수행하는 프로그램의 일부분으로, 독립적으로 개발하고 테스트할 수 있으며, 다른 모듈과 결합하여 하나의 큰 프로그램을 만들 수 있습니다."
"previous","220305",2,"소프트웨어개발",25,"테스트 드라이버(Test Driver)에 대한 설명으로 틀린 것은?","","① 시험대상 모듈을 호출하는 간이 소프트웨어이다.","② 필요에 따라 매개 변수를 전달하고 모듈을 수행한 후의 결과를 보여줄 수 있다.","③ 상향식 통합 테스트에서 사용된다.","④ 테스트 대상 모듈이 호출하는 하위 모듈의 역할을 한다.","④ 테스트 대상 모듈이 호출하는 하위 모듈의 역할을 한다.","테스트 드라이버는 시험대상 모듈을 호출하는 간이 소프트웨어로, 테스트 대상 모듈을 테스트하기 위한 입력값을 제공하고, 테스트 결과를 확인하는 역할을 합니다."
"previous","220305",2,"소프트웨어개발",26,"다음 중 선형 구조로만 묶인 것은?","","① 스택, 트리","② 큐, 데크","③ 큐, 그래프","④ 리스트, 그래프","② 큐, 데크","스택, 트리, 그래프는 모두 비선형 구조입니다."
"previous","220305",2,"소프트웨어개발",27,"다음은 스택의 자료 삭제 알고리즘이다. ⓐ에 들어 갈 내용으로 옳은 것은? (단, Top: 스택포인터, S: 스택의 이름)","https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F210814%2FDEVOLT_EXAM_MOCK_210814_27.gif?alt=media","① Overflow","② Top = Top + 1","③ Underflow","④ Top = Top","③ Underflow","스택에서 데이터를 삭제할 때에는 Top 값을 1 감소시키고 해당 위치의 데이터를 반환하지만, 이미 스택이 비어 있는 상태에서 삭제를 시도하면 Top 값이 음수가 되는데 이는 스택의 범위를 벗어나는 것이므로 Underflow가 발생합니다."
"previous","220305",2,"소프트웨어개발",28,"제품 소프트웨어의 사용자 매뉴얼 작성절차로 (가)~(다)와 [보기]의 기호를 바르게 연결한 것은?","https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F210814%2FDEVOLT_EXAM_MOCK_210814_28.gif?alt=media","① (가)-㉠, (나)-㉡, (다)-㉢","② (가)-㉢, (나)-㉡, (다)-㉠","③ (가)-㉠, (나)-㉢, (다)-㉡","④ (가)-㉢, (나)-㉠, (다)-㉡","② (가)-㉢, (나)-㉡, (다)-㉠","(가)는 제품 소프트웨어의 사용자 매뉴얼 작성 계획 수립 단계, (나)는 제품 소프트웨어의 사용자 매뉴얼 작성 단계, (다)는 제품 소프트웨어의 사용자 매뉴얼 검토 및 보완 단계입니다."
"previous","220305",2,"소프트웨어개발",29,"순서가 A, B, C, D로 정해진 입력 자료를 스택에 입력한 후 출력한 결과로 불가능한 것은?","","① D, C, B, A","② B, C, D, A","③ C, B, A, D","④ D, B, C, A","④ D, B, C, A","스택은 후입선출(LIFO) 구조를 가진 자료구조로, 가장 나중에 입력된 데이터가 가장 먼저 출력됩니다."
"previous","220305",2,"소프트웨어개발",30,"소프트웨어 테스트에서 검증(Verification)과 확인 (Validation)에 대한 설명으로 틀린 것은?","","① 소프트웨어 테스트에서 검증과 확인을 구별하면 찾고자 하는 결함 유형을 명확하게 하는 데 도움이 된다.","② 검증은 소프트웨어 개발 과정을 테스트하는 것이고, 확인은 소프트웨어 결과를 테스트 것이다.","③ 검증은 작업 제품이 요구 명세의 기능, 비기능 요구사항을 얼마나 잘 준수하는지 측정하는 작업이다.","④ 검증은 작업 제품이 사용자의 요구에 적합한지 측정하며, 확인은 작업 제품이 개발자의 기대를 충족시키는지를 측정한다.","④ 검증은 작업 제품이 사용자의 요구에 적합한지 측정하며, 확인은 작업 제품이 개발자의 기대를 충족시키는지를 측정한다.","검증은 요구 사항을 충족하는지 여부를 확인하는 활동이고, 확인은 실제 요구를 충족하는지 여부를 확인하는 활동입니다."
"previous","220305",2,"소프트웨어개발",31,"개별 모듈을 시험하는 것으로 모듈이 정확하게 구현되었는지, 예정한 기능이 제대로 수행되는지를 점검하는 것이 주요 목적인 테스트는?","","① 통합 테스트(Integration Test)","② 단위 테스트(Unit Test)","③ 시스템 테스트(System Test)","④ 인수 테스트(Acceptance Test)","② 단위 테스트(Unit Test)","단위 테스트는 소프트웨어의 가장 작은 단위인 모듈을 대상으로 하는 테스트로, 모듈이 정확하게 구현되었는지, 예정한 기능이 제대로 수행되는지를 점검하는 것이 주요 목적입니다."
"previous","220305",2,"소프트웨어개발",32,"형상 관리의 개념과 절차에 대한 설명으로 틀린 것은?","","① 형상 식별은 형상 관리 계획을 근거로 형상관리의 대상이 무엇인지 식별하는 과정이다.","② 형상 관리를 통해 가시성과 추적성을 보장함으로써 소프트웨어의 생산성과 품질을 높일 수 있다.","③ 형상 통제 과정에서는 형상 목록의 변경 요구를 즉시 수용 및 반영해야 한다.","④ 형상 감사는 형상 관리 계획대로 형상관리가 진행되고 있는지, 형상 항목의 변경이 요구 사항에 맞도록 제대로 이뤄졌는지 등을 살펴보는 활동이다.","③ 형상 통제 과정에서는 형상 목록의 변경 요구를 즉시 수용 및 반영해야 한다.","형상 통제 과정에서는 형상 목록의 변경 요구를 검토하여 적절한 경우에만 수용 및 반영해야 합니다."
"previous","220305",2,"소프트웨어개발",33,"소스코드 정적 분석(Static Analysis)에 대한 설명으로 틀린 것은?","","① 소스 코드를 실행시키지 않고 분석한다.","② 코드에 있는 오류나 잠재적인 오류를 찾아내기 위한 활동이다.","③ 하드웨어적인 방법으로만 코드 분석이 가능하다.","④ 자료 흐름이나 논리 흐름을 분석하여 비정상적인 패턴을 찾을 수 있다.","③ 하드웨어적인 방법으로만 코드 분석이 가능하다.","소스코드 정적 분석은 소스코드를 실행시키지 않고 분석하는 방법으로, 하드웨어적인 방법뿐만 아니라 소프트웨어적인 방법으로도 코드 분석이 가능합니다."
"previous","220305",2,"소프트웨어개발",34,"소프트웨어 개발 활동을 수행함에 있어서 시스템이 고장(Failure)을 일으키게 하며, 오류(Error)가 있는 경우 발생하는 것은?","","① Fault","② Testcase","③ Mistake","④ Inspection","① Fault","소프트웨어 개발 활동에서 Fault는 소프트웨어 코드, 설계, 또는 데이터에 존재하는 결함을 의미합니다."
"previous","220305",2,"소프트웨어개발",35,"코드의 간결성을 유지하기 위해 사용되는 지침으로 틀린 것은?","","① 공백을 이용하여 실행문 그룹과 주석을 명확히 구분한다.","② 복잡한 논리식과 산술식은 괄호와 들여쓰기(Indentation)를 통해 명확히 표현한다.","③ 빈 줄을 사용하여 선언부와 구현부를 구별한다.","④ 한 줄에 최대한 많은 문장을 코딩한다.","④ 한 줄에 최대한 많은 문장을 코딩한다.","코드의 간결성을 유지하기 위해서는 한 줄에 최대한 많은 문장을 코딩하는 것이 아니라, 한 줄에 하나의 문장만 코딩하는 것이 좋습니다."
"previous","220305",2,"소프트웨어개발",36,"소프트웨어 품질 목표 중 하나 이상의 하드웨어 환경에서 운용되기 위해 쉽게 수정될 수 있는 시스템 능력을 의미하는 것은?","","① Portability","② Efficiency","③ Usability","④ Correctness","① Portability","Efficiency는 소프트웨어의 성능을, Usability는 소프트웨어의 사용 용이성을, Correctness는 소프트웨어가 요구 사항을 충족하는 정도를 의미합니다."
"previous","220305",2,"소프트웨어개발",37,"다음 중 최악의 경우 검색 효율이 가장 나쁜트리 구조는?","","① 이진 탐색트리","② AVL 트리","③ 2-3 트리","④ 레드-블랙 트리","① 이진 탐색트리","이진 탐색 트리에서 데이터가 삽입 순서에 따라 편향된 트리가 만들어진다면, 최악의 경우 탐색 대상을 맨 아래까지 내려가야 하는 경우가 발생할 수 있는데, 이 경우 검색 효율은 O(n)이 됩니다."
"previous","220305",2,"소프트웨어개발",38,"다음 트리에 대한 중위 순회 운행 결과는?","https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F210814%2FDEVOLT_EXAM_MOCK_210814_38.gif?alt=media","① ABDCEF","② ABCDEF","③ DBECFA","④ DBAECF","④ DBAECF","중위 순회는 왼쪽 자식 노드, 현재 노드, 오른쪽 자식 노드 순으로 운행하므로, 이를 따라가면 DBAECF가 됩니다."
"previous","220305",2,"소프트웨어개발",39,"테스트 케이스 자동 생성 도구를 이용하여 테스트 데이터를 찾아내는 방법이 아닌 것은?","","① 스터브(Stub)와 드라이버(Driver)","② 입력 도메인 분석","③ 랜덤(Random) 테스트","④ 자료 흐름도","① 스터브(Stub)와 드라이버(Driver)","스터브(Stub)와 드라이버(Driver)는 테스트 케이스 자동 생성 도구를 이용하지 않고, 수동으로 테스트 케이스를 생성하는 방법입니다."
"previous","220305",2,"소프트웨어개발",40,"저작권 관리 구성 요소 중 패키저(Packager)의 주요 역할로 옳은 것은?","","① 콘텐츠를 제공하는 저작권자를 의미한다.","② 콘텐츠를 메타 데이터와 함께 배포 가능한 단위로 묶는다.","③ 라이선스를 발급하고 관리한다.","④ 배포된 콘텐츠의 이용 권한을 통제한다.","② 콘텐츠를 메타 데이터와 함께 배포 가능한 단위로 묶는다.","저작권 관리 구성 요소 중 패키저(Packager)는 콘텐츠를 메타 데이터와 함께 배포 가능한 단위로 묶는 역할을 합니다."
"previous","220305",3,"데이터베이스구축",41,"데이터베이스의 무결성 규정(Integrity Rule)과 관련한 설명으로 틀린 것은?","","① 무결성 규정에는 데이터가 만족해야 될 제약 조건, 규정을 참조할 때 사용하는 식별자 등의 요소가 포함될 수 있다.","② 무결성 규정의 대상으로는 도메인, 키, 종속성 등이 있다.","③ 정식으로 허가 받은 사용자가 아닌 불법적인 사용자에 의한 갱신으로부터 데이터베이스를 보호하기 위한 규정이다.","④ 릴레이션 무결성 규정(Relation Integrity Rules)은 릴레이 션을 조작하는 과정에서의 의미적 관계(Semantic Relationship)을 명세한 것이다.","③ 정식으로 허가 받은 사용자가 아닌 불법적인 사용자에 의한 갱신으로부터 데이터베이스를 보호하기 위한 규정이다.","데이터베이스의 무결성 규정은 데이터베이스의 정확성과 일관성을 유지하기 위한 규정입니다."
"previous","220305",3,"데이터베이스구축",42,"데이터베이스에서 하나의 논리적 기능을 수행하기 위한 작업의 단위 또는 한꺼번에 모두 수행되어야 할 일련의 연산들을 의미하는 것은?","","① 트랜잭션","② 뷰","③ 튜플","④ 카디널리티","① 트랜잭션","트랜잭션은 원자성(atomicity), 일관성(consistency), 격리성(isolation), 지속성(durability)의 네 가지 특성을 갖습니다."
"previous","220305",3,"데이터베이스구축",43,"다음 두 릴레이션 Rl과 R2의 카티션 프로덕트(cartesian product) 수행 결과는?","https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F210814%2FDEVOLT_EXAM_MOCK_210814_43.gif?alt=media","① https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F210814%2FDEVOLT_EXAM_MOCK_210814_43_01.gif?alt=media","② https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F210814%2FDEVOLT_EXAM_MOCK_210814_43_02.gif?alt=media","③ https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F210814%2FDEVOLT_EXAM_MOCK_210814_43_03.gif?alt=media","④ https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F210814%2FDEVOLT_EXAM_MOCK_210814_43_04.gif?alt=media","④ https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F210814%2FDEVOLT_EXAM_MOCK_210814_43_04.gif?alt=media","카티션 프로덕트는 두 릴레이션의 모든 가능한 조합을 구하는 것이므로, R1의 튜플 수가 3개이고 R2의 튜플 수가 2개이므로 총 3 x 2 = 6개의 튜플이 생성됩니다."
"previous","220305",3,"데이터베이스구축",44,"물리적 데이터베이스 설계에 대한 설명으로 거리가 먼 것은?","","① 물리적 설계의 목적은 효율적인 방법으로 데이터를 저장하는 것이다.","② 트랜잭션 처리량과 응답시간, 디스크 용량 등을 고려해야 한다.","③ 저장 레코드의 형식, 순서, 접근 경로와 같은 정보를 사용하여 설계한다.","④ 트랜잭션의 인터페이스를 설계하며, 데이터 타입 및 데이터 타입들 간의 관계로 표현한다.","④ 트랜잭션의 인터페이스를 설계하며, 데이터 타입 및 데이터 타입들 간의 관계로 표현한다.","트랜잭션의 인터페이스를 설계하거나 데이터 타입 및 데이터 타입들 간의 관계를 표현하는 것은 물리적 데이터베이스 설계의 범위에 속하지 않습니다."
"previous","220305",3,"데이터베이스구축",45,"다음 중 기본키는 NULL 값을 가져서는 안되며, 릴레이션 내에 오직 하나의 값만 존재해야 한다는 조건을 무엇이라 하는가?","","① 개체 무결성 제약조건","② 참조 무결성 제약조건","③ 도메인 무결성 제약조건","④ 속성 무결성 제약조건","① 개체 무결성 제약조건","기본키는 NULL 값을 가져서는 안되며, 릴레이션 내에 오직 하나의 값만 존재해야 한다는 조건은 개체 무결성 제약조건에 해당합니다."
"previous","220305",3,"데이터베이스구축",46,"SQL문에서 HAVING을 사용할 수 있는 절은?","","① LIKE 절","② WHERE 절","③ GROUP BY 절","④ ORDER BY 절","③ GROUP BY 절","HAVING 절은 GROUP BY 절에 의해 그룹화된 결과에 대한 조건을 지정하는 절로, GROUP BY 절이 사용된 경우에만 사용할 수 있습니다."
"previous","220305",3,"데이터베이스구축",47,"관계 데이터베이스에 있어서 관계 대수 연산이 아닌 것은?","","① 디비전(Division)","② 프로젝트(Project)","③ 조인(Join)","④ 포크(Fork)","④ 포크(Fork)","포크(Fork)는 관계 데이터베이스에서 사용되는 연산이 아니며, 병렬 처리에서 사용되는 연산입니다."
"previous","220305",3,"데이터베이스구축",48,"학적 테이블에서 전화번호가 Null값이 아닌 학생명을 모두 검색할 때, SQL 구문으로 옳은 것은?","","① SELECT FROM 07 WHERE 전화번호 DON'T NULL;","② SELECT FROM WHERE 전화번호 != NOT NULL;","③ SELECT 학생명 FROM 학적 WHERE 전화번호 IS NOT NULL;","④ SELECT FROM WHERE 전화번호 IS NULL;","③ SELECT 학생명 FROM 학적 WHERE 전화번호 IS NOT NULL;","SQL에서 IS NOT NULL은 값이 NULL이 아닌 것을 의미합니다. 따라서, 학적 테이블에서 전화번호가 NULL값이 아닌 학생명을 모두 검색하려면 다음과 같은 SQL 구문을 사용합니다."
"previous","220305",3,"데이터베이스구축",49,"관계형 데이터베이스에서 다음 설명에 해당하는 키(Key)는?","https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F210814%2FDEVOLT_EXAM_MOCK_210814_49.gif?alt=media","① 후보키","② 대체키","③ 슈퍼키","④ 외래키","③ 슈퍼키","슈퍼키는 유일성을 보장하는 하나 이상의 속성으로 구성된 키로, 다른 키들의 상위 개념입니다."
"previous","220305",3,"데이터베이스구축",50,"데이터베이스에서 인덱스(Index)와 관련한 설명으로 틀린 것은?","","① 인덱스의 기본 목적은 검색 성능을 최적화하는 것으로 볼 수 있다.","② B-트리 인덱스는 분기를 목적으로 하는 Branch Block을 가지고 있다.","③ BETWEEN 등 범위(Range) 검색에 활용될 수 있다.","④ 시스템이 자동으로 생성하여 사용자가 변경할 수 없다.","④ 시스템이 자동으로 생성하여 사용자가 변경할 수 없다.","시스템이 자동으로 인덱스를 생성하는 경우도 있지만, 사용자가 직접 인덱스를 생성하거나 삭제할 수도 있습니다."
"previous","220305",3,"데이터베이스구축",51,"로킹 단위(Locking Granularity)에 대한 설명으로 옳은 것은?","","① 로킹 단위가 크면 병행성 수준이 낮아진다.","② 로킹 단위가 크면 병행 제어 기법이 복잡해진다.","③ 로킹 단위가 작으면 로크(lock)의 수가 적어진다.","④ 로킹은 파일 단위로 이루어지며, 레코드와 필드는 로킹 단위가 될 수 없다.","① 로킹 단위가 크면 병행성 수준이 낮아진다.","로킹 단위가 크면 한 개의 로킹으로 여러 개의 데이터를 보호할 수 있고, 다른 사용자는 해당 로킹이 해제될 때까지 해당 데이터에 접근할 수 없어 병행성을 저해하는 요인이 됩니다."
"previous","220305",3,"데이터베이스구축",52,"관계 대수에 대한 설명으로 틀린 것은?","","① 원하는 릴레이션을 정의하는 방법을 제공하며 비절차적 언어이다.","② 릴레이션 조작을 위한 연산의 집합으로 피연산자와 결과가 모두 릴레이션이다.","③ 일반 집합 연산과 순수 관계 연산으로 구분된다.","④ 질의에 대한 해를 구하기 위해 수행해야 할 연산의 순서를 명시한다.","① 원하는 릴레이션을 정의하는 방법을 제공하며 비절차적 언어이다.","관계 대수는 질의에 대한 해를 구하기 위해 수행해야 할 연산의 순서를 명시하지 않습니다."
"previous","220305",3,"데이터베이스구축",53,"데이터의 중복으로 인하여 관계연산을 처리할 때 예기치 못한 곤란한 현상이 발생하는 것을 무엇이라 하는가?","","① 이상(Anomaly)","② 제한 (Restriction)","③ 종속성(Dependency)","④ 변환(Translation)","① 이상(Anomaly)","이상은 데이터베이스에서 데이터의 중복으로 인해 발생하는 부정적인 현상을 말합니다."
"previous","220305",3,"데이터베이스구축",54,"다음 중 SQL에서의 DDL 문이 아닌 것은?","","① CREATE","② DELETE","③ ALTER","④ DROP","② DELETE","DDL(Data Definition Language)은 데이터베이스의 구조를 정의하는 언어이며, DELETE는 데이터베이스의 데이터를 삭제하는 DML(Data Manipulation Language) 문입니다."
"previous","220305",3,"데이터베이스구축",55,"정규화에 대한 설명으로 적절하지 않은 것은?","","① 데이터베이스의 개념적 설계 단계 이전에 수행한다.","② 데이터 구조의 안정성을 최대화한다.","③ 중복을 배제하여 삽입, 삭제, 갱신 이상의 발생을 방지한다.","④ 데이터 삽입 시 릴레이션을 재구성할 필요성을 줄인다.","① 데이터베이스의 개념적 설계 단계 이전에 수행한다.","정규화는 데이터베이스의 논리적 설계 단계에서 수행하는 작업입니다."
"previous","220305",3,"데이터베이스구축",56,"트랜잭션의 주요 특성 중 하나로 둘 이상의 트랜잭션이 동시에 병행 실행되는 경우 어느 하나의 트랜잭션 실행 중에 다른 트랜잭션의 연산이 끼어들 수 없음을 의미하는 것은?","","① Log","② Consistency","③ Isolation","④ Durability","③ Isolation","트랜잭션의 주요 특성은 ACID(Atomicity, Consistency, Isolation, Durability) 입니다."
"previous","220305",3,"데이터베이스구축",57,"SQL의 논리 연산자가 아닌 것은?","","① AND","② OTHER","③ OR","④ NOT","② OTHER","SQL**의 논리 연산자는 AND, OR, NOT으로, OTHER는 SQL의 논리 연산자가 아닙니다."
"previous","220305",3,"데이터베이스구축",58,"동시성 제어를 위한 직렬화 기법으로 트랜잭션 간의 처리 순서를 미리 정하는 방법은?","","① 로킹 기법","② 타임스탬프 기법","③ 검증 기법","④ 배타 로크 기법","② 타임스탬프 기법","타임스탬프 기법은 각 트랜잭션에 타임스탬프를 부여하고, 타임스탬프가 작은 트랜잭션부터 처리하는 방법입니다."
"previous","220305",3,"데이터베이스구축",59,"이전 단계의 정규형을 만족하면서 후보키를 통하지 않는 조인 종속(JD : Join Dependency) 제거해야 만족하는 정규형은?","","① 제3정규형","② 제4정규형","③ 제5정규형","④ 제6정규형","③ 제5정규형","제5정규형은 조인 종속이 없는 정규형으로, 복잡한 관계형 데이터베이스에 많이 사용됩니다."
"previous","220305",3,"데이터베이스구축",60,"어떤 릴레이션 R에서 X와 Y를 각각 R의 애트리뷰트 집합의 부분 집합이라고 할 경우 애트리뷰트 X의 값 각각에 대해 시간에 관계없이 항상 애트리뷰트 Y의 값이 오직 하나만 연관되어 있을 때 Y는 X에 함수 종속이라고 한다. 이 함수 종속의 표기로 옳은 것은?","","① Y → X","② Y ⊂ X","③ X → Y","④ X ⊂ Y","③ X → Y","함수 종속의 표기는 X → Y(의 값이 Y의 값을 결정한다.)와 같이 합니다."
"previous","220305",4,"프로그래밍언어활용",61,"모듈 내 구성 요소들이 서로 다른 기능을 같은 시간대에 함께 실행하는 경우의 응집도(Cohesion)는?","","① Temporal Cohesion","② Logical Cohesion","③ Coincidental Cohesion","④ Sequential Cohesion","① Temporal Cohesion","Temporal Cohesion은 모듈 내 구성 요소들이 같은 시간대에 함께 실행되는 경우의 응집도를 말하며, 이 경우 구성 요소들은 서로 관련성이 없지만, 같은 시간대에 함께 실행된다는 공통점이 있습니다."
"previous","220305",4,"프로그래밍언어활용",62,"오류 제어에 사용되는 자동반복 요청방식(ARQ)이 아닌 것은?","","① Stop-and-wait ARQ","② Go-back-N ARO","③ Selective-Repeat ARQ","④ Non-Acknowledge ARQ","④ Non-Acknowledge ARQ","Non-Acknowledge ARQ는 수신 측에서 송신 측으로 응답을 보내지 않는 방식으로, 오류가 발생한 프레임이 재전송되지 않습니다."
"previous","220305",4,"프로그래밍언어활용",63,"다음 파이썬(Python) 프로그램이 실행되었을 때의 결과는?","https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F210814%2FDEVOLT_EXAM_MOCK_210814_63.gif?alt=media","① 45","② 55","③ 66","④ 78","③ 66","파이썬 for i in range(n)에서 i값은 0부터 n-1까지 반복합니다."
"previous","220305",4,"프로그래밍언어활용",64,"다음 C언어 프로그램이 실행되었을 때의 결과는?","https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F210814%2FDEVOLT_EXAM_MOCK_210814_64.gif?alt=media","① nation","② nationalter","③ alter","④ alternation","② nationalter","strcat()는 문자열을 이어붙이는 함수로, str의 문자열과 p2의 문자열을 이어 붙여 str에 저장합니다."
"previous","220305",4,"프로그래밍언어활용",65,"JAVA에서 힙(Heap)에 남아있으나 변수가 가지고 있던 참조값을 잃거나 변수 자체가 없어짐으로써 더 이상 사용되지 않는 객체를 제거해주는 역할을 하는 모듈은?","","① Heap Collector","② Garbage Collector","③ Memory Collector","④ Variable Collector","② Garbage Collector","Java에서 힙(Heap)에 남아있으나 변수가 가지고 있던 참조값을 잃거나 변수 자체가 없어짐으로써 더 이상 사용되지 않는 객체를 제거해주는 역할을 하는 모듈은 Garbage Collector입니다."
"previous","220305",4,"프로그래밍언어활용",66,"다음 C언어 프로그램이 실행되었을 때의 결과는?","https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F210814%2FDEVOLT_EXAM_MOCK_210814_66.gif?alt=media","① 0","② 1","③ 2","④ 3","③ 2","C언어에서 논리 연산자는 결과가 거짓이나 0이면 0을, 결과가 참이나 자연수면 1의 결과값을 반환합니다."
"previous","220305",4,"프로그래밍언어활용",67,"다음 중 JAVA에서 우선순위가 가장 낮은 연산자는?","","① --","② %","③ &","④ =","④ =","JAVA에서 우선순위가 가장 낮은 연산자는 대입 연산자입니다."
"previous","220305",4,"프로그래밍언어활용",68,"사용자가 요청한 디스크 입·출력 내용이 다음과 같은 순서로 큐에 들어 있을 때 SSTF 스케쥴링을 사용한 경우의 처리 순서는? (단, 현재 헤드 위치는 53 이고, 제일 안쪽이 1번, 바깥쪽이 200번 트랙이다.)","https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F210814%2FDEVOLT_EXAM_MOCK_210814_68.gif?alt=media","① 53-65-67-37-14-98-122-124-183","② 53-98-183-37-122-14-124-65-67","③ 53-37-14-65-67-98-122-124-183","④ 53-67-65-124-14-122-37-183-98","① 53-65-67-37-14-98-122-124-183","SSTF 스케쥴링은 현재 헤드 위치에서 가장 가까운 디스크를 우선적으로 처리하는 방식입니다."
"previous","220305",4,"프로그래밍언어활용",69,"192.168.1.0/24 네트워크를 FLSM 방식 네트워크를 FLSM 방식 네트워크를 FLSM 방식SM 방식여 4개의 Subnet으로 나누고 IP Subnet-zero를 적용했다. 이 때 Subnetting 된 네트워크 중 4번째 네트워크의 4번째 사용가능한 IP는 무엇인가?","","① 192.168.1.192","② 192.168.1.195","③ 192.168.1.196","④ 192.168.1.198","③ 192.168.1.196","4번째 서브넷의 4번째 사용가능한 IP 주소는 192.168.1.128 + 3 = 192.168.1.196입니다."
"previous","220305",4,"프로그래밍언어활용",70,"C Class에 속하는 IP address는?","","① 200.168.30.1","② 10.3.2.1 4","③ 225.2.4.1","④ 172.16.98.3","① 200.168.30.1","IP 주소는 클래스로 구분되며, 클래스는 네트워크 주소의 첫 번째 바이트의 값으로 결정됩니다.(C 클래스: 192~223)"
"previous","220305",4,"프로그래밍언어활용",71,"다음 C언어 프로그램이 실행되었을 때의 결과는?","https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F210814%2FDEVOLT_EXAM_MOCK_210814_71.gif?alt=media","① 0","② 4","③ 8","④ 12","③ 8","&n + *pt - *&pt + n = *pt + n = 4 + 4 = 8 입니다."
"previous","220305",4,"프로그래밍언어활용",72,"귀도 반 로섬(Guido van Rossum)이 발표한 언어로 인터프리터 방식이자 객체지향적이며, 배우기 쉽고 이식성이 좋은 것이 특징인 스크립트 언어는?","","① C++","② JAVA","③ C#","④ Python","④ Python","귀도 반 로섬은 네덜란드 출신의 소프트웨어 엔지니어로, 1991년 Python 언어를 발표했습니다."
"previous","220305",4,"프로그래밍언어활용",73,"다음 JAVA 프로그램이 실행되었을 때의 결과를 쓰시오.","https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F210814%2FDEVOLT_EXAM_MOCK_210814_73.gif?alt=media","① 13","② 21","③ 34","④ 55","③ 34","while문에서 i는 0부터 시작되고 i가 8일 때 종료됩니다."
"previous","220305",4,"프로그래밍언어활용",74,"프로세스와 관련한 설명으로 틀린 것은?","","① 프로세스가 준비 상태에서 프로세서가 배당되어 실행 상태로 변화하는 것을 디스패치(Dispatch)라고 한다.","② 프로세스 제어 블록(PCB, Process Control Block)은 프로세스 식별자, 프로세스 상태 등의 정보로 구성된다.","③ 이전 프로세스의 상태 레지스터 내용을 보관하고 다른 프로세스의 레지스터를 적재하는 과정을 문맥 교환(Context Switching)이라고 한다.","④ 프로세스는 스레드(Thread) 내에서 실행되는 흐름의 단위이며, 스레드와 달리 주소 공간에 실행 스택(Stack)이 없다.","④ 프로세스는 스레드(Thread) 내에서 실행되는 흐름의 단위이며, 스레드와 달리 주소 공간에 실행 스택(Stack)이 없다.","스레드는 프로세스의 주소 공간을 공유하지만, 각자의 실행 스택을 가지고 있습니다."
"previous","220305",4,"프로그래밍언어활용",75,"모듈의 독립성을 높이기 위한 결합도(Coupling)와 관련한 설명으로 틀린 것은?","","① 오류가 발생했을 때 전파되어 다른 오류의 원인이 되는 파문 효과(Ripple Effect)를 최소화해야 한다.","② 인터페이스가 정확히 설정되어 있지 않을 경우 불필요한 인터페이스가 나타나 모듈 사이의 의존도는 높아지고 결합도가 증가한다.","③ 모듈들이 변수를 공유하여 사용하게 하거나 제어 정보를 교류하게 함으로써 결합도를 낮추어야 한다.","④ 다른 모듈과 데이터 교류가 필요한 경우 전역변수(Global Variable)보다는 매개변수(Parameter)를 사용하는 것이 결합도를 낮추는 데 도움이 된다.","③ 모듈들이 변수를 공유하여 사용하게 하거나 제어 정보를 교류하게 함으로써 결합도를 낮추어야 한다.","모듈들이 변수를 공유하거나 제어 정보를 교류하는 것은 모듈 간의 의존도를 높이고, 결합도를 증가시킵니다."
"previous","220305",4,"프로그래밍언어활용",76,"TCP헤더와 관련한 설명으로 틀린 것은?","","① 순서번호(Sequence Number)는 전달하는 바이트마다 번호가 부여된다.","② 수신번호확인(Acknowledgement Number)은 상대편 호스트에서 받으려는 바이트의 번호를 정의한다.","③ 체크섬(Checksum)은 데이터를 포함한 세그먼트의 오류를 검사한다.","④ 윈도우 크기는 송수신 측의 버퍼 크기로 최대크기는 32767bit 이다.","④ 윈도우 크기는 송수신 측의 버퍼 크기로 최대크기는 32767bit 이다.","TCP 헤더의 윈도우 크기 필드는 16비트로 구성되어 있어 최댓값은 2^16 - 1 = 65535입니다."
"previous","220305",4,"프로그래밍언어활용",77,"모듈화(Modularity)와 관련한 설명으로 틀린 것은?","","① 소프트웨어의 모듈은 프로그래밍 언어에서 Subroutine, Function 등으로 표현될 수 있다.","② 모듈의 수가 증가하면 상대적으로 각 모듈의 크기가 커지며, 모듈 사이의 상호교류가 감소하여 과부하(Overload) 현상이 나타난다.","③ 모듈화는 시스템을 지능적으로 관리할 수 있도록 해주며, 복잡도 문제를 해결하는 데 도움을 준다.","④ 모듈화는 시스템의 유지보수와 수정을 용이하게 한다.","② 모듈의 수가 증가하면 상대적으로 각 모듈의 크기가 커지며, 모듈 사이의 상호교류가 감소하여 과부하(Overload) 현상이 나타난다.","결합도가 낮으면 모듈의 독립성이 높아지고, 유지보수와 수정이 용이해지기 때문에 모듈의 수가 증가하면 과부하 현상이 나타날 가능성은 오히려 줄어듭니다."
"previous","220305",4,"프로그래밍언어활용",78,"다음 중 페이지 교체(Page Replacement)알고리즘이 아닌 것은?","","① FIFO(First-In-First-Out)","② LUF(Least Used First)","③ Optimal","④ LRU(Least Recently Used)","② LUF(Least Used First)","LUF(Least Used First)는 가장 적게 사용된 페이지를 교체하는 알고리즘입니다."
"previous","220305",4,"프로그래밍언어활용",79,"C언어에서의 변수 선언으로 틀린 것은?","","① int else;","② int Test2;","③ int pc;","④ int True;","① int else;","else는 C언어에서 조건문의 else 절을 나타내는 키워드이기 때문에 변수의 이름으로 사용할 수 없습니다."
"previous","220305",4,"프로그래밍언어활용",80,"파일 디스크립터(File Descriptor)에 대한 설명으로 틀린 것은?","","① 파일 관리를 위해 시스템이 필요로 하는 정보를 가지고 있다.","② 보조기억장치에 저장되어 있다가 파일이 개방(open)되면 주기억장치로 이동된다.","③ 사용자가 파일 디스크립터를 직접 참조할 수 있다.","④ 파일 제어 블록(File Control Block)이라고도 한다.","③ 사용자가 파일 디스크립터를 직접 참조할 수 있다.","파일 디스크립터는 운영체제에 의해 관리되며, 사용자는 파일 디스크립터를 직접 참조할 수 없습니다."
"previous","220305",5,"정보시스템구축관리",81,"침입탐지 시스템(IDS : Intrusion Detection System)과 관련한 설명으로 틀린 것은?","","① 이상 탐지 기법(Anomaly Detection)은 Signature Base나 Knowledge Base라고도 불리며 이미 발견되고 정립된 공격 패턴을 입력해두었다가 탐지 및 차단한다.","② HIDS(Host-Based Intrusion Detection)는 운영체제에 설정된 사용자 계정에 따라 어떤 사용자가 어떤 접근을 시도하고 어떤 작업을 했는지에 대한 기록을 남기고 추적한다.","③ NIDS(Network-Based Intrusion Detection System)로는 대표적으로 Snort가 있다.","④ 외부 인터넷에 서비스를 제공하는 서버가 위치하는 네트워크인 DMZ(Demilitarized Zone)에는 IDS가 설치될 수 있다.","① 이상 탐지 기법(Anomaly Detection)은 Signature Base나 Knowledge Base라고도 불리며 이미 발견되고 정립된 공격 패턴을 입력해두었다가 탐지 및 차단한다.","이미 발견되고 정립된 공격 패턴을 입력해두었다가 탐지하는 것은 이상 탐지 기법이 아니라 시그니처 기반 탐지 기법에 해당합니다."
"previous","220305",5,"정보시스템구축관리",82,"정보 시스템 내에서 어떤 주체가 특정 개체에 접근하려 할 때 양쪽의 보안 레이블(Security Label)에 기초하여 높은 보안 수준을 요구하는 정보(객체)가 낮은 보안 수준의 주체에게 노출되지 않도록 하는 접근 제어 방법은?","","① Mandatory Access Control","② User Access Control","③ Discretionary Access Control","④ Data-Label Access Control","① Mandatory Access Control","Mandatory Access Control(MAC)은 보안 레이블을 사용하여 접근 제어를 수행하는 방식으로, 주체와 개체는 모두 보안 레이블을 가지고 있으며, 주체의 보안 레이블이 개체의 보안 레이블보다 낮으면 접근이 허용되지 않습니다."
"previous","220305",5,"정보시스템구축관리",83,"구글의 구글 브레인 팀이 제작하여 공개한 기계 학습(Machine Leaming)을 위한 오픈소스 소프트웨어 라이브러리는?","","① 타조(Tajo)","② 원 세그(One Seg)","③ 포스퀘어(Foursquare)","④ 텐서플로(TensorFlow)","④ 텐서플로(TensorFlow)","구글 브레인 팀은 2015년 11월 9일, 기계 학습(Machine Learning)을 위한 오픈소스 소프트웨어 라이브러리인 텐서플로(TensorFlow)를 공개했습니다. 텐서플로는 딥러닝을 비롯한 다양한 기계 학습 알고리즘을 구현하기 위한 강력한 도구입니다."
"previous","220305",5,"정보시스템구축관리",84,"국내 IT 서비스 경쟁력 강화를 목표로 개발되었으며 인프라 제어 및 관리 환경, 실행 환경, 개발 환경, 서비스 환경, 운영환경으로 구성되어 있는 개방형 클라우드 컴퓨팅 플랫폼은?","","① N20S","② PaaS-TA","③ KAWS","④ Metaverse","② PaaS-TA","PaaS-TA는 한국정보화진흥원(NIA) 주도로 개발된 개방형 클라우드 컴퓨팅 플랫폼입니다."
"previous","220305",5,"정보시스템구축관리",85,"정보 보안을 위한 접근 제어(Access Control)과 관련한 설명으로 틀린 것은?","","① 적절한 권한을 가진 인가자만 특정 시스템이나 정보에 접근할 수 있도록 통제하는 것이다.","② 시스템 및 네트워크에 대한 접근 제어의 가장 기본적인 수단은 IP와 서비스 포트로 볼 수 있다.","③ DBMS에 보안 정책을 적용하는 도구인 8XDMCP를 통해 데이터베이스에 대한 접근제어를 수행할 수 있다.","④ 네트워크 장비에서 수행하는 IP에 대한 접근 제어로는 관리 인터페이스의 접근제어와 ACL(Access Control List) 등 있다.","③ DBMS에 보안 정책을 적용하는 도구인 8XDMCP를 통해 데이터베이스에 대한 접근제어를 수행할 수 있다.","8XDMCP를 통해 데이터베이스를 관리하기 위한 접근 제어를 수행할 수 있지만, 데이터베이스에 대한 접근 제어를 수행하기 위한 도구는 아닙니다."
"previous","220305",5,"정보시스템구축관리",86,"소프트웨이 개발 프레임워크와 관련한 설명으로 틀린 것은?","","① 반제품 상태의 제품을 토대로 도메인별로필요한 서비스 컴포넌트를 사용하여재사용성 화대와 성능을 보장 받을 수 있게하는 개발 소프트웨어이다.","② 개발해야 할 애플리케이션의 일부분이 이미구현되어 있어 동일한 로직 반복을 줄일 수있다.","③ 라이브러리와 달리 사용자 코드가 직접호출하여 사용하기 때문에 소프트웨어 개발프레임워크가 직접 코드의 흐름을 제어할수 없다.","④ 생산성 향상과 유지보수성 향상 등의장점이 있다.","③ 라이브러리와 달리 사용자 코드가 직접호출하여 사용하기 때문에 소프트웨어 개발프레임워크가 직접 코드의 흐름을 제어할수 없다.","라이브러리는 사용자가 필요에 따라 코드를 직접 호출하여 사용하는 반면, 소프트웨어 개발 프레임워크는 개발자가 프레임워크가 제공하는 구조와 기능을 기반으로 애플리케이션을 개발하는 방식입니다."
"previous","220305",5,"정보시스템구축관리",87,"물리적 배치와 상관없이 논리적으로 LAN을구성하여 Broadcast Domain을 구분할 수있게 해주는 기술로 접속된 장비들의 성능향상 및 보안성 증대 효과가 있는 것은?","","① VLAN","② STP","③ L2AN","④ ARP","① VLAN","VLAN을 사용하면 동일한 물리적 LAN에 연결된 장비들이 논리적으로 서로 다른 VLAN에 속하게 되어 서로 통신할 수 없게 됩니다."
"previous","220305",5,"정보시스템구축관리",88,"SQL Injection 공격과 관련한 설명으로 틀린것은?","","① SQL Injection은 임의로 작성한 SQL 구문을 애플리케이션에 삽입하는 공격방식이다.","② SQL Injection 취약점이 발생하는 곳은 주로웹 애플리케이션과 데이터베이스가 연동되는 부분이다.","③ DBMS의 종류와 관계없이 SQL Injection공격 기법은 모두 동일하다.","④ 로그인과 같이 웹에서 사용자의 입력 값을 받아 데이터베이스 SQL문으로 데이터를요청하는 경우 SQL Injection을 수행할 수 있다.","③ DBMS의 종류와 관계없이 SQL Injection공격 기법은 모두 동일하다.","데이터베이스 서버는 특정 DBMS를 사용하고 있으며, DBMS마다 SQL 문법이 다르기 때문에 DBMS의 종류에 따라 SQL Injection 공격 기법이 달라질 수 있습니다."
"previous","220305",5,"정보시스템구축관리",89,"비대칭 암호화 방식으로 소수를 활용한 암호화 알고리즘은?","","① DES","② AES","③ SMT","④ RSA","④ RSA","RSA는 비대칭 암호화 방식으로, 서로 다른 두 개의 키로 암호화와 복호화를 수행하며 소수를 활용한 이산로그 문제를 기반으로 암호화 알고리즘을 구현합니다."
"previous","220305",5,"정보시스템구축관리",90,"다음에서 설명하는 IT 스토리지 기술은?","https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F210814%2FDEVOLT_EXAM_MOCK_210814_90.gif?alt=media","① Software Defined Storage","② Distribution Oriented Storage","③ Network Architected Storage","④ Systematic Network Storage","① Software Defined Storage","Software Defined Storage는 소프트웨어를 이용하여 스토리지를 관리하고 제어하는 기술로, 하드웨어와는 독립적으로 동작하며 가상화 기술을 활용하여 스토리지 자원을 효율적으로 관리할 수 있기 때문에 유연성과 확장성이 뛰어나며, 비용 효율적인 스토리지 관리가 가능하다."
"previous","220305",5,"정보시스템구축관리",91,"Cocomo model 중 기관 내부에서 개발된 중소규모의 소프트웨어로 일괄 자료 처리나 과학기술계산용, 비즈니스 자료 처리용으로 5만 라인이하의 소프트웨어를 개발하는 유형은?","","① Embeded","② Organic","③ Semi-detached","④ Semi-embeded","② Organic","COCOMO 모델의 Organic 유형은 일반적인 비즈니스 응용 프로그램이나 과학 기술 응용 프로그램과 같은 일반적인 소프트웨어입니다."
"previous","220305",5,"정보시스템구축관리",92,"다음 내용이 설명하는 것은?","https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F210814%2FDEVOLT_EXAM_MOCK_210814_92.gif?alt=media","① Format String","② Ransomware","③ Buffer overflow","④ Adware","② Ransomware","Ransomware는 악성코드 중 하나로, 사용자의 파일을 암호화하고 복원을 위해 금전적 보상을 요구하는 악성 소프트웨어입니다."
"previous","220305",5,"정보시스템구축관리",93,"생명주기 모형 중 가장 오래된 모형으로 많은적용 사례가 있지만 요구사항의 변경이어렵고 각 단계의 결과가 확인 되어야 다음단계로 넘어갈 수 있는 선형 순차적, 고전적생명 주기 모형이라고도 하는 것은?","","① Waterfall Model","② Prototype Model","③ Cocomo Model","④ Spiral Model","① Waterfall Model","Waterfall Model은 소프트웨어 개발 프로세스를 계획, 요구사항 분석, 설계, 구현, 테스트, 유지보수의 6단계로 구분하여 순차적으로 진행하는 생명주기 모형입니다."
"previous","220305",5,"정보시스템구축관리",94,"소프트웨어 생명주기 모형 중 Spiral Model에 대한 설명으로 틀린 것은?","","① 비교적 대규모 시스템에 적합하다.","② 개발 순서는 계획 및 정의, 위험 분석, 공학적 개발, 고객 평가 순으로 진행된다.","③ 소프트웨어를 개발하면서 발생할 수 있는 위험을 관리하고 최소화하는 것을 목적으로 한다.","④ 계획, 설계, 개발, 평가의 개발 주기가 한번만 수행된다.","④ 계획, 설계, 개발, 평가의 개발 주기가 한번만 수행된다.","Spiral Model은 Waterfall Model의 단점을 보완하기 위해 요구사항의 변경을 수용하고, 각 단계를 반복적으로 수행하는 생명주기 모형입니다."
"previous","220305",5,"정보시스템구축관리",95,"특정 사이트에 매우 많은 ICMP Echo를 보내면, 이에 대한 응답(Respond)을 하기 위해 시스템 자원을 모두 사용해버려 시스템이 정상적으로 동작하지 못하도록 하는 공격방법은?","","① Role-Based Access Control","② Ping Flood","③ Brute-Force","④ Trojan Horses","② Ping Flood","Ping Flood 공격을 받으면 피해 시스템은 ICMP Echo 요청에 대한 응답을 보내느라 시스템 자원을 모두 사용하게 되어 정상적인 동작을 할 수 없게 됩니다."
"previous","220305",5,"정보시스템구축관리",96,"TCP/IP 기반 네트워크에서 동작하는 발행-구독 기반의 메시징 프로토콜로 최근 IoT 환경에서 자주 사용되고 있는 프로토콜은?","","① MLFQ","② MQTT","③ Zigbee","④ MTSP","② MQTT","MQTT는 경량 메시지 전송을 위해 설계되었으며, 리소스 제약이 있는 IoT 환경에서 자주 사용되고 있습니다."
"previous","220305",5,"정보시스템구축관리",97,"시스템이 몇 대가 되어도 하나의 시스템에서 인증에 성공하면 다른 시스템에 대한 접근권한도 얻는 시스템을 의미하는 것은?","","① SOS","② SBO","③ SSO","④ SOA","③ SSO","SSO는 Single Sign-On의 약자로, 하나의 인증으로 여러 시스템에 접근할 수 있는 시스템을 의미합니다."
"previous","220305",5,"정보시스템구축관리",98,"시스템에 저장되는 패스워드들은 Hash 또는 암호화 알고리즘의 결과 값으로 저장된다. 이때 암호공격을 막기 위해 똑같은 패스워드들이 다른 암호 값으로 저장되도록 추가되는 값을 의미하는 것은?","","① Pass flag","② Bucket","③ Opcode","④ Salt","④ Salt","Salt는 암호를 암호화하기 전에 추가되는 임의의 값을 의미하며, Salt를 추가하면 동일한 패스워드라도 다른 해시 값을 생성할 수 있으므로, 사전 공격이나 무차별 대입 공격을 방지할 수 있습니다."
"previous","220305",5,"정보시스템구축관리",99,"S/W 각 기능의 원시 코드 라인수의 비관치, 낙관치, 기대치를 측정하여 예측치를 구하고 이를 이용하여 비용을 산정하는 기법은?","","① Effort Per Task기법","② 전문가 감정 기법","③ 델파이기법","④ LOC기법","④ LOC기법","LOC기법(Lines of Code)은 소프트웨어의 개발 비용을 산정하기 위한 기법으로, 소프트웨어의 원시 코드 라인수를 기준으로 비용을 산정합니다."
"previous","220305",5,"정보시스템구축관리",100,"오픈소스 웹 애플리케이션 보안 프로젝트로서 주로 웹을 통한 정보 유출, 악성 파일 및 스크립트, 보안 취약점 등을 연구하는 곳은?","","① WWW","② OWASP","③ WBSEC","④ ITU","② OWASP","OWASP는 Open Web Application Security Project의 약자로, 오픈소스 웹 애플리케이션 보안 프로젝트입니다. 주로 웹을 통한 정보 유출, 악성 파일 및 스크립트, 보안 취약점 등을 연구하며, 10대 웹 애플리케이션 보안 취약점(OWASP Top 10)을 발표하기도 했습니다."