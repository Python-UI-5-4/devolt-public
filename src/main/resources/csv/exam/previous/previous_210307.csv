test,date,snumber,sname,qnumber,qname1,qname2,example1,example2,example3,example4,answer,explain
"previous","220305",1,"소프트웨어설계",1,"운영체제 분석을 위해 리눅스에서 버전을 확인하고자 할 때 사용되는 명령어는?","","① ls","② cat","③ pwd","④ uname","④ uname","uname은 운영체제의 이름, 버전, 아키텍처 등의 정보를 출력하는 명령어입니다. (가답안은 4번으로 발표되었지만, 확정답안은 2/4번이 모두 정답처리 된 문항입니다.)"
"previous","220305",1,"소프트웨어설계",2,"통신을 위한 프로그램을 생성하여 포트를 할당하고, 클라이언트의 통신 요청 시 클라이언트와 연결하는 내·외부 송·수신 연계기술은?","","① DB링크 기술","② 소켓 기술","③ 스크럼 기술","④ 프로토타입 기술","② 소켓 기술","소켓 기술은 통신을 위한 프로그램을 생성하고, 포트를 할당하여 클라이언트의 통신 요청을 수신하는 기술로, 다양한 네트워크 응용 프로그램에서 사용되는 필수적인 기술입니다."
"previous","220305",1,"소프트웨어설계",3,"객체지향 개념에서 연관된 데이터와 함수를 함께 묶어 외부와 경계를 만들고 필요한 인터페이스만을 밖으로 드러내는 과정은?","","① 메시지(Message)","② 캡슐화(Encapsulation)","③ 다형성(Polymorphism)","④ 상속(Inheritance)","② 캡슐화(Encapsulation)","캡슐화는 객체지향 프로그래밍의 4가지 기본 개념 중 하나로, 연관된 데이터와 함수를 함께 묶어 외부와 경계를 만드는 것을 말하며, 이를 통해 데이터를 외부로부터 보호하고, 코드를 재사용성을 높일 수 있습니다."
"previous","220305",1,"소프트웨어설계",4,"GoF(Gangs of Four) 디자인 패턴의 생성패턴에 속하지 않는 것은?","","① 추상 팩토리(Abstract Factory)","② 빌더(Builder)","③ 어댑터(Adapter)","④ 싱글턴(Singleton)","③ 어댑터(Adapter)","어댑터는 생성패턴이 아니라 구조패턴입니다."
"previous","220305",1,"소프트웨어설계",5,"응용프로그램의 프로시저를 사용하여 원격 프로시저를 로컬 프로시저처럼 호출하는 방식의 미들웨어는?","","① WAS(Web Application Server)","② MOM(Message Oriented Middleware)","③ RPC(Remote Procedure Call)","④ ORB(Object Request Broker)","③ RPC(Remote Procedure Call)","RPC는 응용 프로그램의 프로시저를 사용하여 원격 프로시저를 로컬 프로시저처럼 호출합니다. 즉, 응용 프로그램은 원격 프로시저를 호출하는 것처럼 보이지만, 실제로는 RPC 미들웨어가 원격 프로시저를 호출하고, 응용 프로그램에 결과를 전달합니다."
"previous","220305",1,"소프트웨어설계",6,"바람직한 소프트웨어 설계 지침이 아닌 것은?","","① 모듈의 기능을 예측할 수 있도록 정의한다.","② 이식성을 고려한다.","③ 적당한 모듈의 크기를 유지한다.","④ 가능한 모듈을 독립적으로 생성하고 결합도를 최대화한다.","④ 가능한 모듈을 독립적으로 생성하고 결합도를 최대화한다.","모듈의 결합도는 모듈 간의 의존도의 정도를 나타내는 지표이며, 결합도가 높을수록 모듈 간의 의존도가 높아져 유지보수가 어려워집니다."
"previous","220305",1,"소프트웨어설계",7,"객체지향 분석 방법론 중 Coad-Yourdon 방법에 해당하는 것은?","","① E-R 다이어그램을 사용하여 객체의 행위를 데이터 모델링하는데 초점을 둔 방법이다.","② 객체, 동적, 기능 모델로 나누어 수행하는 방법이다.","③ 미시적 개발 프로세스와 거시적 개발 프로세스를 모두 사용하는 방법이다.","④ Use-Case를 강조하여 사용하는 방법이다.","① E-R 다이어그램을 사용하여 객체의 행위를 데이터 모델링하는데 초점을 둔 방법이다.","Coad-Yourdon 방법은 객체지향 분석 방법론 중 하나로, 객체, 동적, 기능 모델로 나누어 수행하는 방법입니다."
"previous","220305",1,"소프트웨어설계",8,"다음은 어떤 프로그램 구조를 나타낸다. 모듈 F에서의 fan-in과 fan-out의 수는 얼마인가?","https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F210307%2FDEVOLT_EXAM_MOCK_210307_08.gif?alt=media","① fan-in : 2, fan-out : 3","② fan-in : 3, fan-out : 2","③ fan-in : 1, fan-out : 2","④ fan-in : 2, fan-out : 1","② fan-in : 3, fan-out : 2","모듈 F를 제어하는 수는 B,C,D 총 3개(fan-in), 모듈 F가 제어하는 수는 G,H 총 2개(fan-out) 입니다."
"previous","220305",1,"소프트웨어설계",9,"현행 시스템 분석에서 고려하지 않아도 되는 항목은?","","① DBMS 분석","② 네트워크 분석","③ 운영체제 분석","④ 인적 자원 분석","④ 인적 자원 분석","인적 자원 분석은 시스템을 운영하고 유지하는데 필요한 인력의 수요, 역량, 업무 분담 등을 파악하는 과정으로 시스템의 운영 측면에 해당하는 분석이므로, 현행 시스템 분석에서는 고려하지 않아도 되는 항목입니다."
"previous","220305",1,"소프트웨어설계",10," 시스템의 **운영 측면**에 해당하는 분석이므로, 현행 시스템 분석에서는 고려하지 않아도 되는 항목입니다.","","① 미들웨어","② 하드웨어","③ 오픈허브웨어","④ 그레이웨어","① 미들웨어","분산 컴퓨팅 환경에서는 서로 다른 기종, 프로토콜, 통신환경 등이 사용되는 경우가 많은데, 이러한 환경에서 응용프로그램과 운영환경 간의 통신을 위해서는 미들웨어를 사용합니다."
"previous","220305",1,"소프트웨어설계",11,"CASE(Computer Aided Software Engineering)에 대한 설명으로 틀린 것은?","","① 소프트웨어 모듈의 재사용성이 향상된다.","② 자동화된 기법을 통해 소프트웨어 품질이 향상된다.","③ 소프트웨어 사용자들에게 사용 방법을 신속히 숙지시키기 위해 사용된다.","④ 소프트웨어 유지보수를 간편하게 수행할 수 있다.","③ 소프트웨어 사용자들에게 사용 방법을 신속히 숙지시키기 위해 사용된다.","CASE(Computer Aided Software Engineering)는 소프트웨어 개발의 전 과정을 지원하는 도구 및 방법론의 총칭으로, 소프트웨어 개발의 효율성과 품질을 향상시키기 위한 목적으로 사용됩니다."
"previous","220305",1,"소프트웨어설계",12,"UML(Unified Modeling Language)에 대한 설명 중 틀린 것은?","","① 기능적 모델은 사용자 측면에서 본 시스템 기능이며, UML에서는 Use case Diagram을 사용한다.","② 정적 모델은 객체, 속성, 연관관계, 오퍼레이션의 시스템의 구조를 나타내며, UML에서는 Class Diagram을 사용한다.","③ 동적 모델은 시스템의 내부 동작을 말하며, UML에서는 Sequence Diagram, State Diagram, Activity Diagram을 사용한다.","④ State Diagram은 객체들 사이의 메시지 교환을 나타내며, Sequence Diagram은 하나의 객체가 가진 상태와 그 상태의 변화에 의한 동작순서를 나타낸다.","④ State Diagram은 객체들 사이의 메시지 교환을 나타내며, Sequence Diagram은 하나의 객체가 가진 상태와 그 상태의 변화에 의한 동작순서를 나타낸다.","State Diagram은 객체들 사이의 메시지 교환을 나타내는 것이 아니라, 하나의 객체가 가진 상태와 그 상태의 변화에 의한 동작순서를 나타내는 다이어그램입니다."
"previous","220305",1,"소프트웨어설계",13,"기본 유스케이스 수행 시 특별한 조건을 만족할 때 수행하는 유스케이스는?","","① 연관","② 확장","③ 선택","④ 특화","② 확장","확장 유스케이스는 기본 유스케이스를 수행하는 과정에서 특별한 조건이 만족될 때 수행하는 유스케이스입니다."
"previous","220305",1,"소프트웨어설계",14,"다음 중 요구사항 모델링에 활용되지 않는 것은?","","① 애자일(Agile) 방법","② 유스케이스 다이어그램(Use Case Diagram)","③ 시컨스 다이어그램(Sequence Diagram)","④ 단계 다이어그램(Phase Diagram)","④ 단계 다이어그램(Phase Diagram)","단계 다이어그램은 소프트웨어 개발 프로세스의 단계를 시각화하는 데 사용되는 다이어그램입니다."
"previous","220305",1,"소프트웨어설계",15,"디자인 패턴을 이용한 소프트웨어 재사용으로 얻어지는 장점이 아닌 것은?","","① 소프트웨어 코드의 품질을 향상시킬 수 있다.","② 개발 프로세스를 무시할 수 있다.","③ 개발자들 사이의 의사소통을 원활하게 할 수 있다.","④ 소프트웨어의 품질과 생산성을 향상시킬 수 있다.","② 개발 프로세스를 무시할 수 있다.","디자인 패턴은 개발자들이 공통적으로 발견한 문제에 대한 해결책을 제시하는 것으로, 이를 적용하기 위해서는 여전히 개발 프로세스를 따라야 하며, 디자인 패턴을 적용하는 것 자체가 개발 프로세스의 일부입니다."
"previous","220305",1,"소프트웨어설계",16,"럼바우(Rumbaugh) 분석기법에서 정보모델링이라고도 하며, 시스템에서 요구되는 객체를 찾아내어 속성과 연산 식별 및 객체들 간의 관계를 규정하여 다이어그램을 표시하는 모델링은?","","① Object","② Dynamic","③ Function","④ Static","① Object","Object 모델링은 시스템의 구조를 나타내는 모델링으로, 객체의 개념을 사용하여 시스템을 표현합니다."
"previous","220305",1,"소프트웨어설계",17,"소프트웨어를 개발하기 위한 비즈니스(업무)를 객체와 속성, 클래스와 멤버, 전체와 부분 등으로 나누어서 분석해 내는 기법은?","","① 객체지향 분석","② 구조적 분석","③ 기능적 분석","④ 실시간 분석","① 객체지향 분석","객체는 실세계의 개념이나 사물의 모델을 의미하며, 속성은 객체의 상태를 나타내고, 클래스는 객체의 집합으로서 속성과 메서드를 정의합니다. 객체지향 분석은 소프트웨어의 구조와 동작을 이해하는 데 도움이 되며, 유지보수성이 높은 소프트웨어를 개발하는 데 유용합니다."
"previous","220305",1,"소프트웨어설계",18,"애자일 소프트웨어 개발 기법의 가치가 아닌 것은?","","① 프로세스의 도구보다는 개인과 상호작용에 더 가치를 둔다.","② 계약 협상보다는 고객과의 협업에 더 가치를 둔다.","③ 실제 작동하는 소프트웨어보다는 이해하기 좋은 문서에 더 가치를 둔다.","④ 계획을 따르기보다는 변화에 대응하는 것에 더 가치를 둔다.","③ 실제 작동하는 소프트웨어보다는 이해하기 좋은 문서에 더 가치를 둔다.","애자일 소프트웨어 개발 기법은 작동하는 소프트웨어를 반복적으로 제공하여 고객의 요구사항을 충족시키는 것을 목표로 하기 때문에, 실제 작동하는 소프트웨어에 더 가치를 둡니다."
"previous","220305",1,"소프트웨어설계",19,"UML 다이어그램 중 시스템 내 클래스의 정적 구조를 표현하고 클래스와 클래스, 클래스의 속성 사이의 관계를 나타내는 것은?","","① Activity Diagram","② Modea Diagram","③ State Diagram","④ Class Diagram","④ Class Diagram","Activity Diagram, Modea Diagram, State Diagram은 시스템의 동적인 측면을 나타내는 다이어그램입니다."
"previous","220305",1,"소프트웨어설계",20,"소프트웨어 설계시 제일 상위에 있는 main user function에서 시작하여 기능을 하위 기능들로 분할해 가면서 설계하는 방식은?","","① 객체 지향 설계","② 데이터 흐름 설계","③ 상향식 설계","④ 하향식 설계","④ 하향식 설계","하향식 설계는 시스템의 최상위 수준에서부터 하위 수준으로 내려가면서 설계를 수행하는 방식입니다."
"previous","220305",2,"소프트웨어개발",21,"구현 단계에서의 작업 절차를 순서에 맞게 나열한 것은?","https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F210307%2FDEVOLT_EXAM_MOCK_210307_21.gif?alt=media","① ㉠-㉡-㉢-㉣","② ㉡-㉠-㉣-㉢","③ ㉢-㉠-㉡-㉣","④ ㉣-㉡-㉠-㉢","② ㉡-㉠-㉣-㉢","구현 단계에서의 작업 절차는 설계된 시스템을 바탕으로 프로그램 코드를 작성하고, 작성된 코드를 컴파일러를 통해 기계어로 변환한 후, 변환된 기계어 코드를 실행하여 프로그램을 테스트하고, 테스트 결과를 바탕으로 코드를 수정하고 다시 컴파일하여 테스트를 반복하는 순서로 이루어집니다."
"previous","220305",2,"소프트웨어개발",22,"다음 자료에 대하여 'Selection Sort'를 사용하여 오름차순으로 정렬한 경우 PASS 3의 결과는?","https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F210307%2FDEVOLT_EXAM_MOCK_210307_22.gif?alt=media","① 3, 4, 7, 9, 8","② 3, 4, 8, 9, 7","③ 3, 8, 4, 9, 7","④ 3, 4, 7, 8, 9","① 3, 4, 7, 9, 8","PASS 1에서는 가장 작은 수인 3을 찾아 맨 앞으로 이동시키고, PASS 2에서는 두 번째로 작은 수인 4를 찾아 두 번째 자리로 이동시킨 후, PASS 3에서는 세 번째로 작은 수를 찾아 세 번째 자리로 이동시켜야 합니다."
"previous","220305",2,"소프트웨어개발",23,"하향식 통합시험을 위해 일시적으로 필요한 조건만을 가지고 임시로 제공되는 시험용 모듈은?","","① Stub","② Driver","③ Procedure","④ Function","① Stub","Stub은 하향식 통합 테스트에서 일시적으로 필요한 조건만을 가지고 임시로 제공되는 시험용 모듈로, 실제 모듈이 구현되기 전에 테스트를 수행하기 위해 사용됩니다."
"previous","220305",2,"소프트웨어개발",24,"다음 전위식(prefix)을 후위식(postfix)으로 옳게 표현한 것은?","https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F210307%2FDEVOLT_EXAM_MOCK_210307_24.gif?alt=media","① A B C + D / * E -","② A B * C D / + E -","③ A B * C + D / E -","④ A B C + * D / E -","④ A B C + * D / E -","전위식에서는 연산자가 피연산자보다 먼저 나오고, 후위식에서는 연산자가 피연산자보다 나중에 나옵니다."
"previous","220305",2,"소프트웨어개발",25,"그래프의 특수한 형태로 노드(Node)와 선분(Branch)으로 되어 있고, 정점 사이에 사이클(Cycle)이 형성되어 있지 않으며, 자료 사이의 관계성이 계층 형식으로 나타나는 비선형 구조는?","","① tree","② network","③ stack","④ distributed","① tree","트리 구조는 사이클이 없는 비선형 구조로, 노드와 선분으로 이루어져 있으며, 자료 사이의 관계성이 계층 형식으로 나타납니다."
"previous","220305",2,"소프트웨어개발",26,"스택에 대한 설명으로 틀린 것은?","","① 입출력이 한쪽 끝으로만 제한된 리스트이다.","② Head(front)와 Tail(rear)의 2개 포인터를 갖고 있다.","③ LIFO 구조이다.","④ 더 이상 삭제할 데이터가 없는 상태에서 데이터를 삭제하면 언더플로(Underflow)가 발생한다.","② Head(front)와 Tail(rear)의 2개 포인터를 갖고 있다.","스택은 LIFO 구조이며, 입출력이 한쪽 끝으로만 제한된 리스트입니다."
"previous","220305",2,"소프트웨어개발",27,"디지털 저작권 관리(DRM)에 사용되는 기술요소가 아닌 것은?","","① 키관리","② 방화벽","③ 암호화","④ 크랙방지","② 방화벽","방화벽은 네트워크를 통해 유입되는 불법 접근이나 공격을 차단하기 위한 기술입니다."
"previous","220305",2,"소프트웨어개발",28,"여러 개의 선택 항목 중 하나의 선택만 가능한 경우 사용하는 사용자 인터페이스(UI)요소는?","","① 토글 버튼","② 텍스트 박스","③ 라디오 버튼","④ 체크 박스","③ 라디오 버튼","라디오 버튼은 일반적으로 동일한 그룹에 속하는 선택 항목을 나타내기 위해 사용됩니다."
"previous","220305",2,"소프트웨어개발",29,"소프트웨어의 일부분을 다른 시스템에서 사용할 수 있는 정도를 의미하는 것은?","","① 신뢰성(Reliability)","② 유지보수성(Maintainability)","③ 가시성(Visibility)","④ 재사용성(Reusability)","④ 재사용성(Reusability)","재사용성이 높은 소프트웨어는 기존에 개발된 소프트웨어의 일부분을 재사용하여 새로운 소프트웨어를 개발할 수 있으므로, 개발 비용과 시간을 절감할 수 있습니다."
"previous","220305",2,"소프트웨어개발",30,"자료구조에 대한 설명으로 틀린 것은?","","① 큐는 비선형구조에 해당한다.","② 큐는 First In – First Out 처리를 수행한다.","③ 스택은 Last In – First out 처리를 수행한다.","④ 스택은 서브루틴 호출, 인터럽트 처리, 수식 계산 및 수식 표기법에 응용된다.","① 큐는 비선형구조에 해당한다.","큐는 한 쪽 끝에서만 삽입이 가능하고, 다른 쪽 끝에서만 삭제가 가능한 선형 자료구조입니다."
"previous","220305",2,"소프트웨어개발",31,"다음 중 블랙 박스 검사 기법은?","","① 경계값 분석","② 조건 검사","③ 기초 경로 검사","④ 루프 검사","① 경계값 분석","경계값 분석은 블랙 박스 검사 기법의 한 종류로, 입력 값의 경계 영역을 중심으로 검사하는 방법입니다."
"previous","220305",2,"소프트웨어개발",32,"이진 검색 알고리즘에 대한 설명으로 틀린 것은?","","① 탐색 효율이 좋고 탐색 시간이 적게 소요된다.","② 검색할 데이터가 정렬되어 있어야 한다.","③ 피보나치 수열에 따라 다음에 비교할 대상을 선정하여 검색한다.","④ 비교횟수를 거듭할 때마다 검색 대상이 되는 데이터의 수가 절반으로 줄어든다.","③ 피보나치 수열에 따라 다음에 비교할 대상을 선정하여 검색한다.","이진 검색 알고리즘은 중간값을 기준으로 하여 검색을 진행합니다."
"previous","220305",2,"소프트웨어개발",33,"소프트웨어 품질목표 중 쉽게 배우고 사용할 수 있는 정도를 나타내는 것은?","","① Correctness","② Reliability","③ Usability","④ Integrity","③ Usability","다른 목표들은 소프트웨어의 기능적인 측면을 중심으로 한 것이지만, Usability는 사용자의 경험과 만족도를 고려한 목표입니다."
"previous","220305",2,"소프트웨어개발",34,"테스트 케이스에 일반적으로 포함되는 항목이 아닌 것은?","","① 테스트 조건","② 테스트 데이터","③ 테스트 비용","④ 예상 결과","③ 테스트 비용","테스트 비용은 테스트 케이스와 직접적인 관련이 있는 항목이 아니기 때문에 테스트 케이스에 포함되지 않습니다."
"previous","220305",2,"소프트웨어개발",35,"소프트웨어 설치 매뉴얼에 포함될 항목이 아닌 것은?","","① 제품 소프트웨어 개요","② 설치 관련 파일","③ 프로그램 삭제","④ 소프트웨어 개발 기간","④ 소프트웨어 개발 기간","소프트웨어 개발 기간은 소프트웨어를 개발하는 데 소요된 시간으로, 소프트웨어의 설치 방법과는 직접적인 관련이 없습니다."
"previous","220305",2,"소프트웨어개발",36,"소프트웨어 형상관리(Configyration management)에 관한 설명으로 틀린 것은?","","① 소프트웨어에서 일어나는 수정이나 변경을 알아내고 제어하는 것을 의미한다.","② 소프트웨어 개발의 전체 비용을 줄이고, 개발 과정의 여러 방해 요인이 최소화되도록 보증하는 것을 목적으로 한다.","③ 형상관리를 위하여 구성된 팀을 'chief programmer team'이라고 한다.","④ 형상관리의 기능 중 하나는 버전 제어 기술이다.","③ 형상관리를 위하여 구성된 팀을 'chief programmer team'이라고 한다.","형상관리를 위하여 구성된 팀은 일반적으로 'configuration management team'이라고 합니다."
"previous","220305",2,"소프트웨어개발",37,"퀵 정렬에 관한 설명으로 옳은 것은?","","① 레코드의 키 값을 분석하여 같은 값끼리 그 순서에 맞는 버킷에 분배하였다가 버킷의 순서대로 레코드를 꺼내어 정렬한다.","② 주어진 파일에서 인접한 두 개의 레코드 키 값을 비교하여 그 크기에 따라 레코드 위치를 서로 교환한다.","③ 레코드의 많은 자료 이동을 없애고 하나의 파일을 부분적으로 나누어 가면서 정렬한다.","④ 임의의 레코드 키와 매개변수(h)값만큼 떨어진 곳의 레코드 키를 비교하여 서로 교환해 가면서 정렬한다.","③ 레코드의 많은 자료 이동을 없애고 하나의 파일을 부분적으로 나누어 가면서 정렬한다.","퀵 정렬은 분할 정복 알고리즘의 일종으로, 하나의 파일을 임의의 기준을 기준으로 두 개의 부분 파일로 분할하여, 각 부분 파일을 다시 퀵 정렬을 수행하여 정렬하는 방식으로 정렬합니다."
"previous","220305",2,"소프트웨어개발",38,"해싱 함수(Hashing Function)의 종류가 아닌 것은?","","① 제곱법(mid-square)","② 숫자분석법(digit analysis)","③ 개방주소법(open addressing)","④ 제산법(division)","③ 개방주소법(open addressing)","폐쇄 해싱은 모든 레코드를 한 버켓에 저장시키고 해싱 함수로 버켓 내 주소를 계산하는 방식이며, 개방 해싱은 레코드의 증감에 적용하기 위해 동적으로 해싱 함수가 교정되도록 한 방식입니다."
"previous","220305",2,"소프트웨어개발",39,"필드 테스팅(field testing)이라고도 불리며 개발자 없이 고객의 사용 환경에 소프트웨어를 설치하여 검사를 수행하는 인수검사 기법은?","","① 베타 검사","② 알파 검사","③ 형상 검사","④ 복구 검사","① 베타 검사","베타 검사는 개발자 없이 실제 사용자의 사용 환경에 소프트웨어를 설치하여 검사를 수행하는 인수검사 기법입니다."
"previous","220305",2,"소프트웨어개발",40,"다음 트리를 Preorder 운행법으로 운행할 경우 다섯 번째로 탐색되는 것은?","https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F210307%2FDEVOLT_EXAM_MOCK_210307_40.gif?alt=media","① C","② E","③ G","④ H","② E","Preorder는 전위순회로 부모, 좌측, 우측 순으로 방문합니다."
"previous","220305",3,"데이터베이스구축",41,"결과 값이 아래와 같을 때 SQL 질의로 옳은 것은?","https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F210307%2FDEVOLT_EXAM_MOCK_210307_41.gif?alt=media","① SELECT * FROM 공급자 WHERE공급자명 LIKE '%신%';","② SELECT * FROM 공급자 WHERE공급자명 LIKE '%대%';","③ SELECT * FROM 공급자 WHERE공급자명 LIKE '%사%';","④ SELECT * FROM 공급자 WHERE공급자명 IS NOT NULL;","① SELECT * FROM 공급자 WHERE공급자명 LIKE '%신%';","결과 값에서 공급자명에 '신'이 포함된 데이터만 출력되고 있기 때문에, 해당 조건을 만족하는 SQL 질의는 'SELECT * FROM 공급자 WHERE 공급자명 LIKE '%신%';' 입니다."
"previous","220305",3,"데이터베이스구축",42,"다음에서 설명하는 스키마(Schema)는?","https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F210307%2FDEVOLT_EXAM_MOCK_210307_42.gif?alt=media","① 개념 스키마","② 내부 스키마","③ 외부 스키마","④ 내용 스키마","① 개념 스키마","개념 스키마는 데이터베이스 전체의 논리적 구조를 정의하는 스키마로, 사용자나 응용 프로그램이 데이터베이스에 접근할 때 필요한 데이터의 구조와 관계를 정의합니다."
"previous","220305",3,"데이터베이스구축",43,"데이터베이스 설계 단계 중 저장 레코드 양식설계, 레코드 집중의 분석 및 설계, 접근 경로 설계와 관계되는 것은?","","① 논리적 설계","② 요구 조건 분석","③ 개념적 설계","④ 물리적 설계","④ 물리적 설계","물리적 구조는 데이터베이스의 데이터 저장 방식과 접근 방법을 표현하는 것으로, 데이터베이스의 성능과 효율성에 영향을 미칩니다."
"previous","220305",3,"데이터베이스구축",44,"다음 릴레이션의 카디널리티와 차수가 옳게 나타낸 것은?","https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F210307%2FDEVOLT_EXAM_MOCK_210307_44.gif?alt=media","① 카디널리티 : 4, 차수 : 4","② 카디널리티 : 4, 차수 : 6","③ 카디널리티 : 6, 차수 : 4","④ 카디널리티 : 6, 차수 : 6","② 카디널리티 : 4, 차수 : 6","이 릴레이션은 4개의 튜플과 6개의 속성으로 구성되어 있기 때문에 카디널리티는 4이고, 각 튜플은 6개의 속성을 가지므로 차수는 6입니다."
"previous","220305",3,"데이터베이스구축",45,"다음과 같은 트랙잭션의 특성은?","https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F210307%2FDEVOLT_EXAM_MOCK_210307_45.gif?alt=media","① 원자성(atomicity)","② 일관성(consistency)","③ 격리성(isolation)","④ 영속성(durability)","② 일관성(consistency)","일관성(consistency)은 트랜잭션이 실행되기 전과 실행된 후의 데이터 상태가 일관성 있어야 함을 의미합니다. 즉, 트랜잭션이 실행되는 동안 데이터의 일부분만 변경되어 데이터의 불일치가 발생하지 않도록 보장해야 합니다."
"previous","220305",3,"데이터베이스구축",46,"병행제어의 로킹(Locking) 단위에 대한 설명으로 옳지 않은 것은?","","① 데이터베이스, 파일, 레코드 등은 로킹 단위가 될 수 있다.","② 로킹 단위가 작아지면 로킹 오버헤드가 증가한다.","③ 한꺼번에 로킹할 수 있는 단위를 로킹단위라고 한다.","④ 로킹 단위가 작아지면 병행성 수준이 낮아진다.","④ 로킹 단위가 작아지면 병행성 수준이 낮아진다.","로킹 단위가 작아지면 다른 트랜잭션이 로킹을 얻기 위해 기다리는 시간이 줄어들기 때문에, 로킹 단위가 작아지면 병행성 수준이 높아집니다."
"previous","220305",3,"데이터베이스구축",47,"뷰(VIEW)에 대한 설명으로 옳지 않은 것은?","","① DBA는 보안 측면에서 뷰를 활용할 수 있다.","② 뷰 위에 또 다른 뷰를 정의할 수 있다.","③ 뷰에 대한 삽입, 갱신, 삭제 연산 시 제약사항이 따르지 않는다.","④ 독립적인 인덱스를 가질 수 없다.","③ 뷰에 대한 삽입, 갱신, 삭제 연산 시 제약사항이 따르지 않는다.","뷰는 기본 테이블의 데이터를 참조하여 만들어지는 가상의 테이블이기 때문에, 뷰에 대한 삽입, 갱신, 삭제 연산은 해당 뷰가 참조하는 기본 테이블의 제약사항을 따라야 합니다."
"previous","220305",3,"데이터베이스구축",48,"다음 정의에서 말하는 기본 정규형은?","https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F210307%2FDEVOLT_EXAM_MOCK_210307_48.gif?alt=media","① 제1정규형(1NF)","② 제2정규형(2NF)","③ 제3정규형(3NF)","④ 보이스/코드 정규형(BCNF)","① 제1정규형(1NF)","모든 속성이 원자값(Atomic Value)을 가지며, 중복된 데이터가 없어야 한다는 조건을 만족하기 때문에 제1정규형(1NF)입니다."
"previous","220305",3,"데이터베이스구축",49,"릴레이션 R1에 속한 애튜리뷰트의 조합인 외래키를 변경하려면 이를 참조하고 있는 릴레이션 R2의 기본키도 변경해야 하는데 이를 무엇이라 하는가?","","① 정보 무결성","② 고유 무결성","③ 널 제약성","④ 참조 무결성","④ 참조 무결성","참조 무결성이란, 외래키 값이 참조하고 있는 기본키 값과 일치해야 하는 제약 조건을 말합니다."
"previous","220305",3,"데이터베이스구축",50,"시스템 카탈로그에 대한 설명으로 틀린 것은?","","① 시스템 카탈로그의 갱신은 무결성 유지를 위하여 SQL을 이용하여 사용자가 직접 갱신하여야 한다.","② 데이터베이스에 포함되는 데이터 객체에 대한 정의나 명세에 대한 정보를 유지관리한다.","③ DBMS가 스스로 생성하고 유지하는 데이터베이스 내의 특별한 테이블의 집합체이다.","④ 카탈로그에 저장된 정보를 메타 데이터라고도 한다.","① 시스템 카탈로그의 갱신은 무결성 유지를 위하여 SQL을 이용하여 사용자가 직접 갱신하여야 한다.","시스템 카탈로그의 갱신은 DBMS가 자동으로 수행합니다."
"previous","220305",3,"데이터베이스구축",51,"조건을 만족하는 릴레이션의 수평적 부분집합으로 구성하며, 연산자의 기호는 그리스 문자 시그마(σ)를 사용하는 관계대수 연산은?","","① Select","② Project","③ Join","④ Division","① Select","Select 연산은 조건을 만족하는 릴레이션의 수평적 부분집합으로 구성하며, 연산자의 기호는 그리스 문자 시그마(σ)를 사용합니다."
"previous","220305",3,"데이터베이스구축",52,"SQL에서 스키마(schema), 도메인(domain), 테이블(table), 뷰(view), 인덱스(index)를 정의하거나 변경 또는 삭제할 때 사용하는 언어는?","","① DML(Data Manipulation Language)","② DDL(Data Definition Language)","③ DCL(Data Control Language)","④ IDL(Interactive Data Language)","② DDL(Data Definition Language)","DDL은 데이터베이스의 구조를 정의하는 언어로, 스키마, 도메인, 테이블, 뷰, 인덱스와 같은 데이터베이스 개체를 정의하거나 변경 또는 삭제할 때 사용합니다."
"previous","220305",3,"데이터베이스구축",53,"정규화를 거치지 않아 발생하게 되는 이상(anomaly) 현상의 종류에 대한 설명으로 옳지 않은 것은?","","① 삭제 이상이란 릴레이션에서 한 튜플을 삭제할 때 의도와는 상관없는 값들로 함께 삭제되는 연쇄 삭제 현상이다.","② 삽입 이상이란 릴레이션에서 데이터를 삽입할 때 의도와는 상관없이 원하지 않는 값들로 함께 삽입되는 현상이다.","③ 갱신 이상이란 릴레이션에서 튜플에 있는 속성값을 갱신할 때 일부 튜플의 정보만 갱신되어 정보에 모순이 생기는 현상이다.","④ 종속 이상이란 하나의 릴레이션에 하나 이상의 함수적 종속성이 존재하는 현상이다.","④ 종속 이상이란 하나의 릴레이션에 하나 이상의 함수적 종속성이 존재하는 현상이다.","종속 이상은 하나의 릴레이션에 함수적 종속성이 잘못 설계되어 데이터의 무결성이 훼손되는 현상입니다."
"previous","220305",3,"데이터베이스구축",54,"관계 데이터 모델에서 릴레이션(relation)에 관한 설명으로 옳은 것은?","","① 릴레이션의 각 행을 스키마(schema)라 하며, 예로 도서 릴레이션을 구성하는 스키마에서는 도서번호, 도서명, 저자, 가격 등이 있다.","② 릴레이션의 각 열을 튜플(tuple)이라 하며, 하나의 튜플은 각 속성에서 정의된 값을 이용하여 구성된다.","③ 도메인(domain)은 하나의 속성이 가질 수 있는 같은 타입의 모든 값의 집합으로 각 속성의 도메인은 원자값을 갖는다.","④ 속성(attribute)은 한 개의 릴레이션의 논리적인 구조를 정의한 것으로 릴레이션의 이름과 릴레이션에 포함된 속성들의 집합을 의미한다.","③ 도메인(domain)은 하나의 속성이 가질 수 있는 같은 타입의 모든 값의 집합으로 각 속성의 도메인은 원자값을 갖는다.","도메인은 속성이 가질 수 있는 값의 범위를 정의하는 것으로, 더 이상 분해되지 않는 가장 작은 단위의 값인 원자값을 갖습니다."
"previous","220305",3,"데이터베이스구축",55,"3NF에서 BCNF가 되기 위한 조건은?","","① 이행적 함수 종속 제거","② 부분적 함수 종속 제거","③ 다치 종속 제거","④ 결정자이면서 후보 키가 아닌 것 제거","④ 결정자이면서 후보 키가 아닌 것 제거","해당 속성이 다른 속성에 종속되어 있을 경우, 이를 통해 결정되는 함수 종속성이 존재하기 때문에 이러한 속성을 제거함으로써 이행적 함수 종속, 부분적 함수 종속, 다치 종속 등의 문제를 해결할 수 있고, BCNF를 만족시킬 수 있습니다."
"previous","220305",3,"데이터베이스구축",56,"데이터베이스 성능에 많은 영향을 주는 DBMS의 구성 요소로 테이블과 클러스터에 연관되어 독립적인 저장 공간을 보유하며, 데이터베이스에 저장된 자료를 더욱 빠르게 조회하기 위하여 사용되는 것은?","","① 인덱스(Index)","② 트랙잭션(Transaction)","③ 역정규화(Denormalization)","④ 트리거(Trigger)","① 인덱스(Index)","인덱스는 테이블의 특정 컬럼에 대한 정보를 저장한 자료구조로, 인덱스를 사용하면 테이블의 특정 컬럼에 대한 데이터를 빠르게 조회할 수 있습니다."
"previous","220305",3,"데이터베이스구축",57,"아래의 SQL문을 실행한 결과는?","https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F210307%2FDEVOLT_EXAM_MOCK_210307_57.gif?alt=media","① https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F210307%2FDEVOLT_EXAM_MOCK_210307_57_01.gif?alt=media","② https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F210307%2FDEVOLT_EXAM_MOCK_210307_57_02.gif?alt=media","③ https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F210307%2FDEVOLT_EXAM_MOCK_210307_57_03.gif?alt=media","④ https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F210307%2FDEVOLT_EXAM_MOCK_210307_57_04.gif?alt=media","② https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F210307%2FDEVOLT_EXAM_MOCK_210307_57_02.gif?alt=media","R2 테이블에서 과목번호가 C100인 학번의 학생은 R1 테이블의 홍길동, 강남길, 오말자 입니다."
"previous","220305",3,"데이터베이스구축",58,"『회원』테이블 생성 후 『주소』 필드(컬럼)가 누락되어 이를 추가하려고 한다. 이에 적합한 SQL명령어는?","","① DELETE","② RESTORE","③ ALTER","④ ACCESS","③ ALTER","'ALTER TABLE' 명령어는 테이블의 구조를 변경하는 데 사용됩니다."
"previous","220305",3,"데이터베이스구축",59,"트랙잭션을 수행하는 도중 장애로 인해 손상된 데이터베이스를 손상되기 이전에 정상적인 상태로 복구시키는 작업은?","","① Recovery","② Commit","③ Abort","④ Restart","① Recovery","손상된 데이터베이스를 손상되기 이전의 정상적인 상태로 복구시키는 작업을 Recovery라고 합니다."
"previous","220305",3,"데이터베이스구축",60,"E-R 다이어그램의 표기법으로 옳지 않은 것은?","","① 개체타입 - 사각형","② 속성 - 타원","③ 관계집합 - 삼각형","④ 개체타입과 속성을 연결 – 선","③ 관계집합 - 삼각형","E-R 다이어그램의 표기법에서 관계집합은 마름모 모양으로 표시합니다."
"previous","220305",4,"프로그래밍언어활용",61,"다음 중 응집도가 가장 높은 것은?","","① 절차적 응집도","② 순차적 응집도","③ 우연적 응집도","④ 논리적 응집도","② 순차적 응집도","순차적 응집도는 모듈 내부의 구성 요소들이 가장 밀접하게 관련되어 있는 관계로, 응집도가 가장 높습니다."
"previous","220305",4,"프로그래밍언어활용",62,"OSI 7계층에서 물리적 연결을 이용해 신뢰성 있는 정보를 전송하려고 동기화, 오류제어, 흐름제어 등의 전송에러를 제어하는 계층은?","","① 데이터 링크 계층","② 물리 계층","③ 응용 계층","④ 표현 계층","① 데이터 링크 계층","OSI 7계층 중 데이터 링크 계층은 물리 계층과 네트워크 계층 사이에 위치하며, 물리적 연결을 통해 신뢰성 있는 정보를 전송하기 위한 역할을 합니다."
"previous","220305",4,"프로그래밍언어활용",63,"운영체제를 기능에 따라 분류할 경우 제어 프로그램이 아닌 것은?","","① 데이터 관리 프로그램","② 서비스 프로그램","③ 작업 제어 프로그램","④ 감시 프로그램","② 서비스 프로그램","서비스 프로그램은 사용자의 편의를 위해 제공되는 프로그램으로, 화면 출력, 입력, 파일 처리, 프린터 출력, 네트워크 접속 등이 있습니다."
"previous","220305",4,"프로그래밍언어활용",64,"IEEE 802.3 LAN에서 사용되는 전송매체 접속제어(MAC) 방식은?","","① CSMA/CD","② Token Bus","③ Token Ring","④ Slotted Ring","① CSMA/CD","IEEE 802.3 LAN은 이더넷을 표준화한 것으로, CSMA/CD 방식을 사용합니다."
"previous","220305",4,"프로그래밍언어활용",65,"기억공간이 15K, 23K, 22K, 21K 순으로 빈 공간이 있을 때 기억장치 배치 전력으로 “First Fit”을 사용하여 17K의 프로그램을 적재할 경우 내부단편화의 크기는 얼마인가?","","① 5K","② 6K","③ 7K","④ 8K","② 6K","First Fit은 빈 공간 중 가장 적합한 크기의 빈 공간에 프로그램을 적재하는 방식으로, 17K의 프로그램을 적재할 경우 가장 적합한 빈 공간은 23K입니다."
"previous","220305",4,"프로그래밍언어활용",66,"교착상태가 발생할 수 있는 조건이 아닌 것은?","","① Mutual exclusion","② Hold and wait","③ Non-preemption","④ Linear wait","④ Linear wait","Linear wait 조건은 모든 프로세스가 자원을 순차적으로 요구하는 경우로, 모든 프로세스가 자원을 하나씩 사용하고 있으므로, 교착상태가 발생하지 않습니다."
"previous","220305",4,"프로그래밍언어활용",67,"IPv6에 대한 설명으로 틀린 것은?","","① 멀티캐스팅(Multicast) 대신 브로드캐스트(Broadcast)를 사용한다.","② 보안과 인증 확장 헤더를 사용함으로써 인터넷 계층의 보안기능을 강화하였다.","③ 애니캐스트(Anycast)는 하나의 호스트에서 그룹 내의 가장 가까운 곳에 있는 수신자에게 전달하는 방식이다.","④ 128비트 주소체계를 사용한다.","① 멀티캐스팅(Multicast) 대신 브로드캐스트(Broadcast)를 사용한다.","IPv6에서는 멀티캐스팅 주소를 사용하여 멀티캐스팅을 구현합니다."
"previous","220305",4,"프로그래밍언어활용",68,"TCP/IP 프로토콜에서 TCP가 해당하는 계층은?","","① 데이터 링크 계층","② 네트워크 계층","③ 트랜스포트 계층","④ 세션 계층","③ 트랜스포트 계층","TCP는 전송 계층에서 데이터의 흐름 제어, 오류 제어, 순서 제어 등을 수행하여 데이터의 신뢰성을 보장합니다."
"previous","220305",4,"프로그래밍언어활용",69,"C언어에서 변수로 사용할 수 없는 것은?","","① data02","② int01","③ _sub","④ short","④ short","C언어에서 short는 시스템 예약어로, 변수로 사용할 수 없습니다."
"previous","220305",4,"프로그래밍언어활용",70,"다음 JAVA 코드 출력문의 결과는?","https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F210307%2FDEVOLT_EXAM_MOCK_210307_70.gif?alt=media","① 5 + 2 = 34<chal>5 + 2 = 34","② 5 + 2 + 3 + 4<chal>5 + 2 = 7","③ 7 = 7<chal>7 + 7","④ 5 + 2 = 34<chal>5 + 2 = 7","④ 5 + 2 = 34<chal>5 + 2 = 7","큰따옴표 없이 숫자를 입력하면 숫자형 데이터로 인식하지만, 큰따옴표로 묶어진 것은 string(문자열)로 인식합니다."
"previous","220305",4,"프로그래밍언어활용",71,"C언어에서 문자열을 정수형으로 변환하는 라이브러리 함수는?","","① atoi( )","② atof( )","③ itoa( )","④ ceil( )","① atoi( )","atoi( ) 함수는 문자열의 첫 번째 문자가 숫자이면 해당 문자부터 시작하여 숫자로 인식 가능한 모든 문자를 정수로 변환하고, 그 결과를 반환합니다."
"previous","220305",4,"프로그래밍언어활용",72,"운영체제의 가상기억장치 관리에서 프로세스가 일정 시간동안 자주 참조하는 페이지들의 집합을 의미하는 것은?","","① Locality","② Deadlock","③ Thrashing","④ Working Set","④ Working Set","Working Set은 프로세스가 실행되면서 자주 참조하는 페이지들의 집합입니다."
"previous","220305",4,"프로그래밍언어활용",73,"결합도가 낮은 것부터 높은 순으로 옳게 나열한 것은?","https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F210307%2FDEVOLT_EXAM_MOCK_210307_73.gif?alt=media","① (ㄱ) → (ㄴ) → (ㄹ) → (ㅂ) → (ㅁ) → (ㄷ)","② (ㄴ) → (ㄹ) → (ㅁ) → (ㅂ) → (ㄷ) → (ㄱ)","③ (ㄴ) → (ㄹ) → (ㅂ) → (ㅁ) → (ㄷ) → (ㄱ)","④ (ㄱ) → (ㄴ) → (ㄹ) → (ㅁ) → (ㅂ) → (ㄷ)","③ (ㄴ) → (ㄹ) → (ㅂ) → (ㅁ) → (ㄷ) → (ㄱ)","결합도가 약한 순서대로 자료결합도, 스탬프결합도, 제어결합도, 외부결합도, 공유결합도, 내용결합도 입니다."
"previous","220305",4,"프로그래밍언어활용",74,"다음 설명의 ㉠과 ㉡에 들어갈 내용으로 옳은 것은?","https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F210307%2FDEVOLT_EXAM_MOCK_210307_74.gif?alt=media","① ㉠ : Paging, ㉡ : Segmentation","② ㉠ : Segmentation, ㉡ : Allocatin","③ ㉠ : Segmentation, ㉡ : Compaction","④ ㉠ : Paging, ㉡ : Linking","① ㉠ : Paging, ㉡ : Segmentation","Paging은 논리적 주소를 고정된 크기의 페이지로 나누어 처리하는 방식이고, Segmentation은 논리적 주소를 논리적 단위로 나누어 처리하는 방식입니다."
"previous","220305",4,"프로그래밍언어활용",75,"라이브러리의 개념과 구성에 대한 설명 중 틀린 것은?","","① 라이브러리란 필요할 때 찾아서 쓸 수 있도록 모듈화되어 제공되는 프로그램을 말한다.","② 프로그래밍 언어에 따라 일반적으로 도움말, 설치 파일, 샘플 코드 등을 제공한다.","③ 외부 라이브러리는 프로그래밍 언어가 기본적으로 가지고 있는 라이브러리를 의미하며, 표준 라이브러리는 별도의 파일 설치를 필요로 하는 라이브러리를 의미한다.","④ 라이브러리는 모듈과 패키지를 총칭하며, 모듈이 개별 파일이라면 패키지는 파일들을 모아 놓은 폴더라고 볼 수 있다.","③ 외부 라이브러리는 프로그래밍 언어가 기본적으로 가지고 있는 라이브러리를 의미하며, 표준 라이브러리는 별도의 파일 설치를 필요로 하는 라이브러리를 의미한다.","외부 라이브러리는 프로그래밍 언어가 기본적으로 가지고 있지 않은 라이브러리이기 때문에 반드시 별도의 파일 설치를 필요로 합니다."
"previous","220305",4,"프로그래밍언어활용",76,"C언어에서 산술 연산자가 아닌 것은?","","① %","② *","③ /","④ =","④ =","=는 대입 연산자입니다."
"previous","220305",4,"프로그래밍언어활용",77,"UDP 특성에 해당되는 것은?","","① 양방향 연결형 서비스를 제공한다.","② 송신중에 링크를 유지관리하므로 신뢰성이 높다.","③ 순서제어, 오류제어, 흐름제어 기능을 한다.","④ 흐름제어나 순서제어가 없어 전송속도가 빠르다.","④ 흐름제어나 순서제어가 없어 전송속도가 빠르다.","UDP는 비연결형 서비스로, 연결 설정이나 끊기를 하지 않습니다. 또한, 순서제어, 오류제어, 흐름제어 기능을 하지 않습니다."
"previous","220305",4,"프로그래밍언어활용",78,"JAVA에서 변수와 자료형에 대한 설명으로 틀린 것은?","","① 변수는 어떤 값을 주기억 장치에 기억하기 위해서 사용하는 공간이다.","② 변수의 자료형에 따라 저장할 수 있는 값의 종류와 범위가 달라진다.","③ char 자료형은 나열된 여러 개의 문자를 저장하고자 할 때 사용한다.","④ boolean 자료형은 조건이 참인지 거짓인지 판단하고자 할 때 사용한다.","③ char 자료형은 나열된 여러 개의 문자를 저장하고자 할 때 사용한다.","Java에서 char 자료형은 하나의 문자를 저장하기 위한 자료형이며, 나열된 여러 개의 문자를 저장하기 위해서는 String 자료형을 사용해야 합니다.."
"previous","220305",4,"프로그래밍언어활용",79,"다음은 파이썬으로 만들어진 반복문 코드이다. 이 코드의 결과는?","https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F210307%2FDEVOLT_EXAM_MOCK_210307_79.gif?alt=media","① A, B, C 출력이 반복된다.","② A, B, C","③ A, B, C, D 출력이 반복된다.","④ A, B, C, D 까지만 출력된다.","① A, B, C 출력이 반복된다.","while(true)로 무한 반복, continue로 이후의 문장은 건너뛰므로, A, B, C 출력만 반복됩니다."
"previous","220305",4,"프로그래밍언어활용",80,"WAS(Web Application Server)가 아닌 것은?","","① JEUS","② JVM","③ Tomcat","④ WebSphere","② JVM","JVM(Java Virtual Machine)은 Java 언어로 작성된 프로그램을 실행하기 위한 가상 머신입니다."
"previous","220305",5,"정보시스템구축관리",81,"다음 암호 알고리즘 중 성격이 다른 하나는?","","① MD4","② MD5","③ SHA-1","④ AES","④ AES","MD4, MD5, SHA-1은 모두 메시지 다이제스트 암호 알고리즘이고, AES는 대칭 키 암호 알고리즘입니다."
"previous","220305",5,"정보시스템구축관리",82,"크래커가 침입하여 백도어를 만들어 놓거나, 설정파일을 변경했을 때 분석하는 도구는?","","① tripwire","② tcpdump","③ cron","④ netcat","① tripwire","Tripwire는 파일의 무결성을 검사하는 도구로, 파일의 해시값을 저장하고, 이후에 파일의 해시값을 다시 계산하여 변경 여부를 확인합니다."
"previous","220305",5,"정보시스템구축관리",83,"다음 내용이 설명하는 것은?","https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F210307%2FDEVOLT_EXAM_MOCK_210307_83.gif?alt=media","① GRID","② TELNET","③ GPN","④ MQTT","④ MQTT","MQTT는 IoT 기기들 간의 경량화된 메시지 전송 프로토콜로, 대규모의 IoT 기기들 간의 통신에 적합하며, 저전력 환경에서도 사용이 가능합니다."
"previous","220305",5,"정보시스템구축관리",84,"나선형(Spiral) 모형의 주요 태스크에 해당되지 않는 것은?","","① 버전 관리","② 위험 분석","③ 개발","④ 평가","① 버전 관리","나선형 모형은 반복적이며 점진적인 개발 방법론으로, 위험 분석, 개발, 평가의 세 가지 단계를 반복적으로 수행합니다."
"previous","220305",5,"정보시스템구축관리",85,"정보 보안을 위한 접근통제 정책 종류에 해당하지 않는 것은?","","① 임의적 접근 통제","② 데이터 전환 접근 통제","③ 강제적 접근 통제","④ 역할 기반 접근 통제","② 데이터 전환 접근 통제","데이터 전환 과정에서 접근통제 정책을 적용할 수도 있지만, 이는 접근통제 정책의 종류가 아닙니다."
"previous","220305",5,"정보시스템구축관리",86,"LOC기법에 의하여 예측된 총 라인수가 36,000라인, 개발에 참여할 프로그래머가 6명, 프로그래머들의 평균 생산성이 월간 300라인일 때 개발에 소요되는 기간은?","","① 5개월","② 10개월","③ 15개월","④ 20개월","④ 20개월","개발에 소요되는 시간은 총 라인수 / 월간 생산성 * 프로그래머 수로 계산됩니다."
"previous","220305",5,"정보시스템구축관리",87,"정형화된 분석 절차에 따라 사용자 요구사항을 파악, 문서화하는 체계적 분석방법으로 자료흐름도, 자료사전, 소단위명세서의 특징을 갖는 것은?","","① 구조적 개발 방법론","② 객체지향 개발 방법론","③ 정보공학 방법론","④ CBD 방법론","① 구조적 개발 방법론","구조적 개발 방법론은 1960년대부터 사용되어 온 전통적인 소프트웨어 개발 방법론으로, 자료흐름도, 자료사전, 소단위명세서 등의 문서를 사용하여 사용자 요구사항을 파악하고 문서화합니다."
"previous","220305",5,"정보시스템구축관리",88,"정보보호를 위한 암호화에 대한 설명으로 틀린 것은?","","① 평문 – 암호화되기 전의 원본 메시지","② 암호문 – 암호화가 적용된 메시지","③ 복호화 – 평문을 암호문으로 바꾸는 작업","④ 키(Key) - 적절한 암호화를 위하여 사용하는 값","③ 복호화 – 평문을 암호문으로 바꾸는 작업","암호화는 평문을 암호문으로 바꾸는 작업이고, 복호화는 암호문을 평문으로 바꾸는 작업입니다."
"previous","220305",5,"정보시스템구축관리",89,"다음 내용이 설명하는 것은?","https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F210307%2FDEVOLT_EXAM_MOCK_210307_89.gif?alt=media","① OTT","② Baas","③ SDDC","④ Wi-SUN","② Baas","Baas는 Blockchain as a Service의 약자로, 블록체인 기술을 클라우드 서비스 형태로 제공하는 것을 의미합니다."
"previous","220305",5,"정보시스템구축관리",90,"소프트웨어 비용 산정 기법 중 개발 유형으로 organic, semi-detach, embedded로 구분되는 것은?","","① PUTNAM","② COCOMO","③ FP","④ SLIM","② COCOMO","COCOMO는 Boehm이 제안한 소프트웨어 비용 산정 기법으로, 개발 유형을 organic, semi-detached, embedded로 구분하여 비용을 산정합니다."
"previous","220305",5,"정보시스템구축관리",91,"다음 LAN의 네트워크 토폴로지는 어떤 형인가?","https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F210307%2FDEVOLT_EXAM_MOCK_210307_91.gif?alt=media","① 그물형","② 십자형","③ 버스형","④ 링형","③ 버스형","네트워크의 모든 장치들이 하나의 케이블에 연결되어 있으며, 데이터가 이 케이블을 통해 전송되는 구조를 버스형이라고 합니다."
"previous","220305",5,"정보시스템구축관리",92,"전기 및 정보통신기술을 활용하여 전력망을 지능화, 고도화함으로써 고품질의 전력서비스를 제공하고 에너지 이용효율을 극대화하는 전력망은?","","① 사물 인터넷","② 스마트 그리드","③ 디지털 아카이빙","④ 미디어 빅뱅","② 스마트 그리드","스마트 그리드는 전기의 생산, 운반, 소비 과정에 정보통신기술을 접목하여 공급자와 소비자가 서로 상호작용함으로써 효율성을 높인 지능형 전력망시스템입니다."
"previous","220305",5,"정보시스템구축관리",93,"다음 내용이 설명하는 소프트웨어 개발 모형은?","https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F210307%2FDEVOLT_EXAM_MOCK_210307_93.gif?alt=media","① 프로토타입 모형","② 나선형 모형","③ 폭포수 모형","④ RAD 모형","③ 폭포수 모형","폭포수 모형은 개발 생명주기를 계획, 분석, 설계, 구현, 테스트, 유지보수의 단계로 나누어 순차적으로 진행하는 모형입니다."
"previous","220305",5,"정보시스템구축관리",94,"스트림 암호화 방식의 설명으로 옳지 않은 것은?","","① 비트/바이트/단어들을 순차적으로 암호화한다.","② 해쉬 함수를 이용한 해쉬 암호화 방식을 사용한다.","③ RC4는 스트림 암호화 방식에 해당한다.","④ 대칭키 암호화 방식이다.","② 해쉬 함수를 이용한 해쉬 암호화 방식을 사용한다.","스트림 암호화 방식은 비트/바이트/단어들을 순차적으로 암호화하는 방식입니다."
"previous","220305",5,"정보시스템구축관리",95,"세션 하이재킹을 탐지하는 방법으로 거리가 먼 것은?","","① FTP SYN SEGNENT 탐지","② 비동기화 상태 탐지","③ ACK STORM 탐지","④ 패킷의 유실 및 재전송 증가 탐지","① FTP SYN SEGNENT 탐지","FTP SYN SEGNENT 탐지는 세션 하이재킹을 탐지하는 방법 중 하나이지만, 다른 방법들에 비해 거리가 먼 방법입니다. 다른 방법들은 세션 하이재킹으로 인해 발생하는 특정 패턴을 탐지하여 공격을 탐지하는 방법입니다."
"previous","220305",5,"정보시스템구축관리",96,"소프트웨어공학에 대한 설명으로 거리가 먼 것은?","","① 소프트웨어공학이란 소프트웨어의 개발, 운용, 유지보수 및 파기에 대한 체계적인 접근 방법이다.","② 소프트웨어공학은 소프트웨어 제품의 품질을 향상시키고 소프트웨어 생산성과 작업 만족도를 증대시키는 것이 목적이다.","③ 소프트웨어공학의 궁극적 목표는 최대의 비용으로 계획된 일정보다 가능한 빠른 시일 내에 소프트웨어를 개발하는 것이다.","④ 소프트웨어공학은 신뢰성 있는 소프트웨어를 경제적인 비용으로 획득하기 위해 공학적 원리를 정립하고 이를 이용하는 것이다.","③ 소프트웨어공학의 궁극적 목표는 최대의 비용으로 계획된 일정보다 가능한 빠른 시일 내에 소프트웨어를 개발하는 것이다.","소프트웨어공학의 목표는 최소의 비용으로 계획된 일정에 맞춰 소프트웨어를 개발하는 것입니다."
"previous","220305",5,"정보시스템구축관리",97,"소프트웨어 개발 방법론 중 CBD(Component Based Development)에 대한 설명으로 틀린 것은?","","① 생산성과 품질을 높이고, 유지보수 비용을 최소화할 수 있다.","② 컴포넌트 제작 기법을 통해 재사용성을 향상시킨다.","③ 모듈의 분할과 정복에 의한 하향식 설계방식이다.","④ 독립적인 컴포넌트 단위의 관리로 복잡성을 최소화할 수 있다.","③ 모듈의 분할과 정복에 의한 하향식 설계방식이다.","CBD(Component Based Development)는 재사용 가능한 컴포넌트를 조합하여 소프트웨어를 개발하는 방법론으로, 상향식 설계방식입니다."
"previous","220305",5,"정보시스템구축관리",98,"정보 보안의 3요소에 해당하지 않는 것은?","","① 기밀성","② 무결성","③ 가용성","④ 휘발성","④ 휘발성","정보 보안의 3요소는 기밀성, 무결성, 가용성입니다."
"previous","220305",5,"정보시스템구축관리",99,"소셜 네트워크에서 악의적인 사용자가 지인 또는 특정 유명인으로 가장하여 활동하는 공격 기법은?","","① Evil Twin Attack","② Phishing","③ Logic Bomb","④ Cyberbullying","① Evil Twin Attack","Evil Twin Attack은 악의적인 사용자가 지인 또는 특정 유명인으로 가장하여 소셜 네트워크 상에서 가짜 계정을 만들고, 이를 이용해 사용자들의 개인정보를 탈취하거나 악성코드를 유포하는 공격 기법입니다. (가답안은 1번으로 발표되었지만, 확정답안은 1/2번이 모두 정답처리 된 문항입니다.)"
"previous","220305",5,"정보시스템구축관리",100,"공개키 암호에 대한 설명으로 틀린 것은?","","① 10명이 공개키 암호를 사용할 경우 5개의 키가 필요하다.","② 복호화키는 비공개 되어 있다.","③ 송신자는 수신자의 공개키로 문서를 암호화한다.","④ 공개키 암호로 널리 알려진 알고리짐은 RSA가 있다.","① 10명이 공개키 암호를 사용할 경우 5개의 키가 필요하다.","공개키 암호는 암호화키와 복호화키가 서로 다르기 때문에, 10명이 공개키 암호를 사용할 경우 10개의 키가 필요합니다."