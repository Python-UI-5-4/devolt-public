test,date,snumber,sname,qnumber,qname1,qname2,example1,example2,example3,example4,answer,explain
"previous","220305",1,"소프트웨어설계",1,"요구사항 분석 시에 필요한 기술로 가장 거리가 먼 것은?","","① 청취과 인터뷰 질문 기술","② 분석과 중재기술","③ 설계 및 코딩 기술","④ 관찰 및 모델 작성 기술","③ 설계 및 코딩 기술","설계 및 코딩 기술은 요구사항을 구현하기 위한 기술입니다."
"previous","220305",1,"소프트웨어설계",2,"다음 내용이 설명하는 디자인 패턴은?","https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F200822%2FDEVOLT_EXAM_MOCK_200822_02.gif?alt=media","① Visitor패턴","② Observer패턴","③ Factory Method 패턴","④ Bridge 패턴","③ Factory Method 패턴","Factory Method 패턴은 객체를 생성하는 인터페이스를 정의하고, 이를 서브클래스에서 구현하여 객체를 생성하는 패턴입니다."
"previous","220305",1,"소프트웨어설계",3,"럼바우 객체 지향 분석과 거리가 먼 것은?","","① 기능 모델링","② 동적 모델링","③ 객체 모델링","④ 정적 모델링","④ 정적 모델링","정적 모델링은 시스템의 구조와 구성을 표현하는 모델링 방법인 반면, 럼바우 객체 지향 분석은 시스템의 기능과 동작을 표현하는 모델링 방법입니다."
"previous","220305",1,"소프트웨어설계",4,"애자일 기법에 대한 설명으로 맞지 않은 것은?","","① 절차와 도구보다 개인과 소통을 중요하게 생각한다.","② 계획에 중점을 두어 변경 대응이 난해하다.","③ 소프트웨어가 잘 실행되는데 가치를 둔다.","④ 고객과의 피드백을 중요하게 생각한다.","② 계획에 중점을 두어 변경 대응이 난해하다.","애자일 기법은 반복적이고 점진적인 개발을 통해 고객의 요구사항을 빠르게 반영하는 것을 목표로 하기 때문에 계획에 중점을 두기보다는 **변화에 유연하게 대응**할 수 있도록 합니다."
"previous","220305",1,"소프트웨어설계",5,"미들웨어 솔루션의 유형에 포함되지 않는 것은?","","① WAS","② Web Server","③ RPC","④ ORB","② Web Server","Web Server는 클라이언트의 요청을 받아 처리하고, 응답을 전송하는 소프트웨어입니다. 애플리케이션과 하드웨어 플랫폼 사이에서 소프트웨어 계층을 제공하지 않으므로, 미들웨어 솔루션의 범주에 포함되지 않습니다."
"previous","220305",1,"소프트웨어설계",6,"UML에서 시퀀스 다이어그램의 구성 항목에 해당하지 않는 것은?","","① 생명선","② 실행","③ 확장","④ 메시지","③ 확장","확장은 시퀀스 다이어그램의 일부를 다른 다이어그램으로 대체하여 표현합니다."
"previous","220305",1,"소프트웨어설계",7,"객체지향에서 정보 은닉과 가장 밀접한 관계가 있는 것은?","","① Encapsulation","② Class","③ Method","④ Instance","① Encapsulation","Encapsulation은 객체의 데이터와 메소드를 한 곳에 모아놓는 것을 의미합니다. 이렇게 하면 객체의 데이터가 외부에서 접근할 수 없도록 보호할 수 있습니다."
"previous","220305",1,"소프트웨어설계",8,"디자인 패턴 중에서 행위적 패턴에 속하지 않는 것은?","","① 커맨드 (Command) 패턴","② 옵저버 (Obseerver) 패턴","③ 프로토타입 (Prototype) 패턴","④ 상태 (State) 패턴","③ 프로토타입 (Prototype) 패턴","프로토타입 패턴은 새로운 객체를 기존 객체의 복사본으로 생성하는 패턴으로, 패턴이 아닌 생성 패턴에 속합니다."
"previous","220305",1,"소프트웨어설계",9,"UI 설계 원칙 중 누구나 쉽게 이해하고 사용할 수 있어야 한다는 원칙은?","","① 희소성","② 유연성","③ 직관성","④ 멀티운용성","③ 직관성","직관성은 사용자가 쉽게 이해하고 사용할 수 있는 인터페이스를 제공하는 것을 의미합니다."
"previous","220305",1,"소프트웨어설계",10,"코드의 기본 기능으로 거리가 먼 것은?","","① 복잡성","② 표준화","③ 분류","④ 식별","① 복잡성","복잡성은 코드의 품질을 평가하는 요소 중 하나이지만, 코드의 기본 기능은 아닙니다."
"previous","220305",1,"소프트웨어설계",11,"다음 ( ) 안에 들어갈 내용으로 옳은 것은?","https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F200822%2FDEVOLT_EXAM_MOCK_200822_11.gif?alt=media","① 협약(Contract)","② 프로토콜(Protocol)","③ 패턴(Pattern)","④ 관계(Relation)","① 협약(Contract)","클래스에 대한 여러 가정을 공유하도록 명세한 것을 협약에 의한 설계(Design by Contract)라고 합니다."
"previous","220305",1,"소프트웨어설계",12,"UML에서 활용되는 다이어그램 중, 시스템의 동작을 표현하는 행위(Behavioral) 다이어그램에 해당하지 않는 것은?","","① 유스케이스 다이어그램(Use Case Diagram)","② 시퀀스 다이어그램(Sequence Diagram)","③ 활동 다이어그램(Activity Diagram)","④ 배치 다이어그램(Deployment Diagram)","④ 배치 다이어그램(Deployment Diagram)","배치(Deployment) 다이어그램은 구조적(Structural) 다이어그램에 해당합니다."
"previous","220305",1,"소프트웨어설계",13,"객체 지향 소프트웨어 공학에서 하나 이상의 유사한 객체들을 묶어서 하나의 공통된 특성을 표현한 것은?","","① 트랜지션","② 클래스","③ 시퀀스","④ 서브루틴","② 클래스","클래스는 객체 지향 프로그래밍의 기본 단위로, 객체의 속성(attribute)과 메서드(method)를 정의합니다. 클래스는 유사한 객체들을 묶어서 하나의 공통된 특성을 표현하기 때문에, 객체지향 설계와 구현에서 중요한 역할을 합니다."
"previous","220305",1,"소프트웨어설계",14,"아래의 UML 모델에서 '차' 클래스와 각 클래스의 관계로 옳은 것은?","https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F200822%2FDEVOLT_EXAM_MOCK_200822_14.gif?alt=media","① 추상화 관계","② 의존 관계","③ 일반화 관계","④ 그룹 관계","③ 일반화 관계","'차' 클래스는 '승용차', '트럭', '버스' 클래스들의 공통적인 특성을 가지고 있으므로, 이들 클래스들과 '일반화 관계'를 가집니다. 이 관계는 상위 클래스인 '차'가 하위 클래스인 '승용차', '트럭', '버스'들의 공통적인 특성을 상속받는 것을 의미합니다."
"previous","220305",1,"소프트웨어설계",15,"객체지향 소프트웨어 설계시 디자인 패턴을 구성하는 요소로서 가장 거리가 먼 것은?","","① 개발자 이름","② 문제 및 배경","③ 사례","④ 샘플코드","① 개발자 이름","디자인 패턴은 누구나 사용할 수 있는 공유 자산으로, 개발자 이름은 디자인 패턴을 구성하는 요소가 아닙니다."
"previous","220305",1,"소프트웨어설계",16,"자료 사전에서 자료의 반복을 의미하는 것은?","","① =","② ( )","③ { }","④ [ ]","③ { }","자료 사전에서 { }는 자료의 배열을 의미합니다. 배열은 동일한 종류의 데이터를 순차적으로 나열한 것으로, 반복을 나타내기 위해 사용됩니다."
"previous","220305",1,"소프트웨어설계",17,"객체지향 설계 원칙 중, 서브타입(상속받은 하위 클래스)은 어디에서나 자신의 기반타입(상위클래스)으로 교체할 수 있어야 함을 의미하는 원칙은?","","① ISP(Interface Segregation Principle)","② DIP(Dependency Inversion Principle)","③ LSP(Liskov Substitution Principle)","④ SRP(Single Responsibility Principle)","③ LSP(Liskov Substitution Principle)","리스코프 치환 원칙은 객체 지향 설계의 5원칙 중 하나로, 서브타입은 기반타입과 동일한 역할을 수행할 수 있어야 한다는 원칙입니다."
"previous","220305",1,"소프트웨어설계",18,"자료흐름도(Data Flow Diagram)의 구성요소로 옳은 것은?","","① process, data flow, data store, comment","② process, data flow, data store, terminator","③ data flow, data store, terminator, data dictionary","④ process, data store, terminator, mini-spec","② process, data flow, data store, terminator","자료흐름도는 process(처리), data flow(자료흐름), data store(자료저장소), terminator(종료점)의 구성요소로 이루어져 있습니다."
"previous","220305",1,"소프트웨어설계",19,"CASE(Computer-Aided Software Engineering)도구에 대한 설명으로 거리가 먼 것은?","","① 소프트웨어 개발 과정의 일부 또는 전체를 자동화하기 위한 도구이다.","② 표준화된 개발 환경 구축 및 문서 자동화 기능을 제공한다.","③ 작업 과정 및 데이터 공유를 통해 작업자간 커뮤니케이션을 증대한다.","④ 2000년대 이후 소개되었으며, 객체지향 시스템에 한해 효과적으로 활용된다.","④ 2000년대 이후 소개되었으며, 객체지향 시스템에 한해 효과적으로 활용된다.","CASE 도구는 1970년대부터 개발되기 시작했으며, 1980년대부터 본격적으로 사용되기 시작했습니다. 또한, CASE 도구는 객체지향 시스템뿐만 아니라 절차적 시스템, 하이브리드 시스템 등 다양한 시스템의 개발에 활용될 수 있습니다."
"previous","220305",1,"소프트웨어설계",20,"인터페이스 요구 사항 검토 방법에 대한 설명이 옳은 것은?","","① 리팩토링 : 작성자 이외의 전문 검토 그룹이 요구사항 명세서를 상세히 조사하여 결함, 표준 위배, 문제점 등을 파악","② 동료검토 : 요구 사항 명세서 작성자가 요구 사항 명세서를 설명하고 이해관계자들이 설명을 들으면서 결함을 발견","③ 인스펙션 : 자동화된 요구 사항 관리 도구를 이용하여 요구 사항 추적성과 일관성을 검토","④ CASE 도구 : 검토 자료를 회의 전에 배포해서 사전 검토한 후 짧은 시간 동안 검토 회의를 진행하면서 결함을 발견","② 동료검토 : 요구 사항 명세서 작성자가 요구 사항 명세서를 설명하고 이해관계자들이 설명을 들으면서 결함을 발견","인터페이스 요구 사항 검토 방법 중 동료검토는 요구 사항 명세서 작성자가 요구 사항 명세서를 설명하고 이해관계자들이 설명을 들으면서 결함을 발견하는 방법입니다. 즉, 작성자와 다른 동료들이 함께 모여 요구 사항 명세서를 검토하고, 작성자가 설명하면서 이해관계자들이 의견을 내고 결함을 발견하는 방법입니다."
"previous","220305",2,"소프트웨어개발",21,"인터페이스 보안을 위해 네트워크 영역에 적용될 수 있는 솔루션과 거리가 먼 것은?","","① IPSec","② SSL","③ SMTP","④ S-HTTP","③ SMTP","SMTP는 Simple Mail Transfer Protocol의 약자로, 이메일을 전송하기 위한 프로토콜입니다. SMTP는 데이터를 암호화하지 않고 전송하므로, 인터페이스 보안을 위한 솔루션으로 적합하지 않습니다."
"previous","220305",2,"소프트웨어개발",22,"소프트웨어 공학의 기본 원칙이라고 볼 수 없는 것은?","","① 품질 높은 소프트웨어 상품 개발","② 지속적인 검증 시행","③ 결과에 대한 명확한 기록 유지","④ 최대한 많은 인력 투입","④ 최대한 많은 인력 투입","최대한 많은 인력 투입은 소프트웨어 개발의 효율성을 높이는 데 도움이 될 수 있지만, 인력의 투입만으로 소프트웨어 개발의 모든 문제를 해결할 수 있는 것은 아닙니다."
"previous","220305",2,"소프트웨어개발",23,"패키지 소프트웨어의 일반적인 제품 품질 요구사항 및 테스트를 위한 국제 표준은?","","① ISO/IEC 2196","② IEEE 19554","③ ISO/IEC 12119","④ ISO/IEC 14959","③ ISO/IEC 12119","ISO/IEC 12119는 패키지 소프트웨어의 일반적인 제품 품질 요구사항 및 테스트를 위한 국제 표준으로, 이 표준은 패키지 소프트웨어의 품질 요구사항, 테스트 방법, 테스트 절차 등을 규정하고 있습니다."
"previous","220305",2,"소프트웨어개발",24,"다음 중 클린 코드 작성원칙으로 거리가 먼 것은?","","① 누구든지 쉽게 이해하는 코드 작성","② 중복이 최대화된 코드 작성","③ 다른 모듈에 미치는 영향 최소화","④ 단순, 명료한 코드 작성","② 중복이 최대화된 코드 작성","중복이 최대화된 코드는 가독성, 단순성, 응집도, 결합도, 테스트 가능성 등 모든 측면에서 클린 코드 작성원칙에 어긋납니다."
"previous","220305",2,"소프트웨어개발",25,"블랙 박스 테스트의 유형으로 틀린 것은?","","① 경계값 분석","② 오류 예측","③ 동등 분할 기법","④ 조건, 루프 검사","④ 조건, 루프 검사","조건, 루프 검사는 화이트박스 테스트의 유형입니다."
"previous","220305",2,"소프트웨어개발",26,"제어흐름 그래프가 다음과 같을 때 McCabe의 cyclomatic 수는 얼마인가?","https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F200822%2FDEVOLT_EXAM_MOCK_200822_26.gif?alt=media","① 3","② 4","③ 5","④ 6","② 4","McCabe의 순환 복잡도 공식은 V(G) = E - N + 2P를 따릅니다."
"previous","220305",2,"소프트웨어개발",27,"다음 자료에 대하여 선택(Selection) 정렬을 이용하여 오름차순으로 정렬하고자 한다. 3회전 후의 결과로 옳은 것은?","https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F200822%2FDEVOLT_EXAM_MOCK_200822_27.gif?alt=media","① 14, 17, 37, 40, 35","② 14, 37, 17, 40, 35","③ 17, 14, 37, 35, 40","④ 14, 17, 35, 40, 37","④ 14, 17, 35, 40, 37","선택 정렬은 가장 작은 값을 찾아서 맨 앞으로 보내는 과정을 반복하여 정렬하는 알고리즘입니다."
"previous","220305",2,"소프트웨어개발",28,"형상 관리 도구의 주요 기능으로 거리가 먼 것은?","","① 정규화(Normalization)","② 체크인(Check-in)","③ 체크아웃(Check-out)","④ 커밋(commit)","① 정규화(Normalization)","정규화는 데이터베이스의 설계 기법으로, 데이터의 중복을 제거하고, 데이터의 무결성을 유지하기 위해 수행합니다."
"previous","220305",2,"소프트웨어개발",29,"다음 트리를 Preorder 운행법으로 운행할 경우 가장 먼저 탐색되는 것은?","https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F200822%2FDEVOLT_EXAM_MOCK_200822_29.gif?alt=media","① A","② B","③ D","④ G","① A","이진 트리 운행법에는 Preorder, Inorder, Postorder가 있으며 Preorder 운행법은 루트 노드를 가장 먼저, 그리고 Left, Right 서브트리 순으로 탐색하는 방법입니다."
"previous","220305",2,"소프트웨어개발",30,"소프트웨어 품질 목표 중 주어진 시간동안 주어진 기능을 오류없이 수행하는 정도를 나타내는 것은?","","① 직관성","② 사용 용이성","③ 신뢰성","④ 이식성","③ 신뢰성","신뢰성은 비기능성 품질 목표 중 하나로, 소프트웨어의 실패율을 측정하여 나타냅니다."
"previous","220305",2,"소프트웨어개발",31,"알고리즘 설계 기법으로 거리가 먼 것은?","","① Divide and Conquer","② Greedy","③ Static Block","④ Backtracking","③ Static Block","Static Block은 변수를 선언하는 방법 중 하나로, 변수를 선언할 때 변수의 값을 초기화하는 방법을 말합니다."
"previous","220305",2,"소프트웨어개발",32,"제품 소프트웨어의 형상 관리 역할로 틀린 것은?","","① 형상 관리를 통해 이전 리버전이나 버전에 대한 정보에 접근 가능하여 배포본 관리에 유용","② 불필요한 사용자의 소스 수정 제한","③ 프로젝트 개발비용을 효율적으로 관리","④ 동일한 프로젝트에 대해 여러 개발자 동시 개발 가능","③ 프로젝트 개발비용을 효율적으로 관리","프로젝트 개발비용을 효율적으로 관리하는 것은 형상 관리의 역할이 아니라, 프로젝트 관리의 역할입니다."
"previous","220305",2,"소프트웨어개발",33,"제품 소프트웨어 패키징 도구 활용 시 고려사항이 아닌 것은?","","① 제품 소프트웨어의 종류에 적합한 암호화 알고리즘을 고려한다.","② 추가로 다양한 이기종 연동을 고려한다.","③ 사용자 편의성을 위한 복잡성 및 비효율성 문제를 고려한다.","④ 내부 콘텐츠에 대한 보안은 고려하지 않는다.","④ 내부 콘텐츠에 대한 보안은 고려하지 않는다.","제품 소프트웨어 패키징 시에는 사용자에게 배포 되는 소프트웨어임을 감안하여 반드시 내부 콘텐츠에 대한 암호화 및 보안을 고려해야 합니다."
"previous","220305",2,"소프트웨어개발",34,"디지털 저작권 관리(DRM) 기술과 거리가 먼 것은?","","① 콘텐츠 암호화 및 키 관리","② 콘텐츠 식별체계 표현","③ 콘텐츠 오류 감지 및 복구","④ 라이센스 발급 및 관리","③ 콘텐츠 오류 감지 및 복구","콘텐츠 오류 감지 및 복구는 콘텐츠의 손상이나 오류를 감지하고 복구하는 기술입니다."
"previous","220305",2,"소프트웨어개발",35,"물리데이터 저장소의 파티션 설계에서 파티션 유형으로 옳지 않은 것은?","","① 범위분할(Range Partitioning)","② 해시분할(Hash Partitioning)","③ 조합분할(Composite Partitioning)","④ 유닛분할(Unit Partitioning)","④ 유닛분할(Unit Partitioning)","유닛분할은 파티션을 하나만 생성하는 방법으로, 파티션 유형으로 볼 수 없습니다."
"previous","220305",2,"소프트웨어개발",36,"다음이 설명하는 애플리케이션 통합 테스트 유형은?","https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F200822%2FDEVOLT_EXAM_MOCK_200822_36.gif?alt=media","① 하향식 통합 테스트","② 상향식 통합 테스트","③ 회귀 테스트","④ 빅뱅 테스트","① 하향식 통합 테스트","하향식 통합 테스트는 상위 모듈에서 하위 모듈로 통합해가며 진행되는 테스트 방법으로, 각 모듈이 개별적으로 테스트된 후 하위 모듈과 통합되어 전체 시스템이 완성됩니다."
"previous","220305",2,"소프트웨어개발",37,"인터페이스 구현시 사용하는 기술 중 다음 내용이 설명하는 것은?","https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F200822%2FDEVOLT_EXAM_MOCK_200822_37.gif?alt=media","① Procedure","② Trigger","③ Greedy","④ AJAX","④ AJAX","전체 보기 중 Procedure는 절차적 SQL을 활용하여 특정 기능을 수행하는 일종의 트랜잭션 언어, Trigger는 데이터의 삽입, 갱신, 삭제 등의 이벤트가 발생할 때마다 관련 작업이 자동으로 수행되는 절차형 SQL, Greedy는 탐욕 알고리즘을 의미합니다."
"previous","220305",2,"소프트웨어개발",38,"소프트웨어 재공학이 소프트웨어의 재개발에 비해 갖는 장점으로 거리가 먼 것은?","","① 위험부담 감소","② 비용 절감","③ 시스템 명세의 오류억제","④ 개발시간의 증가","④ 개발시간의 증가","소프트웨어 재개발에 비해 재공학은 기존 소프트웨어를 재사용 및 수정하는 작업으로 오히려 개발시간이 감소할 수 있습니다."
"previous","220305",2,"소프트웨어개발",39,"알파, 베타 테스트와 가장 밀접한 연관이 있는 테스트 단계는?","","① 단위 테스트","② 인수 테스트","③ 통합 테스트","④ 시스템 테스트","② 인수 테스트","인수 테스트(Acceptance Test)의 종류로는 사용자 인수 테스트, 운영상의 인수 테스트, 계약 인수 테스트, 규정 인수 테스트, 알파 테스트, 베타 테스트 등이 있습니다."
"previous","220305",2,"소프트웨어개발",40,"다음 트리의 차수(degree)는?","https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F200822%2FDEVOLT_EXAM_MOCK_200822_40.gif?alt=media","① 2","② 3","③ 4","④ 5","② 3","트리의 차수란 각 노드가 가지는 자식 노드의 수를 말합니다."
"previous","220305",3,"데이터베이스구축",41,"릴레이션 R의 모든 결정자(determinant)가 후보키이면 그 릴레이션 R은 어떤 정규형에 속하는가?","","① 제 1 정규형","② 제 2 정규형","③ 보이스/코드 정규형","④ 제 4 정규형","③ 보이스/코드 정규형","릴레이션 R의 모든 결정자가 후보키이면, 릴레이션 R은 제 2 정규형과 제 3 정규형을 모두 만족하게 되어 릴레이션 R은 보이스/코드 정규형에 속합니다."
"previous","220305",3,"데이터베이스구축",42,"다음 관계형 데이터 모델에 대한 설명으로 옳은 것은?","https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F200822%2FDEVOLT_EXAM_MOCK_200822_42.gif?alt=media","① relation 3개, attribute 3개, tuple 5개","② relation 3개, attribute 5개, tuple 3개","③ relation 1개, attribute 5개, tuple 3개","④ relation 1개, attribute 3개, tuple 5개","④ relation 1개, attribute 3개, tuple 5개","Relation은 '고객'으로 1개, Attribute는 '고객번호', '고객이름', '고객주소'의 3개, 각각의 고객 정보를 나타내는 총 5개의 Tuple을 가집니다."
"previous","220305",3,"데이터베이스구축",43,"Commit과 Rollback 명령어에 의해 보장 받는 트랜잭션의 특성은?","","① 병행성","② 보안성","③ 원자성","④ 로그","③ 원자성","원자성은 트랜잭션이 한 번에 모두 성공하거나 모두 실패해야 하는 특성입니다. 즉, 트랜잭션 내의 모든 연산이 모두 성공적으로 완료되었거나, 모든 연산이 실패하여 원래 상태로 되돌아 가야 합니다."
"previous","220305",3,"데이터베이스구축",44,"관계 데이터베이스인 테이블 R1에 대한 아래 SQL 문의 실행결과로 옳은 것은?","https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F200822%2FDEVOLT_EXAM_MOCK_200822_44.gif?alt=media","① https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F200822%2FDEVOLT_EXAM_MOCK_200822_44_01.gif?alt=media","② https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F200822%2FDEVOLT_EXAM_MOCK_200822_44_02.gif?alt=media","③ https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F200822%2FDEVOLT_EXAM_MOCK_200822_44_03.gif?alt=media","④ https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F200822%2FDEVOLT_EXAM_MOCK_200822_44_04.gif?alt=media","② https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F200822%2FDEVOLT_EXAM_MOCK_200822_44_02.gif?alt=media","DISTINCT는 중복 튜플 발견 시 그 중 첫번째의 하나만 검색하는 SQL 명령어입니다."
"previous","220305",3,"데이터베이스구축",45,"DCL(Data Control Language) 명령어가 아닌 것은?","","① COMMIT","② ROLLBACK","③ GRANT","④ SELECT","④ SELECT","SELECT는 데이터를 조회하기 위한 DML(Data Manipulation Language) 명령어입니다."
"previous","220305",3,"데이터베이스구축",46,"병행제어 기법 중 로킹에 대한 설명으로 옳지 않은 것은?","","① 로킹의 대상이 되는 객체의 크기를 로킹 단위라고 한다.","② 데이터베이스, 파일, 레코드 등은 로킹 단위가 될 수 있다.","③ 로킹의 단위가 작아지면 로킹 오버헤드가 증가한다.","④ 로킹의 단위가 커지면 데이터베이스 공유도가 증가한다.","④ 로킹의 단위가 커지면 데이터베이스 공유도가 증가한다.","로킹의 단위가 커지면 여러 트랜잭션이 동시에 접근할 수 있는 데이터베이스 영역이 줄어들기 때문에 데이터베이스 공유도가 감소합니다."
"previous","220305",3,"데이터베이스구축",47,"관계 데이터모델의 무결성 제약 중 기본키 값의 속성 값이 널(Null)값이 아닌 원자 값을 갖는 성질은?","","① 개체 무결성","② 참조 무결성","③ 도메인 무결성","④ 튜플의 유일성","① 개체 무결성","개체 무결성은 기본키 값이 널(Null)값이 아닌 원자 값을 갖는 성질을 의미합니다."
"previous","220305",3,"데이터베이스구축",48,"뷰(View)의 장점이 아닌 것은?","","① 뷰 자체로 인덱스를 가짐","② 데이터 보안 용이","③ 논리적 독립성 제공","④ 사용자 데이터 관리 용이","① 뷰 자체로 인덱스를 가짐","뷰는 물리적 데이터베이스 테이블의 일부 데이터를 조회하는 가상적인 개념이기 때문에 뷰 자체는 인덱스를 가질 수 없습니다."
"previous","220305",3,"데이터베이스구축",49,"분산 데이터베이스의 투명성(Transparency)에 해당 하지 않는 것은?","","① Location Transparency","② Replication Transparency","③ Failure Transparency","④ Media Access Transparency","④ Media Access Transparency","분산 데이터베이스의 투명성은 사용자나 응용 프로그램이 분산 데이터베이스의 물리적 구조나 분산 환경을 인식하지 못하도록 하는 것입니다. Media Access Transparency는 데이터가 저장된 미디어(하드디스트, SSD 등)에 대한 접근 방법의 투명성을 의미하는데, 이는 분산 데이터베이스의 구성과는 직접적인 연관성이 없습니다."
"previous","220305",3,"데이터베이스구축",50,"정규화의 목적으로 옳지 않은 것은?","","① 어떠한 릴레이션이라도 데이터베이스 내에서 표현 가능하게 만든다.","② 데이터 삽입시 릴레이션을 재구성할 필요성을 줄인다.","③ 중복을 배제하여 삽입, 삭제, 갱신 이상의 발생을 야기한다.","④ 효과적인 검색 알고리즘을 생성할 수 있다.","③ 중복을 배제하여 삽입, 삭제, 갱신 이상의 발생을 야기한다.","정규화는 중복을 제거하여 데이터베이스의 무결성을 높이고, 데이터베이스의 효율성을 향상시키기 위한 것으로, 중복을 배제하여 삽입, 삭제, 갱신 이상의 발생을 야기하는 것이 아니라, 오히려 이를 방지합니다."
"previous","220305",3,"데이터베이스구축",51,"다음에 해당하는 함수 종속의 추론 규칙은?","https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F200822%2FDEVOLT_EXAM_MOCK_200822_51.gif?alt=media","① 분해 규칙","② 이행 규칙","③ 반사 규칙","④ 결합 규칙","② 이행 규칙","B를 중간 단계로 사용하여 A와 C를 연결하는 것이 가능하기 때문에 이행 규칙에 해당합니다."
"previous","220305",3,"데이터베이스구축",52,"다음 R과 S 두 릴레이션에 대한 Division 연산의 수행 결과는?","https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F200822%2FDEVOLT_EXAM_MOCK_200822_52.gif?alt=media","① https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F200822%2FDEVOLT_EXAM_MOCK_200822_52_01.gif?alt=media","② https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F200822%2FDEVOLT_EXAM_MOCK_200822_52_02.gif?alt=media","③ https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F200822%2FDEVOLT_EXAM_MOCK_200822_52_03.gif?alt=media","④ https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F200822%2FDEVOLT_EXAM_MOCK_200822_52_04.gif?alt=media","④ https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F200822%2FDEVOLT_EXAM_MOCK_200822_52_04.gif?alt=media","Division 연산은 릴레이션 R에서 모든 튜플이 릴레이션 S의 모든 튜플과 매칭되는 경우에만 결과로 해당 튜플을 포함합니다."
"previous","220305",3,"데이터베이스구축",53,"player 테이블에는 player_name, team_id, height 컬럼이 존재한다. 아래 SQL문에서 문법적 오류가 있는 부분은?","https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F200822%2FDEVOLT_EXAM_MOCK_200822_53.gif?alt=media","① (1)","② (2)","③ (3)","④ (4)","④ (4)","BETWEEN은 BETWEEN 숫자 AND 숫자의 문법으로 사용합니다."
"previous","220305",3,"데이터베이스구축",54,"데이터베이스 로그(log)를 필요로 하는 회복 기법은?","","① 즉각 갱신 기법","② 대수적 코딩 방법","③ 타임 스탬프 기법","④ 폴딩 기법","① 즉각 갱신 기법","즉각 갱신 기법은 트랜잭션이 부분 완료될 때까지 데이터베이스에 변경 내용을 즉시 반영하는 기법입니다. 따라서, 트랜잭션 실패 시 데이터베이스를 복구하기 위해 로그를 필요로 합니다."
"previous","220305",3,"데이터베이스구축",55,"DML(Data Manipulation Language) 명령어가 아닌 것은?","","① INSERT","② UPDATE","③ ALTER","④ DELETE","③ ALTER","ALTER는 데이터베이스 구조를 변경하는 명령어로, DDL 명렬어에 해당합니다."
"previous","220305",3,"데이터베이스구축",56,"다음과 같이 위쪽 릴레이션을 아래쪽 릴레이션으로 정규화를 하였을 때 어떤 정규화 작업을 한 것인가?","https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F200822%2FDEVOLT_EXAM_MOCK_200822_56.gif?alt=media","① 제1정규형","② 제2정규형","③ 제3정규형","④ 제4정규형","① 제1정규형","제1정규형은 각 속성이 원자값을 가지도록 분해하는 것을 의미합니다."
"previous","220305",3,"데이터베이스구축",57,"관계대수의 순수관계 연산자가 아닌 것은?","","① Select","② Cartesian Product","③ Division","④ Project","② Cartesian Product","Cartesian Product는 두 관계의 모든 튜플을 짝지어 하나의 튜플로 만드는 연산자로, 관계대수의 결합 연산자에 속합니다."
"previous","220305",3,"데이터베이스구축",58,"다음 중 SQL의 집계 함수(aggregation function)가 아닌 것은?","","① AVG","② COUNT","③ SUM","④ CREATE","④ CREATE","CREATE는 테이블이나 인덱스를 생성하는 데 사용하는 함수로, 집계 함수가 아닙니다."
"previous","220305",3,"데이터베이스구축",59,"릴레이션 조작 시 데이터들이 불필요하게 중복되어 예기치 않게 발생하는 곤란한 현상을 의미하는 것은?","","① normalization","② rollback","③ cardinality","④ anomaly","④ anomaly","릴레이션 조작 시 데이터들이 불필요하게 중복되어 예기치 않게 발생하는 곤란한 현상을 이상(Anomaly)이라고 합니다."
"previous","220305",3,"데이터베이스구축",60,"릴레이션에 대한 설명으로 거리가 먼 것은?","","① 튜플들의 삽입, 삭제 등의 작업으로 인해 릴레이션은 시간에 따라 변한다.","② 한 릴레이션에 포함된 튜플들은 모두 상이하다.","③ 애트리뷰트는 논리적으로 쪼갤 수 없는 원자값으로 저장한다.","④ 한 릴레이션에 포함된 튜플 사이에는 순서가 있다.","④ 한 릴레이션에 포함된 튜플 사이에는 순서가 있다.","릴레이션은 튜플들의 집합으로, 튜플들은 순서가 없습니다."
"previous","220305",4,"프로그래밍언어활용",61,"다음 자바 프로그램 조건문에 대해 삼항 조건 연산자를 사용하여 옳게 나타낸 것은?","https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F200822%2FDEVOLT_EXAM_MOCK_200822_61.gif?alt=media","① int i = 7, j = 9; int k; k = (i＞j)?(i – j):(i + j);","② int i = 7, j = 9; int k; k = (i＜j)?(i – j):(i + j);","③ int i = 7, j = 9; int k; k = (i＞j)?(i + j):(i - j);","④ int i = 7, j = 9; int k; k = (i＜j)?(i + j):(i - j);","① int i = 7, j = 9; int k; k = (i＞j)?(i – j):(i + j);","삼항 조건 연산자는 조건식이 참(true)이면 첫 번째 표현식을, 거짓(false)이면 두 번째 표현식을 반환합니다."
"previous","220305",4,"프로그래밍언어활용",62,"다음 내용이 설명하는 소프트웨어 취약점은?","https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F200822%2FDEVOLT_EXAM_MOCK_200822_62.gif?alt=media","① FTP 바운스 공격","② SQL 삽입","③ 버퍼 오버플로","④ 디렉토리 접근 공격","③ 버퍼 오버플로","이미 할당된 버퍼의 크기를 초과하여 데이터를 입력하면, 해당 데이터가 메모리 영역을 침범하여 다른 데이터나 코드를 덮어쓰는 취약점을 버퍼 오버플로라고 합니다."
"previous","220305",4,"프로그래밍언어활용",63,"다음 중 bash 쉘 스크립트에서 사용할 수 있는 제어문이 아닌 것은?","","① if","② for","③ repeat_do","④ while","③ repeat_do","repeat_do는 Perl 스크립트에서 사용할 수 있는 제어문입니다."
"previous","220305",4,"프로그래밍언어활용",64,"IPv6에 대한 설명으로 틀린 것은?","","① 32비트의 주소체계를 사용한다.","② 멀티미디어의 실시간 처리가 가능하다.","③ IPv4보다 보안성이 강화되었다.","④ 자동으로 네트워크 환경구성이 가능하다.","① 32비트의 주소체계를 사용한다.","IPv6는 128비트의 주소체계를 사용합니다."
"previous","220305",4,"프로그래밍언어활용",65,"효과적인 모듈 설계를 위한 유의사항으로 거리가 먼 것은?","","① 모듈간의 결합도를 약하게 하면 모듈 독립성이 향상된다.","② 복잡도와 중복성을 줄이고 일관성을 유지시킨다.","③ 모듈의 기능은 예측이 가능해야 하며 지나치게 제한적이여야 한다.","④ 유지보수가 용이해야 한다.","③ 모듈의 기능은 예측이 가능해야 하며 지나치게 제한적이여야 한다.","모듈의 기능이 지나치게 제한적이지 않으면 다른 모듈과의 결합도가 높아져서 모듈 간의 의존성이 높아지고, 이로 인해 유지보수가 어려워질 수 있습니다."
"previous","220305",4,"프로그래밍언어활용",66,"HRN 방식으로 스케줄링 할 경우, 입력된 작업이 다음과 같을 때 처리되는 작업 순서로 옳은 것은?","https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F200822%2FDEVOLT_EXAM_MOCK_200822_66.gif?alt=media","① A→B→C→D","② A→C→B→D","③ D→B→C→A","④ D→A→B→C","③ D→B→C→A","우선순위 계산식은 (대기 시간 + 서비스시간) / 서비스 시간 입니다."
"previous","220305",4,"프로그래밍언어활용",67,"운영체제에 대한 설명으로 거리가 먼 것은?","","① 다중 사용자와 다중 응용프로그램 환경하에서 자원의 현재 상태를 파악하고 자원 분배를 위한 스케줄링을 담당한다.","② CPU, 메모리 공간, 기억 장치, 입출력 장치 등의 자원을 관리한다.","③ 운영체제의 종류로는 매크로 프로세서, 어셈블러, 컴파일러 등이 있다.","④ 입출력 장치와 사용자 프로그램을 제어한다.","③ 운영체제의 종류로는 매크로 프로세서, 어셈블러, 컴파일러 등이 있다.","매크로 프로세서, 어셈블러, 컴파일러는 컴파일러 도구의 한 종류로, 운영체제와는 다른 역할을 합니다."
"previous","220305",4,"프로그래밍언어활용",68,"배치 프로그램의 필수 요소에 대한 설명으로 틀린 것은?","","① 자동화는 심각한 오류 상황 외에는 사용자의 개입 없이 동작해야 한다.","② 안정성은 어떤 문제가 생겼는지, 언제 발생했는지 등을 추적할 수 있어야 한다.","③ 대용량 데이터는 대용량의 데이터를 처리할 수 있어야 한다.","④ 무결성은 주어진 시간 내에 처리를 완료할 수 있어야 하고, 동시에 동작하고 있는 다른 애플리케이션을 방해하지 말아야 한다.","④ 무결성은 주어진 시간 내에 처리를 완료할 수 있어야 하고, 동시에 동작하고 있는 다른 애플리케이션을 방해하지 말아야 한다.","무결성은 데이터의 정확성을 의미하며, 배치 프로그램의 무결성은 데이터의 정확성을 유지할 수 있어야 한다는 의미로 해석해야 합니다."
"previous","220305",4,"프로그래밍언어활용",69,"TCP 프로토콜에 대한 설명으로 거리가 먼 것은?","","① 신뢰성이 있는 연결 지향형 전달 서비스이다.","② 기본 헤더 크기는 100byte이고 160byte까지 확장 가능하다.","③ 스크림 전송 기능을 제공한다.","④ 순서제어, 오류제어, 흐름제어 기능을 제공한다.","② 기본 헤더 크기는 100byte이고 160byte까지 확장 가능하다.","TCP 프로토콜의 기본 헤더 크기는 20byte입니다."
"previous","220305",4,"프로그래밍언어활용",70,"다음이 설명하는 응집도의 유형은?","https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F200822%2FDEVOLT_EXAM_MOCK_200822_70.gif?alt=media","① 기능적 응집도","② 우연적 응집도","③ 논리적 응집도","④ 절차적 응집도","④ 절차적 응집도","보기는 '모듈 안 구성요소들이 기능을 순차적으로 수행한다'는 절차적 응집도의 개념에 대한 설명입니다."
"previous","220305",4,"프로그래밍언어활용",71,"OSI-7Layer에서 링크의 설정과 유지 및 종료를 담당하며, 노드간의 오류제어와 흐름제어 기능을 수행하는 계층은?","","① 데이터링크 계층","② 물리 계층","③ 세션 계층","④ 응용 계층","① 데이터링크 계층","데이터링크 계층은 OSI-7Layer에서 링크의 설정과 유지 및 종료를 담당하며, 노드간의 오류제어와 흐름제어 기능을 수행하는 계층입니다. 이 계층은 물리 계층에서 전송된 비트열을 프레임으로 구성하고, 이를 논리적인 단위로 분할하여 각각의 프레임에 대한 주소와 제어 정보를 추가합니다. 또한, 이 계층에서는 오류 검출과 수정을 위한 기능도 수행하기 때문에 안정성과 신뢰성을 보장하는 중요한 역할을 합니다."
"previous","220305",4,"프로그래밍언어활용",72,"다음 중 가장 결합도가 강한 것은?","","① data coupling","② stamp coupling","③ common coupling","④ control coupling","③ common coupling","common coupling**모듈 간의 의존성이 공통 데이터 구조에 의존하는 경우로, 가장 높은 결합도입니다."
"previous","220305",4,"프로그래밍언어활용",73,"메모리 관리 기법 중 Worst fit 방법을 사용할 경우 10K 크기의 프로그램 실행을 위해서는 어느 부분에 할당되는가?","https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F200822%2FDEVOLT_EXAM_MOCK_200822_73.gif?alt=media","① NO.2","② NO.3","③ NO.4","④ NO.5","④ NO.5","Worst Fit 은 사용되고 있지 않은 메모리 조각(fragment)들 중에서 실행시키려는 프로그램의 필요 메모리와 가장 크게 차이 나는 메모리 조각을 선택하는 방법입니다."
"previous","220305",4,"프로그래밍언어활용",74,"200.1.1.0/24 네트워크를 FLSM 방식을 이용하여 10개의 Subnet으로 나누고 ip subnet-zero를 적용했다. 이때 서브네팅된 네트워크 중 10번째 네트워크의 broadcast IP주소는?","","① 200.1.1.159","② 201.1.5.175","③ 202.1.11.254","④ 203.1.255.245","① 200.1.1.159","FLSM 방식은 마지막 비트를 서브넷 마스크로 사용하기 때문에, 10개의 서브넷을 만들기 위해서는 마지막 비트를 10개로 나눌 수 있는 4비트를 서브넷 마스크로 사용해야 합니다."
"previous","220305",4,"프로그래밍언어활용",75,"다음은 사용자로부터 입력받은 문자열에서 처음과 끝의 3글자를 추출한 후 합쳐서 출력하는 파이썬 코드에서 ㉠에 들어갈 내용은?","https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F200822%2FDEVOLT_EXAM_MOCK_200822_75.gif?alt=media","① string[1:3] + string[-3:]","② string[:3] + string[-3:-1]","③ string[0:3] + string[-3:]","④ string[0:] + string[:-1]","③ string[0:3] + string[-3:]","string[0:3]은 문자열의 처음부터 3번째 글자까지 추출하는 슬라이싱, string[-3:]은 문자열의 끝에서부터 3번째 글자부터 끝까지 추출하는 슬라이싱이고 두 슬라이싱 결과를 + 연산자로 합치면 처음과 끝의 3글자를 추출한 후 합쳐진 문자열이 만들어집니다."
"previous","220305",4,"프로그래밍언어활용",76,"파이썬의 변수 작성 규칙 설명으로 옳지 않은 것은?","","① 첫 자리에 숫자를 사용할 수 없다.","② 영문 대문자/소문자, 숫자, 밑줄(_)의 사용이 가능하다.","③ 변수 이름의 중간에 공백을 사용할 수 있다.","④ 이미 사용되고 있는 예약어는 사용할 수 없다.","③ 변수 이름의 중간에 공백을 사용할 수 있다.","파이썬의 변수 이름에는 영문 대문자/소문자, 숫자, 밑줄(_)의 사용이 가능합니다."
"previous","220305",4,"프로그래밍언어활용",77,"어떤 모듈이 다른 모듈의 내부 논리 조직을 제어하기 위한 목적으로 제어신호를 이용하여 통신하는 경우이며, 하위 모듈에서 상위 모듈로 제어신호가 이동하여 상위 모듈에게 처리 명령을 부여하는 권리 전도현상이 발생하게 되는 결합도는?","","① data coupling","② stamp coupling","③ control coupling","④ common coupling","③ control coupling","제어신호를 이용하여 다른 모듈의 내부 논리를 제어하는 결합도를 control coupling이라고 합니다."
"previous","220305",4,"프로그래밍언어활용",78,"다음 C 프로그램의 결과 값은?","https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F200822%2FDEVOLT_EXAM_MOCK_200822_78.gif?alt=media","① 15","② 19","③ 25","④ 27","③ 25","i와 sum은 각각 1 1, 3 4, 5 9, 7 16, 9 25이 됩니다."
"previous","220305",4,"프로그래밍언어활용",79,"UNIX에서 새로운 프로세스를 생성하는 명령어는?","","① ls","② cat","③ fork","④ chmod","③ fork","fork 시스템 호출은 UNIX에서 새로운 프로세스를 생성하는 기본적인 방법입니다."
"previous","220305",4,"프로그래밍언어활용",80,"C언어에서 정수 자료형으로 옳은 것은?","","① int","② float","③ char","④ double","① int","C언어에서 정수 자료형은 int, short, long, long long이 있습니다."
"previous","220305",5,"정보시스템구축관리",81,"물리적인 사물과 컴퓨터에 동일하게 표현되는 가상의 모델로 실제 물리적인 자산 대신 소프트웨어로 가상화함으로써 실제 자산의 특성에 대한 정확한 정보를 얻을 수 있고, 자산 최적화, 돌발사고 최소화, 생산성 증가 등 설계부터 제조, 서비스에 이르는 모든 과정의 효율성을 향상시킬 수 있는 모델은?","","① 최적화","② 실행 시간","③ 디지털 트윈","④ N-Screen","③ 디지털 트윈","디지털 트윈은 물리적 자산의 가상 모델을 말합니다. 디지털 트윈을 통해 실제 자산의 특성에 대한 정확한 정보를 얻을 수 있으며, 자산 최적화, 돌발사고 최소화, 생산성 증가 등 설계부터 제조, 서비스에 이르는 모든 과정의 효율성을 향상시킬 수 있습니다."
"previous","220305",5,"정보시스템구축관리",82,"정보보안의 3대 요소에 해당하지 않는 것은?","","① 기밀성","② 휘발성","③ 무결성","④ 가용성","② 휘발성","휘발성은 정보가 저장된 매체에서 일정 시간 내에 사라지는 성질을 의미하며, 정보보안의 3대 요소 중 하나가 아닙니다."
"previous","220305",5,"정보시스템구축관리",83,"다음 빈칸에 알맞은 기술은?","https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F200822%2FDEVOLT_EXAM_MOCK_200822_83.gif?alt=media","① Quantum Key Distribution","② Digital Rights Management","③ Grayware","④ Mashup","④ Mashup","Mashup은 여러 개의 서로 다른 소스에서 가져온 데이터나 기능을 조합하여 새로운 애플리케이션을 만드는 기술입니다."
"previous","220305",5,"정보시스템구축관리",84,"기능점수(Functional Point)모형에서 비용산정에 이용되는 요소가 아닌 것은?","","① 클래스 인터페이스","② 명령어(사용자 질의수)","③ 데이터파일","④ 출력보고서","① 클래스 인터페이스","클래스 인터페이스는 소프트웨어의 구조를 나타내는 요소로, 기능점수 산정에 직접적으로 사용되지 않습니다."
"previous","220305",5,"정보시스템구축관리",85,"블록 암호화 방식이 아닌 것은?","","① DES","② RC4","③ AES","④ SEED","② RC4","RC4는 스트림 암호화 방식입니다."
"previous","220305",5,"정보시스템구축관리",86,"Putnam 모형을 기초로 해서 만든 자동화 추정 도구는?","","① SQLR/30","② SLIM","③ MESH","④ NFV","② SLIM","SLIM은 Putnam 모형을 기반으로 한 자동화 추정 도구로, 소프트웨어 개발 프로젝트의 크기, 비용, 일정 등을 추정할 수 있습니다."
"previous","220305",5,"정보시스템구축관리",87,"큰 숫자를 소인수 분해하기 어렵다는 기반 하에 1978년 MIT에 의해 제안된 공개키 암호화 알고리즘은?","","① DES","② ARIA","③ SEED","④ RSA","④ RSA","RSA는 큰 숫자를 소인수 분해하기 어렵다는 사실을 기반으로 하는 알고리즘입니다."
"previous","220305",5,"정보시스템구축관리",88,"COCOMO 모델의 프로젝트 유형으로 거리가 먼 것은?","","① Organic","② Semi-detached","③ Embedded","④ Sequentail","④ Sequentail","Sequentail 프로젝트는 요구 사항이 명확하고, 개발 환경이 안정적이라는 점에서 Organic, Semi-detached, Embedded 프로젝트와 차이가 있습니다."
"previous","220305",5,"정보시스템구축관리",89,"빅데이터 분석 기술 중 대량의 데이터를 분석하여 데이터 속에 내재되어 있는 변수 사이의 상호관례를 규명하여 일정한 패턴을 찾아내는 기법은?","","① Data Mining","② Wm-Bus","③ Digital Twin","④ Zigbee","① Data Mining","Data Mining은 대량의 데이터에서 유용한 정보를 추출하는 기법으로, 변수 사이의 상관관계를 규명하거나 일정한 패턴을 찾아내는 등의 작업을 수행합니다."
"previous","220305",5,"정보시스템구축관리",90,"기존 무선 랜의 한계 극복을 위해 등장하였으며, 대규모 디바이스의 네트워크 생성에 최적화되어 차세대 이동통신, 홈네트워킹, 공공 안전 등의 특수목적을 위한 새로운 방식의 네트워크 기술을 의미하는 것은?","","① Software Defined Perimeter","② Virtual Private Network","③ Local Area Network","④ Mesh Network","④ Mesh Network","메쉬 네트워크는 각 노드가 서로 연결되어 데이터를 릴레이하는 방식으로, 대규모 디바이스의 네트워크 생성에 최적화되어 있습니다."
"previous","220305",5,"정보시스템구축관리",91,"DDoS 공격과 연관이 있는 공격 방법은?","","① Secure shell","② Tribe Flood Network","③ Nimda","④ Deadlock","② Tribe Flood Network","Tribe Flood Network는 DDoS 공격의 한 유형으로, UDP 포트 7번을 사용하여 대량의 패킷을 전송하는 공격입니다."
"previous","220305",5,"정보시스템구축관리",92,"CPM 네트워크가 다음과 같을 때 임계경로의 소요기일은?","https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F200822%2FDEVOLT_EXAM_MOCK_200822_92.gif?alt=media","① 10일","② 12일","③ 14일","④ 16일","③ 14일","작업의 시작 및 종료 구간이 동시에 이루어질 때 가장 오래 걸리는 경로를 임계 경로라고 합니다."
"previous","220305",5,"정보시스템구축관리",93,"RIP(Routing Information Protocol)에 대한 설명으로 틀린 것은?","","① 거리 벡터 라우팅 프로토콜이라고도 한다.","② 소규모 네트워크 환경에 적합하다.","③ 최대 홉 카운트를 115홉 이하로 한정하고 있다.","④ 최단경로탐색에는 Bellman-Ford 알고리즘을 사용한다.","③ 최대 홉 카운트를 115홉 이하로 한정하고 있다.","RIP는 라우팅 루프를 방지하기 위해 최대 홉 카운트를 15로 한정합니다."
"previous","220305",5,"정보시스템구축관리",94,"소프트웨어 생명주기 모형 중 고전적 생명주기 모형으로 선형 순차적 모델이라고도 하며, 타당성 검토, 계획, 요구사항 분석, 구현, 테스트, 유지보수의 단계를 통해 소프트웨어를 개발하는 모형은?","","① 폭포수 모형","② 애자일 모형","③ 컴포넌트 기반 방법론","④ 6GT 모형","① 폭포수 모형","폭포수 모형은 고전적 생명주기 모형으로 선형 순차적 모델이라고도 합니다. 각 단계가 순차적으로 진행되며, 이전 단계가 완료되지 않으면 다음 단계로 넘어갈 수 없습니다."
"previous","220305",5,"정보시스템구축관리",95,"소프트웨어 개발 모델 중 나선형 모델으 4가지 주요 활동이 순서대로 나열된 것은?","https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F200822%2FDEVOLT_EXAM_MOCK_200822_95.gif?alt=media","① Ⓐ-Ⓑ-Ⓓ-Ⓒ 순으로 반복","② Ⓐ-Ⓓ-Ⓒ-Ⓑ 순으로 반복","③ Ⓐ-Ⓑ-Ⓒ-Ⓓ 순으로 반복","④ Ⓐ-Ⓒ-Ⓑ-Ⓓ 순으로 반복","② Ⓐ-Ⓓ-Ⓒ-Ⓑ 순으로 반복","나선형 모델은 계획, 위험 분석, 개발 및 평가라는 4가지 주요 활동을 순차적으로 반복하면서 소프트웨어를 개발하는 모델입니다."
"previous","220305",5,"정보시스템구축관리",96,"전자 칩과 같은 소프트웨어 부품, 즉 블록(모듈)을 만들어서 끼워 맞추는 방법으로 소프트웨어를 완성시키는 재사용 방법은?","","① 합성 중심","② 생성 중심","③ 분리 중심","④ 구조 중심","① 합성 중심","합성 중심 재사용 방법은 이미 개발된 소프트웨어 부품(모듈)을 조합하여 새로운 소프트웨어를 개발하는 방법입니다."
"previous","220305",5,"정보시스템구축관리",97,"다음 JAVA코드에서 밑줄로 표시된 부분에는 어떤 보안 약점이 존재하는가? (단, key는 암호화 키를 저장하는 변수이다.)","https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F200822%2FDEVOLT_EXAM_MOCK_200822_97.gif?alt=media","① 무결성 검사 없는 코드 다운로드","② 중요 자원에 대한 잘못된 권한 설정","③ 하드코드된 암호화 키 사용","④ 적절한 인증없는 중요 기능 허용","③ 하드코드된 암호화 키 사용","하드코드된 암호화 키 사용은 암호화 키를 코드 내에 직접 입력하는 것으로, 코드가 유출되면 암호화된 데이터를 해독할 수 있는 보안 약점이 존재합니다."
"previous","220305",5,"정보시스템구축관리",98,"소프트웨어 개발 표준 중 소프트웨어 품질 및 생산성 향상을 위해 소프트웨어 프로세스를 평가 및 개선하는 국제 표준은?","","① SCRUM","② ISO/IEC 12509","③ SPICE","④ CASE","③ SPICE","SPICE는 소프트웨어 프로세스 개선 및 능력 평가 기준(Software Process Improvement and Capability dEtermination)의 약자로, 소프트웨어 품질 및 생산성 향상을 위해 소프트웨어 프로세스를 평가 및 개선하는 국제 표준입니다."
"previous","220305",5,"정보시스템구축관리",99,"실무적으로 검증된 개발보안 방법론 중 하나로써 SW보안의 모범 사례를 SDLC(Software Development Life Cycle)에 통합한 소프트웨어 개발 보안 생명주기 방법론은?","","① CLASP","② CWE","③ PIMS","④ Seven Touchpoints","④ Seven Touchpoints","CLASP, CWE, PIMS는 소프트웨어 보안 평가 방법론입니다. Seven Touchpoints는 소프트웨어 개발 보안 생명주기 방법론으로, SDLC 각 단계별로 보안 활동을 수행하는 방법을 제시합니다."
"previous","220305",5,"정보시스템구축관리",100,"다음 LAN의 네트워크 토폴로지는?","https://firebasestorage.googleapis.com/v0/b/kh-basic-frontend-react-f5a7b.firebasestorage.app/o/DEVOLT%2FEXAM%2FPREVIOUS%2F200822%2FDEVOLT_EXAM_MOCK_200822_100.gif?alt=media","① 버스형","② 성형","③ 링형","④ 그물형","① 버스형","보기의 네트워크 토폴로지는 모든 컴퓨터가 하나의 케이블에 연결되어 있으며, 데이터가 이 케이블을 통해 전송되는 버스형 토폴로지입니다."