test,date,snumber,sname,qnumber,qname1,qname2,example1,example2,example3,example4,answer,explain
"mock",000000,4,"프로그래밍언어활용",1,"자바에서 변수의 기본 자료형은 무엇인가?","","①String","②int","③ArrayList","④HashMap","②int","자바에서 기본 자료형으로는 int, char, double 등이 있습니다."
"mock",000000,4,"프로그래밍언어활용",2,"자바에서 문자열을 비교할 때 사용하는 메서드는 무엇인가?","","①compare()","②equals()","③==","④compareTo()","②equals()","equals() 메서드는 두 문자열이 동일한지 비교하는 데 사용됩니다."
"mock",000000,4,"프로그래밍언어활용",3,"자바에서 배열의 크기를 동적으로 변경할 수 있는 자료구조는 무엇인가?","","①Array","②LinkedList","③HashSet","④ArrayList","④ArrayList","ArrayList는 크기를 동적으로 변경할 수 있는 자료구조입니다."
"mock",000000,4,"프로그래밍언어활용",4,"자바에서 클래스의 생성자는 무엇을 의미하는가?","","①클래스의 이름을 지정한다.","②객체를 생성하는 메서드이다.","③클래스를 수정하는 메서드이다.","④객체를 삭제하는 메서드이다.","②객체를 생성하는 메서드이다.","생성자는 객체를 초기화하는 메서드로, 클래스의 이름과 동일해야 하며 반환 값이 없습니다."
"mock",000000,4,"프로그래밍언어활용",5,"파이썬에서 리스트의 요소를 추가하는 메서드는 무엇인가?","","①append()","②insert()","③add()","④push()","①append()","append()는 리스트의 마지막에 요소를 추가하는 메서드입니다."
"mock",000000,4,"프로그래밍언어활용",6,"파이썬에서 딕셔너리의 값을 가져오는 방법은 무엇인가?","","①dict.get()","②dict()","③dict.retrieve()","④dict.fetch()","①dict.get()","get() 메서드는 딕셔너리에서 지정된 키의 값을 가져오는 데 사용됩니다."
"mock",000000,4,"프로그래밍언어활용",7,"C에서 문자열의 끝을 나타내는 특수 문자는 무엇인가?","","①\t","②\n","③\0","④\b","③\0","문자열의 끝은 '\0'로 표시되며, 이는 널 종료 문자를 나타냅니다."
"mock",000000,4,"프로그래밍언어활용",8,"C에서 포인터의 주소를 출력하는 함수는 무엇인가?","","①print()","②printf()","③scanf()","④write()","②printf()","printf() 함수는 포인터의 주소를 출력하는 데 사용됩니다."
"mock",000000,4,"프로그래밍언어활용",9,"자바에서 인터페이스의 목적은 무엇인가?","","①클래스 간의 상속을 지원한다.","②객체를 생성한다.","③구현을 강제하는 계약을 정의한다.","④메서드를 선언한다.","③구현을 강제하는 계약을 정의한다.","인터페이스는 클래스가 구현해야 하는 메서드의 계약을 정의합니다."
"mock",000000,4,"프로그래밍언어활용",10,"C++에서 상속을 구현할 때 사용하는 키워드는 무엇인가?","","①implements","②extend","③inherit","④public","④public","상속을 구현할 때 'public'을 사용하여 부모 클래스의 멤버를 자식 클래스에서 사용할 수 있습니다."
"mock",000000,4,"프로그래밍언어활용",11,"자바에서 예외 처리를 위해 사용하는 키워드는 무엇인가?","","①catch","②error","③except","④throw","①catch","자바에서 예외를 처리하기 위해서는 try-catch 블록을 사용합니다."
"mock",000000,4,"프로그래밍언어활용",12,"파이썬에서 예외를 처리하는 구문은 무엇인가?","","①try-except","②try-catch","③if-else","④catch-finally","①try-except","파이썬에서는 try-except 구문을 사용하여 예외를 처리합니다."
"mock",000000,4,"프로그래밍언어활용",13,"C에서 메모리 동적 할당을 위한 함수는 무엇인가?","","①malloc()","②alloc()","③free()","④realloc()","①malloc()","'malloc()' 함수는 동적으로 메모리를 할당하는 함수입니다."
"mock",000000,4,"프로그래밍언어활용",14,"C++에서 생성자 오버로딩이 가능한 이유는 무엇인가?","","①생성자에 매개변수가 다를 수 있기 때문이다.","②C++은 매개변수를 처리하는 방식이 다르기 때문이다.","③생성자는 항상 한 번만 호출되기 때문이다.","④C++은 함수 이름을 변경할 수 있기 때문이다.","①생성자에 매개변수가 다를 수 있기 때문이다.","C++에서는 생성자의 매개변수를 다르게 하여 여러 개의 생성자를 정의할 수 있습니다."
"mock",000000,4,"프로그래밍언어활용",15,"자바에서 'this' 키워드는 무엇을 나타내는가?","","①현재 객체를 참조한다.","②클래스를 참조한다.","③메서드를 참조한다.","④변수 값을 참조한다.","①현재 객체를 참조한다.","'this'는 현재 객체를 참조하는 키워드로, 인스턴스 변수와 메서드를 구분할 때 사용됩니다."
"mock",000000,4,"프로그래밍언어활용",16,"파이썬에서 함수의 반환값을 지정하는 키워드는 무엇인가?","","①return","②yield","③output","④result","①return","'return'은 함수에서 값을 반환할 때 사용하는 키워드입니다."
"mock",000000,4,"프로그래밍언어활용",17,"C에서 함수의 매개변수를 전달할 때 기본적으로 사용하는 방식은 무엇인가?","","①값에 의한 전달","②참조에 의한 전달","③배열에 의한 전달","④포인터에 의한 전달","①값에 의한 전달","C에서는 기본적으로 값에 의한 전달 방식으로 매개변수가 전달됩니다."
"mock",000000,4,"프로그래밍언어활용",18,"C++에서 가상 함수의 목적은 무엇인가?","","①다형성을 구현하기 위해","②함수를 오버로딩하기 위해","③함수를 재정의하기 위해","④함수의 이름을 변경하기 위해","①다형성을 구현하기 위해","가상 함수는 다형성을 구현하기 위해 부모 클래스에서 선언되고 자식 클래스에서 재정의할 수 있습니다."
"mock",000000,4,"프로그래밍언어활용",19,"자바에서 'super' 키워드는 무엇을 나타내는가?","","①부모 클래스의 메서드나 변수에 접근한다.","②현재 객체를 참조한다.","③자식 클래스의 메서드를 호출한다.","④부모 클래스의 객체를 생성한다.","①부모 클래스의 메서드나 변수에 접근한다.","'super'는 부모 클래스의 메서드나 변수에 접근하는 데 사용됩니다."
"mock",000000,4,"프로그래밍언어활용",20,"파이썬에서 클래스의 객체를 생성하는 방법은 무엇인가?","","①class 객체()","②객체 = class()","③객체 = create()","④new 객체()","②객체 = class()","파이썬에서는 클래스 이름 뒤에 괄호를 사용하여 객체를 생성합니다."
"mock",000000,4,"프로그래밍언어활용",21,"C에서 배열의 크기를 동적으로 할당할 수 있는 함수는 무엇인가?","","①malloc()","②calloc()","③realloc()","④free()","③realloc()","'realloc()' 함수는 배열의 크기를 동적으로 변경할 수 있습니다."
"mock",000000,4,"프로그래밍언어활용",22,"C++에서 템플릿의 목적은 무엇인가?","","①코드 재사용을 위해","②메모리 관리를 위해","③예외 처리를 위해","④다형성을 구현하기 위해","①코드 재사용을 위해","템플릿은 다양한 데이터 타입에 대해 같은 코드를 재사용할 수 있게 해주는 기능입니다."
"mock",000000,4,"프로그래밍언어활용",23,"자바에서 'abstract' 키워드의 목적은 무엇인가?","","①메서드의 구현을 강제한다.","②메서드의 선언만을 정의한다.","③객체를 생성할 수 있게 한다.","④클래스를 상속할 수 있게 한다.","②메서드의 선언만을 정의한다.","'abstract'는 메서드가 구현되지 않고 선언만 된 상태를 의미합니다."
"mock",000000,4,"프로그래밍언어활용",24,"파이썬에서 함수의 매개변수에 기본값을 설정하는 방법은 무엇인가?","","①매개변수 = 값","②매개변수 := 값","③매개변수 = (값)","④매개변수: 값","①매개변수 = 값","파이썬에서 함수의 매개변수에 기본값을 설정하려면 '매개변수 = 값' 형식을 사용합니다."
"mock",000000,4,"프로그래밍언어활용",25,"C다음 중 C 언어에서 올바른 변수 선언 방법은 무엇인가?","","①int 2num = 10;","②float pi = 3.14;","③char name = "John";","④double rate == 0.05;","④double rate == 0.05;","변수 선언 시, 변수명은 숫자로 시작할 수 없으며, 공백이나 특수문자(기호)를 포함할 수 없고, 예약어를 사용할 수 없습니다."
"mock",000000,4,"프로그래밍언어활용",26,"C에서 'struct'의 목적은 무엇인가?","","①데이터의 집합을 정의한다.","②여러 데이터 타입을 묶어서 하나의 데이터 구조를 만든다.","③메모리 주소를 저장한다.","④상수값을 저장한다.","②여러 데이터 타입을 묶어서 하나의 데이터 구조를 만든다.","'struct'는 여러 개의 다른 데이터 타입을 하나의 구조체로 묶는 데 사용됩니다."
"mock",000000,4,"프로그래밍언어활용",27,"파이썬에서 메모리 상의 객체를 참조하는 변수의 개수를 나타내는 함수는 무엇인가?","","①count()","②id()","③memoryview()","④sys.getrefcount()","④sys.getrefcount()","'sys.getrefcount()'는 메모리 상의 객체를 참조하는 변수의 개수를 반환합니다."
"mock",000000,4,"프로그래밍언어활용",28,"자바에서 상속을 통해 부모 클래스의 메서드를 자식 클래스에서 재정의할 때 사용하는 키워드는 무엇인가?","","①implements","②super","③final","④override","④override","자식 클래스에서 부모 클래스의 메서드를 재정의할 때 '@Override' 애너테이션을 사용합니다."
"mock",000000,4,"프로그래밍언어활용",29,"C에서 동적 메모리 할당 후 메모리를 해제하는 함수는 무엇인가?","","①free()","②delete()","③release()","④unmap()","①free()","동적 메모리 할당을 마친 후에는 'free()' 함수를 사용하여 메모리를 해제해야 합니다."
"mock",000000,4,"프로그래밍언어활용",30,"자바에서 'public' 키워드는 무엇을 의미하는가?","","①메서드의 반환 타입을 나타낸다.","②클래스나 메서드가 외부에서 접근 가능함을 의미한다.","③변수의 데이터 타입을 지정한다.","④클래스의 접근 권한을 제한한다.","②클래스나 메서드가 외부에서 접근 가능함을 의미한다.","'public'은 클래스, 메서드, 변수 등을 외부에서 접근할 수 있게 합니다."
"mock",000000,4,"프로그래밍언어활용",31,"파이썬에서 'self'는 무엇을 나타내는가?","","①현재 클래스의 이름을 나타낸다.","②인스턴스를 참조하는 변수이다.","③클래스의 부모 클래스를 나타낸다.","④객체의 메서드를 정의하는 함수이다.","②인스턴스를 참조하는 변수이다.","'self'는 클래스의 인스턴스를 참조하는 변수로, 클래스 내부에서 인스턴스 변수와 메서드에 접근할 때 사용됩니다."
"mock",000000,4,"프로그래밍언어활용",32,"자바에서 'synchronized' 키워드는 무엇을 의미하는가?","","①변수의 값을 보호한다.","②메서드나 블록이 하나의 스레드에서만 실행되도록 제한한다.","③객체의 상태를 보존한다.","④메서드를 비동기적으로 실행한다.","②메서드나 블록이 하나의 스레드에서만 실행되도록 제한한다.","'synchronized'는 멀티스레딩 환경에서 동기화가 필요한 메서드나 블록을 설정하는 데 사용됩니다."
"mock",000000,4,"프로그래밍언어활용",33,"C++에서 가상 함수의 목적은 무엇인가?","","①다형성을 구현하기 위해","②변수 값을 참조하기 위해","③함수의 재정의를 막기 위해","④함수의 주소를 반환하기 위해","①다형성을 구현하기 위해","가상 함수는 다형성을 구현하기 위해 사용되며, 부모 클래스에서 선언하고 자식 클래스에서 재정의할 수 있습니다."
"mock",000000,4,"프로그래밍언어활용",34,"C에서 'goto' 문을 사용할 때의 문제점은 무엇인가?","","①코드의 복잡도를 증가시킨다.","②코드의 가독성이 좋아진다.","③코드의 실행 속도가 빨라진다.","④변수 값을 효율적으로 변경할 수 있다.","①코드의 복잡도를 증가시킨다.","'goto'는 코드의 흐름을 비효율적으로 만들 수 있어, 복잡도를 증가시키는 단점이 있습니다."
"mock",000000,4,"프로그래밍언어활용",35,"파이썬에서 모듈을 임포트하는 방법은 무엇인가?","","①import module","②include module","③use module","④import from module","①import module","'import'를 사용하여 파이썬 모듈을 프로그램에 포함시킬 수 있습니다."
"mock",000000,4,"프로그래밍언어활용",36,"자바에서 'interface'의 목적은 무엇인가?","","①클래스 간의 상속을 지원한다.","②여러 클래스에서 공통적으로 사용되는 메서드들을 정의한다.","③데이터를 보호한다.","④메모리 효율성을 높인다.","②여러 클래스에서 공통적으로 사용되는 메서드들을 정의한다.","인터페이스는 여러 클래스가 공통적으로 구현해야 할 메서드를 정의하는 계약을 제공합니다."
"mock",000000,4,"프로그래밍언어활용",37,"C++에서 'new' 연산자는 무엇을 수행하는가?","","①객체를 삭제한다.","②객체의 주소를 반환한다.","③객체를 동적으로 생성한다.","④객체를 참조한다.","③객체를 동적으로 생성한다.","'new'는 동적으로 객체를 할당하고, 객체의 주소를 반환합니다."
"mock",000000,4,"프로그래밍언어활용",38,"C에서 배열을 초기화할 때 사용하는 방법은 무엇인가?","","①배열 = {1, 2, 3}","②int[] arr = {1, 2, 3}","③arr = new int[3]","④int arr[3] = {1, 2, 3}","②int[] arr = {1, 2, 3}","C에서 배열을 초기화하려면 'int[] arr = {1, 2, 3}'과 같이 작성합니다."
"mock",000000,4,"프로그래밍언어활용",39,"자바에서 클래스의 인스턴스를 생성할 때 호출되는 메서드는 무엇인가?","","①constructor","②run","③start","④init","①constructor","인스턴스를 생성할 때 호출되는 메서드는 클래스의 생성자(constructor)입니다."
"mock",000000,4,"프로그래밍언어활용",40,"파이썬에서 'yield' 키워드의 목적은 무엇인가?","","①값을 반환하고 함수의 실행을 종료한다.","②반복 가능한 객체를 반환한다.","③함수의 실행을 잠시 멈춘다.","④변수의 값을 변경한다.","②반복 가능한 객체를 반환한다.","'yield'는 함수 내에서 반복 가능한 객체를 반환하며, 제너레이터를 생성합니다."
"mock",000000,4,"프로그래밍언어활용",41,"자바에서 'try-catch' 구문을 사용하는 목적은 무엇인가?","","①예외를 처리하기 위해","②조건을 평가하기 위해","③값을 반환하기 위해","④반복을 구현하기 위해","①예외를 처리하기 위해","'try-catch'는 예외가 발생할 경우 그 예외를 처리하는 데 사용됩니다."
"mock",000000,4,"프로그래밍언어활용",42,"파이썬에서 '__init__' 메서드의 목적은 무엇인가?","","①객체를 생성할 때 호출된다.","②클래스의 이름을 반환한다.","③객체의 상태를 초기화한다.","④클래스 변수를 설정한다.","③객체의 상태를 초기화한다.","'__init__'은 파이썬 클래스에서 객체가 생성될 때 호출되어 객체를 초기화하는 역할을 합니다."
"mock",000000,4,"프로그래밍언어활용",43,"C++에서 객체 지향 프로그램에서 캡슐화의 목적은 무엇인가?","","①코드의 가독성을 높인다.","②데이터를 보호한다.","③객체를 동적으로 생성한다.","④프로그램의 실행 속도를 높인다.","②데이터를 보호한다.","캡슐화는 객체의 내부 데이터를 보호하고, 외부에서의 접근을 제어하기 위해 사용됩니다."
"mock",000000,4,"프로그래밍언어활용",44,"자바에서 'final' 키워드의 목적은 무엇인가?","","①변수, 메서드, 클래스의 값을 변경할 수 없도록 한다.","②메서드의 실행을 지연시킨다.","③클래스를 상속할 수 없도록 한다.","④클래스의 객체를 변경할 수 없도록 한다.","①변수, 메서드, 클래스의 값을 변경할 수 없도록 한다.","'final'은 변수, 메서드, 클래스에 적용하여 값을 변경할 수 없도록 합니다."
"mock",000000,4,"프로그래밍언어활용",45,"C에서 'typedef'의 목적은 무엇인가?","","①새로운 타입을 정의한다.","②함수의 매개변수를 선언한다.","③변수의 값을 변경한다.","④타입을 체크한다.","①새로운 타입을 정의한다.","'typedef'는 새로운 데이터 타입을 정의하여 코드의 가독성을 높이는 데 사용됩니다."
"mock",000000,4,"프로그래밍언어활용",46,"C++에서 'virtual' 키워드는 무엇을 의미하는가?","","①다형성을 구현할 수 있도록 한다.","②메모리 할당을 동적으로 한다.","③상속을 지원한다.","④예외를 처리할 수 있도록 한다.","①다형성을 구현할 수 있도록 한다.","'virtual'은 다형성을 구현하기 위해 함수에 사용되어 자식 클래스에서 재정의할 수 있게 합니다."
"mock",000000,4,"프로그래밍언어활용",47,"파이썬에서 'lambda' 함수는 무엇인가?","","①간단한 함수 정의를 위해 사용된다.","②여러 문장을 포함하는 함수이다.","③객체 지향 프로그래밍을 구현한다.","④예외 처리를 한다.","①간단한 함수 정의를 위해 사용된다.","'lambda'는 간단한 익명 함수를 정의하는 데 사용됩니다."
"mock",000000,4,"프로그래밍언어활용",48,"자바에서 'super' 키워드는 무엇을 의미하는가?","","①부모 클래스의 메서드를 호출한다.","②자식 클래스의 메서드를 호출한다.","③부모 클래스의 객체를 생성한다.","④자식 클래스의 객체를 생성한다.","①부모 클래스의 메서드를 호출한다.","'super'는 부모 클래스의 생성자나 메서드를 호출할 때 사용됩니다."
"mock",000000,4,"프로그래밍언어활용",49,"C++에서 'delete' 연산자의 목적은 무엇인가?","","①동적 메모리를 해제한다.","②객체를 생성한다.","③변수 값을 할당한다.","④데이터를 삭제한다.","①동적 메모리를 해제한다.","'delete'는 'new'로 할당한 동적 메모리를 해제하는 데 사용됩니다."
"mock",000000,4,"프로그래밍언어활용",50,"C에서 'switch' 문을 사용할 때 주의할 점은 무엇인가?","","①각 case마다 break 문을 사용해야 한다.","②case 문에 값을 넣을 수 없다.","③switch 문 내에서 return 문을 사용할 수 없다.","④각 case는 반드시 동일한 데이터 타입이어야 한다.","①각 case마다 break 문을 사용해야 한다.","'switch' 문을 사용할 때는 각 'case'마다 'break' 문을 사용하는 것이 좋습니다."
"mock",000000,4,"프로그래밍언어활용",51,"자바에서 'this' 키워드는 무엇을 나타내는가?","","①현재 객체의 참조","②부모 클래스의 참조","③메서드의 반환값","④클래스의 타입","①현재 객체의 참조","'this'는 현재 객체의 참조를 나타냅니다."
"mock",000000,4,"프로그래밍언어활용",52,"파이썬에서 여러 개의 값을 반환할 때 사용하는 방법은 무엇인가?","","①return","②yield","③tuple","④list","③tuple","파이썬에서는 여러 값을 반환할 때 'tuple'을 사용합니다."
"mock",000000,4,"프로그래밍언어활용",53,"C++에서 'private' 접근 제한자는 무엇을 의미하는가?","","①모든 클래스에서 접근할 수 있다.","②해당 클래스 내에서만 접근할 수 있다.","③외부 클래스에서도 접근할 수 있다.","④자식 클래스에서 접근할 수 있다.","②해당 클래스 내에서만 접근할 수 있다.","'private'는 해당 클래스 내에서만 접근할 수 있는 멤버를 정의합니다."
"mock",000000,4,"프로그래밍언어활용",54,"자바에서 'break' 문은 어떤 용도로 사용되는가?","","①반복문을 종료하기 위해","②조건문을 종료하기 위해","③예외를 처리하기 위해","④메서드를 종료하기 위해","①반복문을 종료하기 위해","'break' 문은 반복문이나 switch 문을 종료할 때 사용됩니다."
"mock",000000,4,"프로그래밍언어활용",55,"파이썬에서 'is' 키워드의 용도는 무엇인가?","","①객체의 값을 비교한다.","②객체의 주소를 비교한다.","③변수의 타입을 비교한다.","④객체를 생성한다.","②객체의 주소를 비교한다.","'is'는 두 객체가 동일한 메모리 주소를 가리키는지를 비교하는 데 사용됩니다."
"mock",000000,4,"프로그래밍언어활용",56,"C에서 함수의 반환값으로 배열을 전달하려면 어떻게 해야 하는가?","","①배열의 주소를 반환한다.","②배열의 크기를 반환한다.","③배열의 포인터를 반환한다.","④배열 자체를 반환한다.","①배열의 주소를 반환한다.","C에서는 배열을 함수에서 반환할 수 없으므로, 배열의 주소나 포인터를 반환합니다."
"mock",000000,4,"프로그래밍언어활용",57,"자바에서 'instanceof' 키워드는 무엇을 검사하는가?","","①객체가 특정 클래스의 인스턴스인지 검사한다.","②객체의 타입을 검사한다.","③객체의 주소를 검사한다.","④클래스의 상속 관계를 검사한다.","①객체가 특정 클래스의 인스턴스인지 검사한다.","'instanceof'는 객체가 특정 클래스의 인스턴스인지 검사하는 데 사용됩니다."
"mock",000000,4,"프로그래밍언어활용",58,"파이썬에서 'def' 키워드는 무엇을 정의하는가?","","①클래스","②함수","③변수","④모듈","②함수","'def'는 파이썬에서 함수를 정의할 때 사용하는 키워드입니다."
"mock",000000,4,"프로그래밍언어활용",59,"C++에서 'this' 포인터는 무엇을 참조하는가?","","①부모 클래스의 객체","②객체 자신을 참조","③자식 클래스의 객체","④메모리의 시작 주소","②객체 자신을 참조","'this' 포인터는 현재 객체 자신을 참조합니다."
"mock",000000,4,"프로그래밍언어활용",60,"자바에서 'abstract' 클래스의 목적은 무엇인가?","","①인스턴스를 생성할 수 있도록 한다.","②하위 클래스에서 구현해야 하는 메서드를 정의한다.","③메모리 효율성을 높인다.","④다형성을 구현한다.","②하위 클래스에서 구현해야 하는 메서드를 정의한다.","'abstract' 클래스는 하위 클래스에서 반드시 구현해야 할 메서드를 정의하는 데 사용됩니다."
"mock",000000,4,"프로그래밍언어활용",61,"파이썬에서 'try-except' 구문의 목적은 무엇인가?","","①예외를 처리하기 위해","②조건을 평가하기 위해","③반복을 제어하기 위해","④파일을 읽기 위해","①예외를 처리하기 위해","'try-except' 구문은 코드 실행 중 발생할 수 있는 예외를 처리하는 데 사용됩니다."
"mock",000000,4,"프로그래밍언어활용",62,"C에서 문자열을 비교하는 함수는 무엇인가?","","①compare()","②strcmp()","③strcmpi()","④compareTo()","②strcmp()","'strcmp()' 함수는 두 문자열을 비교하는 데 사용됩니다."
"mock",000000,4,"프로그래밍언어활용",63,"C++에서 'new[]' 연산자는 무엇을 할당하는가?","","①동적 배열을 할당한다.","②동적 객체를 할당한다.","③포인터를 할당한다.","④문자열을 할당한다.","①동적 배열을 할당한다.","'new[]'는 동적 배열을 할당하는 데 사용됩니다."
"mock",000000,4,"프로그래밍언어활용",64,"자바에서 'super()'는 무엇을 호출하는가?","","①부모 클래스의 생성자","②부모 클래스의 메서드","③부모 클래스의 변수","④부모 클래스의 필드","①부모 클래스의 생성자","'super()'는 부모 클래스의 생성자를 호출하는 데 사용됩니다."
"mock",000000,4,"프로그래밍언어활용",65,"파이썬에서 'open()' 함수의 용도는 무엇인가?","","①파일을 읽고 쓴다.","②파일을 생성한다.","③파일을 연다.","④파일을 삭제한다.","③파일을 연다.","'open()' 함수는 파일을 열 때 사용됩니다."
"mock",000000,4,"프로그래밍언어활용",66,"C에서 'const' 키워드의 목적은 무엇인가?","","①변수를 상수로 선언한다.","②함수를 정의한다.","③메모리를 할당한다.","④변수를 포인터로 선언한다.","①변수를 상수로 선언한다.","'const'는 변수를 상수로 선언하여 그 값을 변경할 수 없도록 합니다."
"mock",000000,4,"프로그래밍언어활용",67,"자바에서 'static' 키워드는 무엇을 의미하는가?","","①클래스의 변수나 메서드가 모든 객체에서 공유됨을 의미한다.","②변수가 외부에서 접근할 수 없음을 의미한다.","③메서드가 동적으로 생성됨을 의미한다.","④변수가 상수임을 의미한다.","①클래스의 변수나 메서드가 모든 객체에서 공유됨을 의미한다.","'static'은 클래스의 변수나 메서드가 모든 객체에서 공유됨을 나타냅니다."
"mock",000000,4,"프로그래밍언어활용",68,"C++에서 'mutable' 키워드는 무엇을 의미하는가?","","①객체가 상수일 때도 해당 멤버 변수를 변경할 수 있게 한다.","②객체의 메서드가 재정의 가능하게 한다.","③객체를 상속할 수 없게 한다.","④객체의 메모리 할당을 관리한다.","①객체가 상수일 때도 해당 멤버 변수를 변경할 수 있게 한다.","'mutable'은 상수 객체에서도 특정 멤버 변수를 변경할 수 있도록 허용합니다."
"mock",000000,4,"프로그래밍언어활용",69,"파이썬에서 '__str__' 메서드는 무엇을 정의하는가?","","①객체를 문자열로 변환하는 방법을 정의한다.","②객체를 비교하는 방법을 정의한다.","③객체의 크기를 정의한다.","④객체의 주소를 출력한다.","①객체를 문자열로 변환하는 방법을 정의한다.","'__str__'는 객체를 문자열로 변환하는 방법을 정의하는 메서드입니다."
"mock",000000,4,"프로그래밍언어활용",70,"자바에서 'equals()' 메서드는 무엇을 비교하는가?","","①객체의 주소를 비교한다.","②객체의 값을 비교한다.","③객체의 타입을 비교한다.","④객체의 메모리 크기를 비교한다.","②객체의 값을 비교한다.","'equals()'는 두 객체의 값을 비교하는 메서드입니다."
"mock",000000,4,"프로그래밍언어활용",71,"C에서 'malloc()' 함수의 목적은 무엇인가?","","①동적 메모리를 할당한다.","②동적 메모리를 해제한다.","③메모리를 초기화한다.","④메모리를 비교한다.","①동적 메모리를 할당한다.","'malloc()'은 동적 메모리를 할당하는 함수입니다."
"mock",000000,4,"프로그래밍언어활용",72,"C++에서 'friend' 키워드의 목적은 무엇인가?","","①특정 함수나 클래스에 대한 접근을 허용한다.","②클래스를 상속한다.","③클래스 외부에서 객체를 생성할 수 있게 한다.","④클래스를 비교할 수 있게 한다.","①특정 함수나 클래스에 대한 접근을 허용한다.","'friend' 키워드는 특정 함수나 클래스가 다른 클래스의 private 및 protected 멤버에 접근할 수 있도록 허용합니다."
"mock",000000,4,"프로그래밍언어활용",73,"파이썬에서 'lambda' 함수는 무엇을 정의하는가?","","①무명 함수","②클래스 함수","③재귀 함수","④일반 함수","①무명 함수","'lambda'는 파이썬에서 간단한 함수를 정의할 때 사용하는 구문입니다."
"mock",000000,4,"프로그래밍언어활용",74,"C++에서 'virtual' 키워드의 목적은 무엇인가?","","①클래스의 멤버가 상속되지 않도록 한다.","②클래스의 멤버를 static으로 만든다.","③메서드의 다형성을 구현한다.","④상속을 금지한다.","③메서드의 다형성을 구현한다.","'virtual' 키워드는 C++에서 메서드의 다형성을 구현할 때 사용됩니다."
"mock",000000,4,"프로그래밍언어활용",75,"자바에서 'synchronized' 키워드는 무엇을 제어하는가?","","①객체의 동기화","②클래스의 동기화","③변수의 동기화","④메서드의 동기화","④메서드의 동기화","'synchronized'는 멀티스레드 환경에서 메서드나 블록의 동기화를 제어하는 데 사용됩니다."
"mock",000000,4,"프로그래밍언어활용",76,"파이썬에서 '__init__' 메서드는 무엇을 하는가?","","①클래스의 인스턴스를 생성한다.","②클래스의 변수 값을 출력한다.","③클래스의 메서드를 정의한다.","④클래스의 객체를 삭제한다.","①클래스의 인스턴스를 생성한다.","'__init__' 메서드는 파이썬에서 클래스의 인스턴스를 초기화하는 생성자 역할을 합니다."
"mock",000000,4,"프로그래밍언어활용",77,"C에서 'free()' 함수의 목적은 무엇인가?","","①메모리의 주소를 반환한다.","②동적 메모리를 할당한다.","③동적 메모리를 해제한다.","④파일을 닫는다.","③동적 메모리를 해제한다.","'free()' 함수는 동적으로 할당된 메모리를 해제하는 데 사용됩니다."
"mock",000000,4,"프로그래밍언어활용",78,"C++에서 'static_cast'와 'dynamic_cast'의 차이는 무엇인가?","","①둘은 동일한 기능을 한다.","②'static_cast'는 컴파일 시간에, 'dynamic_cast'는 실행 시간에 형 변환을 한다.","③'static_cast'는 타입 변환을 금지한다.","④'dynamic_cast'는 포인터만 변환한다.","②'static_cast'는 컴파일 시간에, 'dynamic_cast'는 실행 시간에 형 변환을 한다.","'static_cast'는 컴파일 시간에 형 변환을 처리하고, 'dynamic_cast'는 실행 시간에 안전한 형 변환을 수행합니다."
"mock",000000,4,"프로그래밍언어활용",79,"자바에서 'super' 키워드가 호출하는 것은 무엇인가?","","①부모 클래스의 변수","②부모 클래스의 생성자","③부모 클래스의 메서드","④부모 클래스의 필드","②부모 클래스의 생성자","'super' 키워드는 부모 클래스의 생성자를 호출할 때 사용됩니다."
"mock",000000,4,"프로그래밍언어활용",80,"파이썬에서 'assert' 문은 무엇을 하는가?","","①조건이 거짓일 때 예외를 발생시킨다.","②조건이 참일 때 예외를 발생시킨다.","③값을 출력한다.","④값을 비교한다.","①조건이 거짓일 때 예외를 발생시킨다.","'assert' 문은 조건이 거짓일 경우 예외를 발생시켜 오류를 처리합니다."
"mock",000000,4,"프로그래밍언어활용",81,"C에서 'typedef' 키워드는 무엇을 정의하는가?","","①새로운 데이터 타입","②구조체의 이름","③함수 포인터","④새로운 변수","①새로운 데이터 타입","'typedef'는 새로운 데이터 타입을 정의할 때 사용됩니다."
"mock",000000,4,"프로그래밍언어활용",82,"C++에서 'explicit' 키워드의 용도는 무엇인가?","","①생성자의 암시적 호출을 금지한다.","②생성자를 자동으로 호출한다.","③객체의 타입을 자동으로 변환한다.","④함수의 인수를 변경한다.","①생성자의 암시적 호출을 금지한다.","'explicit' 키워드는 생성자의 암시적 호출을 방지하여 안전한 객체 생성만을 허용합니다."
"mock",000000,4,"프로그래밍언어활용",83,"자바에서 'interface'와 'abstract class'의 차이는 무엇인가?","","①'interface'는 메서드를 구현할 수 있지만, 'abstract class'는 구현하지 못한다.","②'interface'는 다중 상속을 지원하지만, 'abstract class'는 단일 상속만 지원한다.","③'interface'는 멤버 변수를 가질 수 있지만, 'abstract class'는 가질 수 없다.","④'interface'와 'abstract class'는 동일한 역할을 한다.","②'interface'는 다중 상속을 지원하지만, 'abstract class'는 단일 상속만 지원한다.","'interface'는 다중 상속을 지원하지만, 'abstract class'는 단일 상속만 지원합니다."
"mock",000000,4,"프로그래밍언어활용",84,"파이썬에서 'open()' 함수의 'mode' 인자에 'r'을 지정하면 무엇을 할 수 있는가?","","①파일을 읽을 수 있다.","②파일을 쓸 수 있다.","③파일을 읽고 쓸 수 있다.","④파일을 삭제할 수 있다.","①파일을 읽을 수 있다.","'open()' 함수의 'mode='r''은 파일을 읽기 전용으로 엽니다."
"mock",000000,4,"프로그래밍언어활용",85,"C에서 'struct'와 'union'의 차이는 무엇인가?","","①'struct'는 메모리 공간을 공유하지 않는다.","②'union'은 각 멤버가 같은 메모리 공간을 공유한다.","③'union'은 메모리 크기를 최소화한다.","④'struct'는 메모리 크기를 최소화한다.","②'union'은 각 멤버가 같은 메모리 공간을 공유한다.","'union'은 각 멤버가 동일한 메모리 공간을 공유하므로 메모리 공간을 절약할 수 있습니다."
"mock",000000,4,"프로그래밍언어활용",86,"C++에서 'delete' 연산자는 무엇을 해제하는가?","","①동적 메모리 할당을 해제한다.","②함수의 반환값을 해제한다.","③객체의 멤버를 해제한다.","④변수의 값을 해제한다.","①동적 메모리 할당을 해제한다.","'delete'는 동적으로 할당된 메모리를 해제하는 데 사용됩니다."
"mock",000000,4,"프로그래밍언어활용",87,"자바에서 'final' 키워드는 무엇을 정의하는가?","","①변수, 메서드, 클래스가 변경되지 않음을 정의한다.","②변수, 메서드, 클래스가 상속될 수 있음을 정의한다.","③메서드의 반환값을 고정시킨다.","④클래스의 인스턴스를 생성할 수 없도록 한다.","①변수, 메서드, 클래스가 변경되지 않음을 정의한다.","'final' 키워드는 변수, 메서드, 클래스가 변경되지 않음을 의미합니다."
"mock",000000,4,"프로그래밍언어활용",88,"파이썬에서 'enumerate()' 함수는 무엇을 반환하는가?","","①인덱스와 값을 반환한다.","②값만 반환한다.","③인덱스만 반환한다.","④문자열을 반환한다.","①인덱스와 값을 반환한다.","'enumerate()'는 리스트나 튜플에서 인덱스와 값을 반환하는 함수입니다."
"mock",000000,4,"프로그래밍언어활용",89,"C에서 'sizeof' 연산자는 무엇을 반환하는가?","","①변수의 값","②데이터 타입의 크기","③함수의 크기","④배열의 크기","②데이터 타입의 크기","'sizeof'는 데이터 타입이나 변수의 크기를 바이트 단위로 반환합니다."
"mock",000000,4,"프로그래밍언어활용",90,"C++에서 'const_cast' 연산자는 무엇을 변환하는가?","","①변수의 주소를 변경한다.","②상수 포인터를 비상수 포인터로 변환한다.","③객체를 비동기적으로 변환한다.","④메모리 할당을 변경한다.","②상수 포인터를 비상수 포인터로 변환한다.","'const_cast'는 상수 포인터를 비상수 포인터로 변환할 때 사용됩니다."
"mock",000000,4,"프로그래밍언어활용",91,"자바에서 'this' 키워드는 무엇을 참조하는가?","","①현재 클래스의 객체","②부모 클래스의 객체","③상위 클래스의 객체","④생성자","①현재 클래스의 객체","'this'는 현재 클래스의 객체를 참조하는 키워드입니다."
"mock",000000,4,"프로그래밍언어활용",92,"파이썬에서 'is' 연산자는 무엇을 비교하는가?","","①값","②객체의 메모리 주소","③자료형","④문자열","②객체의 메모리 주소","'is' 연산자는 두 객체가 동일한 메모리 주소를 가리키는지 비교합니다."
"mock",000000,4,"프로그래밍언어활용",93,"C++에서 'new' 연산자의 역할은 무엇인가?","","①동적 메모리 할당","②동적 메모리 해제","③객체 생성","④변수 선언","①동적 메모리 할당","'new' 연산자는 동적으로 메모리를 할당하는 데 사용됩니다."
"mock",000000,4,"프로그래밍언어활용",94,"자바에서 'instanceof' 연산자는 무엇을 확인하는가?","","①객체가 특정 클래스의 인스턴스인지 확인한다.","②객체의 메서드 호출 가능 여부를 확인한다.","③객체의 변수 값을 출력한다.","④객체가 null인지 확인한다.","①객체가 특정 클래스의 인스턴스인지 확인한다.","'instanceof'는 객체가 특정 클래스의 인스턴스인지 확인하는 데 사용됩니다."
"mock",000000,4,"프로그래밍언어활용",95,"C에서 'malloc()' 함수는 무엇을 하는가?","","①동적 메모리 할당","②동적 메모리 해제","③파일을 연다.","④변수를 선언한다.","①동적 메모리 할당","'malloc()' 함수는 동적으로 메모리를 할당하는 함수입니다."
"mock",000000,4,"프로그래밍언어활용",96,"C++에서 'try-catch' 구문은 어떤 용도로 사용되는가?","","①예외 처리","②동기화 처리","③파일 입출력 처리","④포인터 연산 처리","①예외 처리","'try-catch' 구문은 예외 처리를 위해 사용됩니다."
"mock",000000,4,"프로그래밍언어활용",97,"자바에서 'default' 키워드는 무엇을 정의하는가?","","①메서드의 기본 구현","②변수를 기본값으로 초기화","③클래스의 기본 값","④인터페이스의 기본 메서드","①메서드의 기본 구현","'default'는 인터페이스에서 메서드의 기본 구현을 정의할 때 사용됩니다."
"mock",000000,4,"프로그래밍언어활용",98,"파이썬에서 'yield' 키워드는 무엇을 반환하는가?","","①함수의 실행 결과","②반복 가능한 객체","③함수의 종료","④예외 객체","②반복 가능한 객체","'yield'는 반복 가능한 객체를 반환하는 제너레이터 함수에서 사용됩니다."
"mock",000000,4,"프로그래밍언어활용",99,"C에서 'goto' 문은 무엇을 하는가?","","①특정 위치로 프로그램 흐름을 이동시킨다.","②함수의 호출을 반복한다.","③변수를 출력한다.","④조건문을 실행한다.","①특정 위치로 프로그램 흐름을 이동시킨다.","'goto'는 프로그램 흐름을 특정 위치로 이동시킬 때 사용되는 문입니다."
"mock",000000,4,"프로그래밍언어활용",100,"C++에서 'namespace'의 역할은 무엇인가?","","①변수의 범위를 제한한다.","②함수의 범위를 제한한다.","③클래스의 범위를 제한한다.","④코드의 충돌을 방지한다.","④코드의 충돌을 방지한다.","'namespace'는 코드의 충돌을 방지하기 위해 이름의 범위를 구분하는 데 사용됩니다."