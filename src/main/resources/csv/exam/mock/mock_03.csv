test,date,snumber,sname,qnumber,qname1,qname2,example1,example2,example3,example4,answer,explain
"mock",000000,3,"데이터베이스구축",1,"데이터베이스 설계에서 '정규화'의 주요 목적은 무엇인가","","① 데이터 중복을 최소화하여 저장 공간을 절약하는 것","②데이터 무결성을 강화하는 것","③ 데이터를 빠르게 검색하는 것","④ 데이터 삽입 속도를 증가시키는 것","① 데이터 중복을 최소화하여 저장 공간을 절약하는 것","정규화는 데이터 중복을 최소화하고 무결성을 높이기 위해 데이터를 분리하여 관계형 데이터베이스를 설계하는 기법입니다."
"mock",000000,3,"데이터베이스구축",2,"SQL에서 'JOIN' 연산자의 목적은 무엇인가","","① 두 개 이상의 테이블을 연결하여 데이터를 조회하는 것","② 데이터를 정렬하는 것","③ 데이터를 필터링하는 것","④ 데이터를 삽입하는 것","① 두 개 이상의 테이블을 연결하여 데이터를 조회하는 것","JOIN 연산자는 여러 테이블을 결합하여 하나의 결과셋으로 데이터를 조회할 수 있게 합니다."
"mock",000000,3,"데이터베이스구축",3,"데이터베이스에서 '인덱스'의 주요 목적은 무엇인가","","① 데이터를 빠르게 검색하는 것","② 데이터를 삽입하는 속도를 증가시키는 것","③ 데이터를 정렬하는 것","④ 데이터를 삭제하는 것","① 데이터를 빠르게 검색하는 것","인덱스는 데이터 검색 속도를 개선하기 위해 테이블의 특정 열에 대한 추가적인 자료 구조를 생성하는 기술입니다."
"mock",000000,3,"데이터베이스구축",4,"정규형 중 2NF(Second Normal Form)의 조건은 무엇인가","","① 부분 함수 종속성을 제거해야 한다","② 이행적 함수 종속성을 제거해야 한다","③ 함수 종속성이 존재하지 않아야 한다","④ 데이터 중복을 제거해야 한다","① 부분 함수 종속성을 제거해야 한다","2NF는 기본 키가 아닌 모든 속성이 기본 키에 완전 함수 종속성을 가지도록 하는 정규화입니다."
"mock",000000,3,"데이터베이스구축",5,"트랜잭션의 ACID 속성 중 '일관성'의 의미는 무엇인가","","① 트랜잭션이 완료되면 데이터베이스가 일관된 상태를 유지해야 한다","② 트랜잭션이 중간에 실패하더라도 원래 상태로 복구되어야 한다","③ 트랜잭션은 서로 독립적으로 실행되어야 한다","④ 트랜잭션은 항상 성공적으로 완료되어야 한다","① 트랜잭션이 완료되면 데이터베이스가 일관된 상태를 유지해야 한다","일관성은 트랜잭션이 완료되었을 때 데이터베이스가 정의된 규칙을 만족하는 상태를 유지해야 한다는 것을 의미합니다."
"mock",000000,3,"데이터베이스구축",6,"ERD(Entity Relationship Diagram)에서 '관계'를 나타내는 기호는 무엇인가","","① 다이아몬드","② 원","③ 직선","④ 사각형","① 다이아몬드","ERD에서 관계는 다이아몬드 모양의 기호로 나타내어 두 개 이상의 엔티티 간의 관계를 설명합니다."
"mock",000000,3,"데이터베이스구축",7,"데이터베이스에서 '무결성 제약 조건'의 목적은 무엇인가","","① 데이터의 정확성, 신뢰성, 일관성을 보장하는 것","② 데이터 중복을 최소화하는 것","③ 데이터를 빠르게 검색하는 것","④ 데이터를 정렬하는 것","① 데이터의 정확성, 신뢰성, 일관성을 보장하는 것","무결성 제약 조건은 데이터가 정확하고 일관되며 신뢰할 수 있도록 보장하는 규칙입니다."
"mock",000000,3,"데이터베이스구축",8,"SQL에서 'GROUP BY' 절의 주요 기능은 무엇인가","","① 데이터를 그룹화하여 집계 함수와 함께 사용하기 위한 것","② 데이터를 정렬하기 위한 것","③ 데이터를 필터링하기 위한 것","④ 데이터를 결합하기 위한 것","① 데이터를 그룹화하여 집계 함수와 함께 사용하기 위한 것","GROUP BY는 특정 열을 기준으로 데이터를 그룹화하여 집계 함수를 적용하는 데 사용됩니다."
"mock",000000,3,"데이터베이스구축",9,"SQL에서 'HAVING' 절의 주요 역할은 무엇인가","","① GROUP BY로 그룹화된 결과에서 조건을 필터링하는 것","② 특정 컬럼을 선택하는 것","③ 데이터를 정렬하는 것","④ 데이터를 삽입하는 것","① GROUP BY로 그룹화된 결과에서 조건을 필터링하는 것","HAVING은 GROUP BY 결과에서 조건을 지정하여 필터링할 때 사용됩니다."
"mock",000000,3,"데이터베이스구축",10,"데이터베이스에서 '스키마'란 무엇인가","","① 데이터베이스 객체들의 구조와 관계를 정의하는 청사진","② 데이터의 값 자체","③ 데이터베이스의 크기","④ 데이터베이스 서버의 위치","① 데이터베이스 객체들의 구조와 관계를 정의하는 청사진","스키마는 데이터베이스의 구조를 정의하며, 테이블, 뷰, 인덱스 등의 데이터베이스 객체를 포함합니다."
"mock",000000,3,"데이터베이스구축",11,"SQL에서 'DISTINCT' 키워드의 목적은 무엇인가","","① 중복된 값을 제거하고 고유한 값만 선택하는 것","② 데이터를 정렬하는 것","③ 데이터를 삽입하는 것","④ 데이터를 결합하는 것","① 중복된 값을 제거하고 고유한 값만 선택하는 것","DISTINCT는 SELECT 쿼리에서 중복된 데이터를 제거하고 유일한 값만 반환하도록 합니다."
"mock",000000,3,"데이터베이스구축",12,"데이터베이스에서 '외래 키(Foreign Key)'의 주요 목적은 무엇인가","","① 다른 테이블과의 관계를 정의하고 데이터 무결성을 유지하는 것","② 데이터를 빠르게 검색하는 것","③ 데이터를 삽입하는 속도를 증가시키는 것","④ 데이터를 정렬하는 것","① 다른 테이블과의 관계를 정의하고 데이터 무결성을 유지하는 것","외래 키는 다른 테이블과의 관계를 설정하고, 참조된 테이블의 데이터 무결성을 유지하는 데 사용됩니다."
"mock",000000,3,"데이터베이스구축",13,"데이터베이스에서 '이행적 함수 종속성'이란 무엇인가","","① A -> B, B -> C일 때 A -> C가 성립하는 종속성","② A -> B일 때 B -> C가 성립하는 종속성","③ A -> B일 때 B -> A가 성립하는 종속성","④ A와 B가 서로 독립적인 관계를 유지하는 종속성","① A -> B"," B -> C일 때 A -> C가 성립하는 종속성,이행적 함수 종속성은 A가 B에 함수 종속적이고, B가 C에 함수 종속적일 때 A가 C에 함수 종속적인 관계를 말합니다."
"mock",000000,3,"데이터베이스구축",14,"데이터베이스에서 '트랜잭션'의 주요 속성은 무엇인가","","① 원자성, 일관성, 격리성, 지속성","② 정합성, 중복성, 일관성, 지속성","③ 신뢰성, 일관성, 격리성, 지속성","④ 원자성, 정합성, 지속성, 안정성","① 원자성, 일관성, 격리성, 지속성","트랜잭션은 원자성, 일관성, 격리성, 지속성의 ACID 속성을 가져야 하며, 이를 통해 데이터의 무결성을 보장합니다."
"mock",000000,3,"데이터베이스구축",15,"정규형 중 1NF(First Normal Form)의 주요 조건은 무엇인가","","① 각 컬럼이 원자 값을 가져야 한다","② 함수 종속성이 존재하지 않아야 한다","③ 데이터 중복을 제거해야 한다","④ 부분 함수 종속성을 제거해야 한다","① 각 컬럼이 원자 값을 가져야 한다","1NF는 각 컬럼이 원자 값(Atomic Value)을 가져야 하며, 반복적인 그룹을 제거해야 한다는 조건을 만족해야 합니다."
"mock",000000,3,"데이터베이스구축",16,"SQL에서 'ALTER' 명령어의 주요 목적은 무엇인가","","① 테이블 구조를 수정하는 것","② 테이블을 삭제하는 것","③ 데이터를 삽입하는 것","④ 데이터를 조회하는 것","① 테이블 구조를 수정하는 것","ALTER 명령어는 테이블의 구조를 변경할 때 사용됩니다. 예를 들어, 컬럼을 추가하거나 삭제하는 작업에 사용됩니다."
"mock",000000,3,"데이터베이스구축",17,"데이터베이스에서 '무결성 제약 조건' 중 '고유 제약'의 목적은 무엇인가","","① 특정 컬럼에 대해 중복되지 않는 고유 값을 강제하는 것","② 외래 키로 다른 테이블과 관계를 정의하는 것","③ NULL 값을 허용하지 않는 것","④ 특정 값을 고정시키는 것","① 특정 컬럼에 대해 중복되지 않는 고유 값을 강제하는 것","고유 제약은 테이블 내에서 특정 컬럼의 값이 중복되지 않도록 강제하는 제약입니다."
"mock",000000,3,"데이터베이스구축",18,"데이터베이스에서 '트랜잭션'이란 무엇인가","","① 데이터베이스의 여러 작업을 하나의 단위로 처리하는 것","② 데이터베이스에서 데이터를 빠르게 조회하는 것","③ 데이터베이스에서 데이터를 삭제하는 것","④ 데이터베이스에서 데이터를 백업하는 것","① 데이터베이스의 여러 작업을 하나의 단위로 처리하는 것","트랜잭션은 데이터베이스의 작업들을 하나의 논리적 단위로 묶어 처리하는 과정으로, 작업이 모두 성공해야만 실제로 적용됩니다."
"mock",000000,3,"데이터베이스구축",19,"SQL에서 'DELETE' 명령어의 주된 목적은 무엇인가","","① 데이터를 삭제하는 것","② 테이블을 생성하는 것","③ 데이터를 갱신하는 것","④ 테이블을 수정하는 것","① 데이터를 삭제하는 것","DELETE 명령어는 데이터베이스에서 특정 데이터를 삭제하는 데 사용됩니다."
"mock",000000,3,"데이터베이스구축",20,"SQL에서 'INSERT INTO' 명령어의 주된 목적은 무엇인가","","① 데이터를 테이블에 삽입하는 것","② 데이터를 조회하는 것","③ 데이터를 수정하는 것","④ 데이터를 삭제하는 것","① 데이터를 테이블에 삽입하는 것","INSERT INTO 명령어는 데이터를 테이블에 삽입할 때 사용됩니다."
"mock",000000,3,"데이터베이스구축",21,"데이터베이스 설계에서 '관계형 데이터베이스'가 의미하는 것은 무엇인가","","① 데이터를 테이블 형식으로 저장하고, 테이블 간의 관계를 설정하는 데이터베이스","② 데이터를 그래프 형식으로 저장하는 데이터베이스","③ 데이터를 문서 형식으로 저장하는 데이터베이스","④ 데이터를 객체 형식으로 저장하는 데이터베이스","① 데이터를 테이블 형식으로 저장하고, 테이블 간의 관계를 설정하는 데이터베이스","관계형 데이터베이스는 데이터를 테이블 형태로 저장하고, 각 테이블 간에 관계를 정의하여 데이터를 관리하는 데이터베이스입니다."
"mock",000000,3,"데이터베이스구축",22,"SQL에서 'UPDATE' 명령어의 주된 목적은 무엇인가","","① 기존 데이터를 수정하는 것","② 데이터를 삭제하는 것","③ 데이터를 삽입하는 것","④ 데이터를 조회하는 것","① 기존 데이터를 수정하는 것","UPDATE 명령어는 기존 테이블에 있는 데이터를 수정하는 데 사용됩니다."
"mock",000000,3,"데이터베이스구축",23,"데이터베이스에서 '데이터 무결성'이란 무엇을 의미하는가","","① 데이터가 정확하고 신뢰할 수 있으며 일관된 상태를 유지하는 것","② 데이터를 빠르게 조회하는 것","③ 데이터를 안전하게 백업하는 것","④ 데이터를 중복 없이 저장하는 것","① 데이터가 정확하고 신뢰할 수 있으며 일관된 상태를 유지하는 것","데이터 무결성은 데이터가 정확하고 일관성 있게 저장되며 신뢰할 수 있도록 유지하는 것을 의미합니다."
"mock",000000,3,"데이터베이스구축",24,"SQL에서 'UNION' 연산자의 주된 목적은 무엇인가","","① 두 개 이상의 SELECT 쿼리 결과를 결합하는 것","② 데이터를 그룹화하는 것","③ 데이터를 정렬하는 것","④ 데이터를 삽입하는 것","① 두 개 이상의 SELECT 쿼리 결과를 결합하는 것","UNION 연산자는 여러 SELECT 쿼리의 결과를 하나의 결과로 결합하는 데 사용됩니다."
"mock",000000,3,"데이터베이스구축",25,"정규형 중 3NF(Third Normal Form)의 주요 조건은 무엇인가","","① 이행적 함수 종속성을 제거해야 한다","② 부분 함수 종속성을 제거해야 한다","③ 컬럼 간의 중복을 제거해야 한다","④ 데이터 중복을 최소화해야 한다","① 이행적 함수 종속성을 제거해야 한다","3NF는 이행적 함수 종속성을 제거하고, 기본 키와 관련이 없는 컬럼들이 반드시 기본 키에 종속되어야 한다는 조건을 만족해야 합니다."
"mock",000000,3,"데이터베이스구축",26,"데이터베이스에서 '트리거(Trigger)'란 무엇인가","","① 특정 이벤트가 발생했을 때 자동으로 실행되는 작업","② 데이터를 삽입하는 작업","③ 테이블을 삭제하는 작업","④ 데이터를 정렬하는 작업","① 특정 이벤트가 발생했을 때 자동으로 실행되는 작업","트리거는 데이터베이스에서 특정 이벤트가 발생할 때 자동으로 실행되는 작업을 정의하는 객체입니다."
"mock",000000,3,"데이터베이스구축",27,"SQL에서 'INNER JOIN'의 목적은 무엇인가","","① 두 테이블에서 일치하는 데이터를 반환하는 것","② 두 테이블에서 모든 데이터를 반환하는 것","③ 두 테이블에서 서로 다른 데이터를 반환하는 것","④ 두 테이블에서 중복된 데이터를 반환하는 것","① 두 테이블에서 일치하는 데이터를 반환하는 것","INNER JOIN은 두 테이블에서 일치하는 데이터만 반환하는 조인 방식입니다."
"mock",000000,3,"데이터베이스구축",28,"데이터베이스에서 '뷰(View)'란 무엇인가","","① 하나 이상의 테이블에서 데이터를 조회하는 가상 테이블","② 데이터를 삽입하는 테이블","③ 데이터를 수정하는 테이블","④ 테이블 간의 관계를 나타내는 테이블","① 하나 이상의 테이블에서 데이터를 조회하는 가상 테이블","뷰는 여러 테이블을 기반으로 한 가상 테이블로, 실제로 데이터를 저장하지 않고, 조회할 때만 결과를 반환하는 객체입니다."
"mock",000000,3,"데이터베이스구축",29,"정규형 중 BCNF( Boyce-Codd Normal Form)의 주요 조건은 무엇인가","","① 모든 결정자가 후보 키여야 한다","② 모든 부분 함수 종속성이 제거되어야 한다","③ 모든 속성이 기본 키에 완전 함수 종속성을 가져야 한다","④ 이행적 함수 종속성이 제거되어야 한다","① 모든 결정자가 후보 키여야 한다","BCNF는 모든 결정자가 후보 키이어야 한다는 조건을 만족하는 정규형입니다."
"mock",000000,3,"데이터베이스구축",30,"SQL에서 'EXISTS' 키워드의 목적은 무엇인가","","① 서브쿼리의 결과가 존재하는지 여부를 확인하는 것","② 특정 조건에 맞는 데이터를 삭제하는 것","③ 서브쿼리의 결과를 집합으로 반환하는 것","④ 특정 조건에 맞는 데이터를 업데이트하는 것","① 서브쿼리의 결과가 존재하는지 여부를 확인하는 것","EXISTS는 서브쿼리의 결과가 존재하는지 여부를 확인하는 데 사용됩니다."
"mock",000000,3,"데이터베이스구축",31,"SQL에서 'GROUP BY' 명령어의 주요 목적은 무엇인가","","① 동일한 값을 가진 행들을 그룹화하는 것","② 데이터를 정렬하는 것","③ 데이터를 삽입하는 것","④ 데이터를 갱신하는 것","① 동일한 값을 가진 행들을 그룹화하는 것","GROUP BY는 특정 컬럼을 기준으로 데이터를 그룹화하고 집계함수를 사용하여 그룹별 계산을 수행하는 데 사용됩니다."
"mock",000000,3,"데이터베이스구축",32,"SQL에서 'HAVING' 절의 주된 용도는 무엇인가","","① 집계 함수 결과에 조건을 추가하는 것","② 데이터 정렬 조건을 추가하는 것","③ 테이블을 삭제하는 조건을 추가하는 것","④ 테이블을 생성하는 조건을 추가하는 것","① 집계 함수 결과에 조건을 추가하는 것","HAVING 절은 GROUP BY 후 집계 함수의 결과에 조건을 적용할 때 사용됩니다."
"mock",000000,3,"데이터베이스구축",33,"정규화에서 2NF(Second Normal Form)란 무엇인가","","① 부분 함수 종속성을 제거한 정규형","② 이행적 함수 종속성을 제거한 정규형","③ 모든 속성이 기본 키에 함수 종속성을 가지도록 하는 정규형","④ 중복 데이터를 최소화하는 정규형","① 부분 함수 종속성을 제거한 정규형","2NF는 기본 키의 일부가 아닌 모든 속성이 기본 키에 완전 함수 종속을 가지도록 하는 정규화입니다."
"mock",000000,3,"데이터베이스구축",34,"데이터베이스에서 '인덱스'의 주요 역할은 무엇인가","","① 데이터 조회 성능을 향상시키는 것","② 데이터를 정렬하는 것","③ 데이터를 삭제하는 것","④ 데이터를 삽입하는 것","① 데이터 조회 성능을 향상시키는 것","인덱스는 데이터를 빠르게 검색할 수 있도록 돕는 데이터 구조입니다."
"mock",000000,3,"데이터베이스구축",35,"SQL에서 'LEFT JOIN'은 무엇을 수행하는가","","① 왼쪽 테이블의 모든 데이터와 오른쪽 테이블에서 일치하는 데이터를 반환하는 것","② 오른쪽 테이블의 모든 데이터와 왼쪽 테이블에서 일치하는 데이터를 반환하는 것","③ 두 테이블에서 중복된 데이터를 반환하는 것","④ 두 테이블에서 일치하는 데이터만 반환하는 것","① 왼쪽 테이블의 모든 데이터와 오른쪽 테이블에서 일치하는 데이터를 반환하는 것","LEFT JOIN은 왼쪽 테이블의 모든 데이터와 오른쪽 테이블에서 일치하는 데이터를 반환하고, 일치하지 않는 데이터는 NULL로 채워집니다."
"mock",000000,3,"데이터베이스구축",36,"데이터베이스에서 '트랜잭션의 ACID 속성' 중 '일관성(Consistency)'이 의미하는 것은 무엇인가","","① 트랜잭션 전후 데이터베이스가 일관된 상태를 유지하는 것","② 트랜잭션이 성공적으로 완료되어야 한다는 것","③ 트랜잭션이 독립적으로 실행되어야 한다는 것","④ 트랜잭션이 복구 가능해야 한다는 것","① 트랜잭션 전후 데이터베이스가 일관된 상태를 유지하는 것","일관성은 트랜잭션이 성공적으로 수행되면 데이터베이스가 항상 일관된 상태를 유지해야 한다는 속성입니다."
"mock",000000,3,"데이터베이스구축",37,"SQL에서 'FULL OUTER JOIN'의 주된 목적은 무엇인가","","① 두 테이블의 모든 데이터를 반환하고 일치하지 않는 데이터는 NULL로 표시하는 것","② 두 테이블에서 일치하는 데이터만 반환하는 것","③ 왼쪽 테이블의 데이터만 반환하는 것","④ 오른쪽 테이블의 데이터만 반환하는 것","① 두 테이블의 모든 데이터를 반환하고 일치하지 않는 데이터는 NULL로 표시하는 것","FULL OUTER JOIN은 두 테이블의 모든 데이터를 반환하며, 일치하지 않는 데이터는 NULL로 표시합니다."
"mock",000000,3,"데이터베이스구축",38,"SQL에서 'DISTINCT' 키워드의 목적은 무엇인가","","① 중복된 데이터를 제거하는 것","② 데이터를 정렬하는 것","③ 데이터를 갱신하는 것","④ 데이터를 삽입하는 것","① 중복된 데이터를 제거하는 것","DISTINCT는 SELECT 쿼리에서 중복된 데이터를 제거하고 고유한 데이터만 반환합니다."
"mock",000000,3,"데이터베이스구축",39,"정규형 중 1NF(First Normal Form)의 주요 조건은 무엇인가","","① 테이블에 원자 값만 존재해야 한다","② 데이터 중복을 최소화해야 한다","③ 모든 속성이 기본 키에 완전 함수 종속을 가져야 한다","④ 데이터의 이행적 종속성을 제거해야 한다","① 테이블에 원자 값만 존재해야 한다","1NF는 테이블의 모든 컬럼이 원자 값을 가져야 하며, 하나의 컬럼에 여러 값을 저장하지 않도록 해야 합니다."
"mock",000000,3,"데이터베이스구축",40,"SQL에서 'CASE' 문을 사용하여 조건에 따라 값을 반환할 때, 어떤 기능을 제공하는가","","① 특정 조건에 맞는 값을 반환하는 기능","② 데이터를 정렬하는 기능","③ 데이터를 그룹화하는 기능","④ 데이터를 삭제하는 기능","① 특정 조건에 맞는 값을 반환하는 기능","CASE 문은 주어진 조건에 맞는 값을 반환하는 기능을 제공하며, 주로 조건부 로직을 쿼리에 추가할 때 사용됩니다."
"mock",000000,3,"데이터베이스구축",41,"데이터베이스에서 '제약조건(Constraint)'의 주요 목적은 무엇인가","","① 데이터의 무결성을 유지하기 위해","② 데이터를 정렬하기 위해","③ 데이터 삽입을 최적화하기 위해","④ 데이터를 삭제하기 위해","④ 데이터를 삭제하기 위해","제약조건은 데이터베이스의 무결성을 유지하고 데이터를 삽입, 갱신, 삭제할 때 제약을 설정하는 데 사용됩니다."
"mock",000000,3,"데이터베이스구축",42,"SQL에서 'INSERT INTO' 명령어의 주된 목적은 무엇인가","","① 데이터를 수정하는 것","② 데이터를 삭제하는 것","③ 데이터를 삽입하는 것","④ 데이터를 검색하는 것","③ 데이터를 삽입하는 것","INSERT INTO는 새로운 데이터를 테이블에 삽입할 때 사용하는 SQL 명령어입니다."
"mock",000000,3,"데이터베이스구축",43,"SQL에서 'UPDATE' 명령어를 사용하여 데이터를 수정할 때 필요한 절은 무엇인가","","① WHERE 절","② FROM 절","③ SELECT 절","④ GROUP BY 절","① WHERE 절","UPDATE 명령어에서 WHERE 절은 수정할 행을 지정하는 데 사용됩니다."
"mock",000000,3,"데이터베이스구축",44,"다음 중 SQL에서 데이터베이스 테이블을 삭제하는 명령어는 무엇인가","","① DELETE TABLE","② REMOVE TABLE","③ DROP TABLE","④ ALTER TABLE","③ DROP TABLE","DROP TABLE은 데이터베이스에서 테이블을 완전히 삭제하는 SQL 명령어입니다."
"mock",000000,3,"데이터베이스구축",45,"SQL에서 'INNER JOIN'을 사용할 때 주로 반환되는 결과는 무엇인가","","① 일치하지 않는 데이터만 반환","② 두 테이블의 모든 데이터를 반환","③ 두 테이블에서 일치하는 데이터만 반환","④ 왼쪽 테이블의 모든 데이터를 반환","③ 두 테이블에서 일치하는 데이터만 반환","INNER JOIN은 두 테이블에서 조건에 맞는 일치하는 데이터만 반환합니다."
"mock",000000,3,"데이터베이스구축",46,"SQL에서 'ALTER TABLE' 명령어의 주된 목적은 무엇인가","","① 테이블의 구조를 수정하는 것","② 테이블의 데이터를 삭제하는 것","③ 테이블을 생성하는 것","④ 테이블의 인덱스를 삭제하는 것","① 테이블의 구조를 수정하는 것","ALTER TABLE은 테이블에 컬럼을 추가하거나 삭제하는 등 테이블의 구조를 변경하는 데 사용됩니다."
"mock",000000,3,"데이터베이스구축",47,"SQL에서 'SELECT DISTINCT'가 사용하는 주된 목적은 무엇인가","","① 데이터를 삽입하기 위해","② 중복된 데이터를 제거하기 위해","③ 데이터를 갱신하기 위해","④ 데이터를 삭제하기 위해","② 중복된 데이터를 제거하기 위해","SELECT DISTINCT는 쿼리 결과에서 중복된 값을 제거하고 고유한 값을 반환하는 데 사용됩니다."
"mock",000000,3,"데이터베이스구축",48,"데이터베이스에서 '클러스터형 인덱스'가 의미하는 것은 무엇인가","","① 데이터가 순차적으로 저장되지 않는 인덱스","② 데이터를 정렬된 순서대로 저장하는 인덱스","③ 인덱스가 별도로 존재하지 않는 경우","④ 다중 컬럼에 적용되는 인덱스","② 데이터를 정렬된 순서대로 저장하는 인덱스","클러스터형 인덱스는 데이터가 인덱스의 순서대로 물리적으로 저장되도록 하는 인덱스입니다."
"mock",000000,3,"데이터베이스구축",49,"다음 중 SQL에서 'DELETE' 명령어의 사용 목적은 무엇인가","","① 테이블을 삭제하는 것","② 데이터베이스를 삭제하는 것","③ 테이블의 데이터를 삭제하는 것","④ 데이터베이스의 구조를 변경하는 것","③ 테이블의 데이터를 삭제하는 것","DELETE 명령어는 테이블에서 특정 조건에 맞는 데이터를 삭제하는 데 사용됩니다."
"mock",000000,3,"데이터베이스구축",50,"정규화에서 3NF(Third Normal Form)의 조건으로 알맞은 것은 무엇인가","","① 부분 함수 종속성을 제거해야 한다","② 이행적 함수 종속성을 제거해야 한다","③ 모든 속성이 기본 키에 함수 종속성을 가져야 한다","④ 중복을 최소화해야 한다","② 이행적 함수 종속성을 제거해야 한다","3NF는 이행적 함수 종속성을 제거하고, 모든 비키 속성이 기본 키에 종속되도록 요구합니다."
"mock",000000,3,"데이터베이스구축",51,"다음 중 SQL에서 'COUNT' 함수의 사용 목적은 무엇인가","","① 평균값을 계산하기 위해","② 레코드의 개수를 세기 위해","③ 최대값을 찾기 위해","④ 최솟값을 찾기 위해","② 레코드의 개수를 세기 위해","COUNT 함수는 테이블에서 조건에 맞는 레코드의 개수를 세는 데 사용됩니다."
"mock",000000,3,"데이터베이스구축",52,"SQL에서 'HAVING' 절은 무엇을 수행하는 데 사용되는가","","① 테이블에서 데이터를 삭제하기 위해","② 데이터를 정렬하기 위해","③ 그룹화된 데이터에 조건을 추가하기 위해","④ 테이블을 생성하기 위해","③ 그룹화된 데이터에 조건을 추가하기 위해","HAVING 절은 GROUP BY 절과 함께 사용되어 그룹화된 결과에 조건을 적용하는 데 사용됩니다."
"mock",000000,3,"데이터베이스구축",53,"다음 중 SQL에서 'LIKE' 연산자의 주된 목적은 무엇인가","","① 문자열 패턴을 찾기 위해","② 숫자 범위를 찾기 위해","③ 날짜 범위를 찾기 위해","④ NULL 값을 찾기 위해","① 문자열 패턴을 찾기 위해","LIKE 연산자는 특정 패턴을 기준으로 문자열을 검색할 때 사용됩니다."
"mock",000000,3,"데이터베이스구축",54,"SQL에서 'ORDER BY' 절은 무엇을 수행하는가","","① 데이터를 그룹화하기 위해","② 데이터를 삽입하기 위해","③ 데이터를 정렬하기 위해","④ 데이터를 갱신하기 위해","③ 데이터를 정렬하기 위해","ORDER BY 절은 결과를 지정된 기준에 따라 오름차순 또는 내림차순으로 정렬합니다."
"mock",000000,3,"데이터베이스구축",55,"데이터베이스에서 '뷰(View)'는 무엇을 의미하는가","","① 물리적 데이터를 저장하는 테이블","② 실제 데이터를 수정할 수 있는 가상 테이블","③ 데이터베이스를 삭제하는 명령어","④ 단일 행만 반환하는 쿼리","② 실제 데이터를 수정할 수 있는 가상 테이블","뷰는 테이블의 데이터를 가상으로 보여주는 객체로, 실제 데이터를 수정하는 데 사용될 수 있습니다."
"mock",000000,3,"데이터베이스구축",56,"SQL에서 'GROUP BY' 절의 주된 목적은 무엇인가","","① 데이터를 삽입하기 위해","② 데이터를 그룹화하기 위해","③ 데이터를 삭제하기 위해","④ 데이터를 갱신하기 위해","② 데이터를 그룹화하기 위해","GROUP BY 절은 동일한 값을 가진 데이터들을 그룹화하여 집계 함수를 적용할 수 있도록 합니다."
"mock",000000,3,"데이터베이스구축",57,"SQL에서 'UNION' 연산자는 무엇을 수행하는가","","① 두 개 이상의 쿼리 결과를 결합하기 위해","② 데이터를 정렬하기 위해","③ 데이터를 그룹화하기 위해","④ 데이터를 삽입하기 위해","① 두 개 이상의 쿼리 결과를 결합하기 위해","UNION 연산자는 여러 개의 SELECT 쿼리 결과를 결합하여 하나의 결과로 반환합니다."
"mock",000000,3,"데이터베이스구축",58,"SQL에서 'DISTINCT' 키워드는 무엇을 수행하는가","","① 중복된 레코드를 포함하여 반환","② 중복된 레코드를 제외하고 반환","③ 데이터를 갱신","④ 데이터를 삭제","② 중복된 레코드를 제외하고 반환","DISTINCT 키워드는 결과에서 중복된 값을 제외하고 고유한 값을 반환하는 데 사용됩니다."
"mock",000000,3,"데이터베이스구축",59,"다음 중 SQL에서 'IN' 연산자의 용도는 무엇인가","","① 특정 값이 포함되어 있는지 확인","② 값들의 범위를 지정하기 위해","③ 테이블에서 값을 찾기 위해","④ 데이터베이스를 삭제하기 위해","① 특정 값이 포함되어 있는지 확인","IN 연산자는 주어진 값 목록 중 하나가 컬럼 값과 일치하는지 확인하는 데 사용됩니다."
"mock",000000,3,"데이터베이스구축",60,"SQL에서 'BETWEEN' 연산자의 주된 목적은 무엇인가","","① 특정 범위 내 값을 찾기 위해","② 테이블을 정렬하기 위해","③ 테이블을 삭제하기 위해","④ 특정 값을 찾기 위해","① 특정 범위 내 값을 찾기 위해","BETWEEN 연산자는 지정된 범위 내에 있는 값들을 검색하는 데 사용됩니다."
"mock",000000,3,"데이터베이스구축",61,"SQL에서 'NULL' 값을 검색할 때 사용하는 연산자는 무엇인가","","① NOT LIKE","② IS NULL","③ NOT IN","④ LIKE","② IS NULL","IS NULL 연산자는 NULL 값을 검색하는 데 사용됩니다."
"mock",000000,3,"데이터베이스구축",62,"데이터베이스에서 '트랜잭션'의 주요 특징으로 알맞은 것은 무엇인가","","① 트랜잭션은 무조건 성공해야 한다","② 트랜잭션은 순차적으로 실행된다","③ 트랜잭션은 원자성, 일관성, 격리성, 지속성을 유지한다","④ 트랜잭션은 단일 작업으로 구성된다","③ 트랜잭션은 원자성, 일관성, 격리성, 지속성을 유지한다","트랜잭션은 ACID 속성을 준수하여 데이터베이스의 일관성을 유지합니다."
"mock",000000,3,"데이터베이스구축",63,"SQL에서 'JOIN'을 사용하는 목적은 무엇인가","","① 두 개 이상의 테이블을 연결하여 데이터를 검색하기 위해","② 하나의 테이블에서 데이터를 삭제하기 위해","③ 데이터를 삽입하기 위해","④ 데이터를 갱신하기 위해","① 두 개 이상의 테이블을 연결하여 데이터를 검색하기 위해","JOIN은 여러 테이블을 연결하여 데이터를 가져오는 데 사용됩니다."
"mock",000000,3,"데이터베이스구축",64,"SQL에서 'LEFT JOIN'은 무엇을 수행하는가","","① 오른쪽 테이블에만 일치하는 데이터를 반환","② 왼쪽 테이블에만 일치하는 데이터를 반환","③ 두 테이블에서 일치하는 데이터만 반환","④ 왼쪽 테이블의 모든 데이터와 오른쪽 테이블의 일치하는 데이터를 반환","④ 왼쪽 테이블의 모든 데이터와 오른쪽 테이블의 일치하는 데이터를 반환","LEFT JOIN은 왼쪽 테이블의 모든 행과 오른쪽 테이블에서 일치하는 행을 반환합니다."
"mock",000000,3,"데이터베이스구축",65,"SQL에서 'RIGHT JOIN'은 무엇을 수행하는가","","① 왼쪽 테이블의 일치하는 데이터만 반환","② 오른쪽 테이블의 모든 데이터와 왼쪽 테이블의 일치하는 데이터를 반환","③ 두 테이블에서 일치하는 데이터만 반환","④ 왼쪽 테이블의 모든 데이터와 오른쪽 테이블의 일치하는 데이터를 반환","② 오른쪽 테이블의 모든 데이터와 왼쪽 테이블의 일치하는 데이터를 반환","RIGHT JOIN은 오른쪽 테이블의 모든 행과 왼쪽 테이블에서 일치하는 행을 반환합니다."
"mock",000000,3,"데이터베이스구축",66,"SQL에서 'FULL OUTER JOIN'은 무엇을 수행하는가","","① 두 테이블에서 일치하는 데이터만 반환","② 왼쪽 테이블과 오른쪽 테이블의 모든 데이터를 반환","③ 왼쪽 테이블의 모든 데이터만 반환","④ 오른쪽 테이블의 모든 데이터만 반환","② 왼쪽 테이블과 오른쪽 테이블의 모든 데이터를 반환","FULL OUTER JOIN은 두 테이블에서 일치하는 행뿐만 아니라 일치하지 않는 행도 모두 반환합니다."
"mock",000000,3,"데이터베이스구축",67,"데이터베이스에서 '인덱스'의 주요 목적은 무엇인가","","① 데이터를 정렬하기 위해","② 데이터를 삭제하기 위해","③ 데이터를 검색하는 속도를 향상시키기 위해","④ 데이터를 갱신하기 위해","③ 데이터를 검색하는 속도를 향상시키기 위해","인덱스는 데이터를 빠르게 검색할 수 있도록 돕는 데이터베이스 객체입니다."
"mock",000000,3,"데이터베이스구축",68,"데이터베이스에서 '정규화'의 주요 목적은 무엇인가","","① 데이터베이스 크기를 축소하기 위해","② 중복 데이터를 최소화하고 데이터의 무결성을 유지하기 위해","③ 데이터를 빠르게 검색하기 위해","④ 데이터를 분산하여 저장하기 위해","② 중복 데이터를 최소화하고 데이터의 무결성을 유지하기 위해","정규화는 데이터 중복을 줄이고 무결성을 유지하기 위해 테이블 구조를 정리하는 과정입니다."
"mock",000000,3,"데이터베이스구축",69,"SQL에서 'ALTER TABLE' 명령어의 주된 목적은 무엇인가","","① 테이블을 삭제하기 위해","② 테이블을 생성하기 위해","③ 테이블의 구조를 변경하기 위해","④ 테이블에서 데이터를 조회하기 위해","③ 테이블의 구조를 변경하기 위해","ALTER TABLE은 테이블의 구조를 변경하는 데 사용됩니다. 예를 들어, 컬럼을 추가하거나 삭제할 수 있습니다."
"mock",000000,3,"데이터베이스구축",70,"SQL에서 'DROP TABLE' 명령어의 기능은 무엇인가","","① 테이블에 데이터를 삽입하기 위해","② 테이블을 삭제하기 위해","③ 테이블의 데이터를 조회하기 위해","④ 테이블의 구조를 변경하기 위해","② 테이블을 삭제하기 위해","DROP TABLE은 데이터베이스에서 테이블과 그에 속한 모든 데이터를 삭제하는 명령어입니다."
"mock",000000,3,"데이터베이스구축",71,"SQL에서 'CREATE TABLE' 명령어의 기능은 무엇인가","","① 테이블을 삭제하기 위해","② 테이블을 생성하기 위해","③ 테이블의 구조를 변경하기 위해","④ 테이블에서 데이터를 조회하기 위해","② 테이블을 생성하기 위해","CREATE TABLE은 새로운 테이블을 데이터베이스에 생성하는 명령어입니다."
"mock",000000,3,"데이터베이스구축",72,"데이터베이스에서 '무결성 제약조건'이란 무엇을 의미하는가","","① 테이블에 중복 데이터를 삽입할 수 있도록 하는 제약조건","② 테이블의 데이터를 항상 정확하게 유지하도록 하는 제약조건","③ 데이터를 빠르게 조회할 수 있도록 하는 제약조건","④ 데이터베이스의 구조를 변경할 수 있도록 하는 제약조건","② 테이블의 데이터를 항상 정확하게 유지하도록 하는 제약조건","무결성 제약조건은 데이터의 정확성, 유효성, 일관성을 보장하기 위해 적용됩니다."
"mock",000000,3,"데이터베이스구축",73,"SQL에서 'PRIMARY KEY' 제약조건의 기능은 무엇인가","","① 테이블에서 중복 값을 허용하는 키","② 테이블의 각 행을 고유하게 식별하는 키","③ 테이블에서 NULL 값을 허용하는 키","④ 테이블에서 외래 키를 정의하는 키","② 테이블의 각 행을 고유하게 식별하는 키","PRIMARY KEY는 테이블에서 각 행을 고유하게 식별하는 열로, 중복 값이나 NULL 값을 허용하지 않습니다."
"mock",000000,3,"데이터베이스구축",74,"SQL에서 'FOREIGN KEY' 제약조건의 주된 목적은 무엇인가","","① 데이터의 무결성을 유지하기 위해","② 테이블을 삭제하기 위해","③ 데이터를 정렬하기 위해","④ 데이터를 삽입하기 위해","① 데이터의 무결성을 유지하기 위해","FOREIGN KEY는 다른 테이블의 PRIMARY KEY와 연관되어 참조 무결성을 유지합니다."
"mock",000000,3,"데이터베이스구축",75,"SQL에서 'CHECK' 제약조건의 기능은 무엇인가","","① 테이블의 컬럼에 특정 값을 허용하지 않도록 하는 제약조건","② 테이블의 컬럼에 특정 범위의 값만 허용하는 제약조건","③ 테이블의 컬럼에 NULL 값을 허용하는 제약조건","④ 테이블의 컬럼에 중복 값을 허용하는 제약조건","② 테이블의 컬럼에 특정 범위의 값만 허용하는 제약조건","CHECK 제약조건은 특정 조건을 만족하는 값만 테이블에 삽입할 수 있도록 제한합니다."
"mock",000000,3,"데이터베이스구축",76,"데이터베이스에서 '트랜잭션'의 '원자성(Atomicity)'이란 무엇을 의미하는가","","① 트랜잭션 내의 모든 작업이 완전히 실행되거나 전혀 실행되지 않음을 보장하는 특성","② 트랜잭션이 항상 성공적으로 완료된다는 특성","③ 트랜잭션이 다른 트랜잭션과 독립적으로 실행된다는 특성","④ 트랜잭션이 시스템에 영구적으로 기록된다는 특성","① 트랜잭션 내의 모든 작업이 완전히 실행되거나 전혀 실행되지 않음을 보장하는 특성","원자성은 트랜잭션 내의 모든 작업이 완료되거나 실패하여 작업이 실행되지 않도록 보장하는 특성입니다."
"mock",000000,3,"데이터베이스구축",77,"데이터베이스에서 '트랜잭션'의 '일관성(Consistency)'이란 무엇을 의미하는가","","① 트랜잭션이 성공적으로 완료된 후 데이터베이스가 일관된 상태를 유지하는 특성","② 트랜잭션이 다른 트랜잭션과 독립적으로 실행된다는 특성","③ 트랜잭션 내의 모든 작업이 전부 실행되지 않도록 하는 특성","④ 트랜잭션이 다른 트랜잭션을 기다릴 수 있다는 특성","① 트랜잭션이 성공적으로 완료된 후 데이터베이스가 일관된 상태를 유지하는 특성","일관성은 트랜잭션이 실행되기 전과 후의 데이터베이스 상태가 일관되도록 보장하는 특성입니다."
"mock",000000,3,"데이터베이스구축",78,"데이터베이스에서 '트랜잭션'의 '격리성(Isolation)'이란 무엇을 의미하는가","","① 트랜잭션이 항상 순차적으로 실행되는 특성","② 트랜잭션이 다른 트랜잭션과 독립적으로 실행된다는 특성","③ 트랜잭션이 시스템에 영구적으로 기록된다는 특성","④ 트랜잭션 내의 모든 작업이 전부 실행되지 않도록 하는 특성","② 트랜잭션이 다른 트랜잭션과 독립적으로 실행된다는 특성","격리성은 하나의 트랜잭션이 실행되는 동안 다른 트랜잭션이 영향을 미치지 않도록 하는 특성입니다."
"mock",000000,3,"데이터베이스구축",79,"SQL에서 'AUTO_INCREMENT' 속성은 무엇을 의미하는가","","① 자동으로 테이블을 삭제한다.","② 새로운 레코드가 삽입될 때 자동으로 고유 값을 생성한다.","③ 테이블의 모든 데이터를 자동으로 업데이트한다.","④ 테이블의 모든 레코드가 자동으로 중복을 허용하지 않는다.","② 새로운 레코드가 삽입될 때 자동으로 고유 값을 생성한다.","AUTO_INCREMENT는 새로운 레코드가 삽입될 때마다 자동으로 고유 값을 생성하는 속성입니다."
"mock",000000,3,"데이터베이스구축",80,"데이터베이스에서 '뷰(View)'의 목적은 무엇인가","","① 데이터베이스를 완전히 백업하기 위해","② 쿼리 결과를 테이블처럼 사용할 수 있도록 하기 위해","③ 데이터를 삽입하기 위해","④ 데이터를 암호화하기 위해","② 쿼리 결과를 테이블처럼 사용할 수 있도록 하기 위해","뷰는 복잡한 쿼리 결과를 마치 테이블처럼 사용할 수 있도록 해주는 가상 테이블입니다."
"mock",000000,3,"데이터베이스구축",81,"SQL에서 'HAVING' 절은 언제 사용되는가","","① WHERE 절과 함께 조건을 지정할 때","② 집계 함수에 조건을 지정할 때","③ 테이블을 생성할 때","④ 인덱스를 생성할 때","② 집계 함수에 조건을 지정할 때,HAVING 절은 GROUP BY와 함께 집계된 데이터를 필터링할 때 사용됩니다."
"mock",000000,3,"데이터베이스구축",82,"SQL에서 'GROUP BY' 절은 무엇을 수행하는가","","① 데이터를 테이블 순으로 정렬한다.","② 특정 열의 값을 기준으로 데이터를 그룹화한다.","③ 데이터를 삭제한다.","④ 데이터를 삽입한다.","② 특정 열의 값을 기준으로 데이터를 그룹화한다.","GROUP BY 절은 데이터를 특정 열을 기준으로 그룹화하여 집계 함수와 함께 사용됩니다."
"mock",000000,3,"데이터베이스구축",83,"SQL에서 'DISTINCT' 키워드는 무엇을 수행하는가","","① 중복된 값을 제거하고 고유한 값만 반환한다.","② 데이터를 삭제한다.","③ 데이터를 업데이트한다.","④ 데이터를 추가한다.","① 중복된 값을 제거하고 고유한 값만 반환한다.","DISTINCT는 쿼리 결과에서 중복된 값을 제거하고 고유한 값만 반환하는 데 사용됩니다."
"mock",000000,3,"데이터베이스구축",84,"SQL에서 'INNER JOIN'과 'LEFT JOIN'의 차이점은 무엇인가","","① INNER JOIN은 두 테이블의 모든 데이터를 반환하지만, LEFT JOIN은 왼쪽 테이블의 데이터를 반환한다.","② LEFT JOIN은 두 테이블의 모든 데이터를 반환하지만, INNER JOIN은 일치하는 데이터만 반환한다.","③ INNER JOIN은 일치하는 데이터만 반환하고, LEFT JOIN은 왼쪽 테이블의 데이터를 모두 반환한다.","④ LEFT JOIN은 일치하는 데이터만 반환하고, INNER JOIN은 오른쪽 테이블의 데이터를 모두 반환한다.","③ INNER JOIN은 일치하는 데이터만 반환하고, LEFT JOIN은 왼쪽 테이블의 데이터를 모두 반환한다.","INNER JOIN은 두 테이블에서 일치하는 데이터만 반환하고, LEFT JOIN은 왼쪽 테이블의 데이터를 모두 반환합니다."
"mock",000000,3,"데이터베이스구축",85,"SQL에서 'UNION'과 'UNION ALL'의 차이점은 무엇인가","","① UNION은 중복 데이터를 허용하고, UNION ALL은 중복 데이터를 제거한다.","② UNION은 중복 데이터를 제거하고, UNION ALL은 중복 데이터를 허용한다.","③ UNION은 데이터를 삭제하고, UNION ALL은 데이터를 추가한다.","④ UNION과 UNION ALL은 같은 방식으로 동작한다.","② UNION은 중복 데이터를 제거하고, UNION ALL은 중복 데이터를 허용한다.","UNION은 결과에서 중복 데이터를 제거하고, UNION ALL은 중복 데이터를 허용하여 모든 데이터를 반환합니다."
"mock",000000,3,"데이터베이스구축",86,"SQL에서 'EXISTS' 연산자의 목적은 무엇인가","","① 서브쿼리가 하나의 행을 반환하는지 확인한다.","② 서브쿼리가 여러 행을 반환하는지 확인한다.","③ 서브쿼리가 NULL 값을 반환하는지 확인한다.","④ 서브쿼리가 참인지 확인한다.","④ 서브쿼리가 참인지 확인한다.","EXISTS 연산자는 서브쿼리의 결과가 존재하는지 여부를 확인하는 데 사용됩니다."
"mock",000000,3,"데이터베이스구축",87,"SQL에서 'IN' 연산자는 무엇을 수행하는가","","① 서브쿼리에서 반환된 값 중 하나라도 포함된 레코드를 검색한다.","② 서브쿼리에서 반환된 값을 모두 제외한 레코드를 검색한다.","③ 서브쿼리에서 반환된 값을 제외한 데이터를 검색한다.","④ 서브쿼리에서 반환된 값을 기준으로 데이터를 삽입한다.","① 서브쿼리에서 반환된 값 중 하나라도 포함된 레코드를 검색한다.","IN 연산자는 서브쿼리에서 반환된 값 중 하나라도 포함된 레코드를 선택하는 데 사용됩니다."
"mock",000000,3,"데이터베이스구축",88,"SQL에서 'BETWEEN' 연산자의 목적은 무엇인가","","① 주어진 범위 내의 모든 데이터를 선택한다.","② 주어진 범위 외의 데이터를 선택한다.","③ 특정 값보다 작은 데이터를 선택한다.","④ 특정 값보다 큰 데이터를 선택한다.","① 주어진 범위 내의 모든 데이터를 선택한다.","BETWEEN 연산자는 지정된 범위 내에 있는 데이터를 선택하는 데 사용됩니다."
"mock",000000,3,"데이터베이스구축",89,"SQL에서 'ORDER BY' 절의 주된 목적은 무엇인가","","① 데이터를 삽입할 순서를 지정한다.","② 데이터를 삭제할 순서를 지정한다.","③ 데이터를 정렬한다.","④ 데이터를 업데이트할 순서를 지정한다.","③ 데이터를 정렬한다.,ORDER BY는 쿼리 결과를 특정 기준에 따라 정렬하는 데 사용됩니다."
"mock",000000,3,"데이터베이스구축",90,"데이터베이스에서 '트리거'란 무엇을 의미하는가","","① 특정 이벤트가 발생했을 때 자동으로 실행되는 작업","② 테이블을 삭제하는 작업","③ 데이터를 삽입하는 작업","④ 데이터를 암호화하는 작업","① 특정 이벤트가 발생했을 때 자동으로 실행되는 작업","트리거는 데이터베이스 내에서 특정 이벤트(INSERT, UPDATE, DELETE 등)가 발생하면 자동으로 실행되는 작업입니다."
"mock",000000,3,"데이터베이스구축",91,"SQL에서 'ROLLBACK' 명령어의 주된 목적은 무엇인가","","① 트랜잭션을 취소하고 변경 사항을 되돌린다.","② 트랜잭션을 커밋하여 변경 사항을 저장한다.","③ 트랜잭션을 새로운 상태로 초기화한다.","④ 트랜잭션을 시작한다.","① 트랜잭션을 취소하고 변경 사항을 되돌린다.","ROLLBACK은 트랜잭션이 실패했을 때 이전 상태로 되돌리는 명령어입니다."
"mock",000000,3,"데이터베이스구축",92,"SQL에서 'COMMIT' 명령어의 기능은 무엇인가","","① 트랜잭션을 취소한다.","② 트랜잭션을 완료하고 변경 사항을 저장한다.","③ 트랜잭션을 시작한다.","④ 트랜잭션의 상태를 확인한다.","② 트랜잭션을 완료하고 변경 사항을 저장한다.","COMMIT은 트랜잭션을 종료하고 모든 변경 사항을 데이터베이스에 저장하는 명령어입니다."
"mock",000000,3,"데이터베이스구축",93,"데이터베이스에서 '스키마(Schema)'란 무엇을 의미하는가","","① 데이터베이스의 데이터 구조와 관련된 제약 조건을 정의하는 정의체","② 데이터베이스의 데이터를 검색하는 쿼리","③ 데이터베이스의 데이터를 삽입하는 명령어","④ 데이터베이스의 테이블과 그 관계를 정의하는 명령어","① 데이터베이스의 데이터 구조와 관련된 제약 조건을 정의하는 정의체","스키마는 데이터베이스 내의 테이블, 뷰, 인덱스 등 데이터 구조를 정의하는 체계적인 설계입니다."
"mock",000000,3,"데이터베이스구축",94,"SQL에서 'LIKE' 연산자의 기능은 무엇인가","","① 특정 값이 포함된 행을 반환한다.","② 값이 일치하는 데이터를 반환한다.","③ 데이터의 일부를 패턴 매칭하여 검색한다.","④ 값을 제외한 데이터를 반환한다.","③ 데이터의 일부를 패턴 매칭하여 검색한다.","LIKE 연산자는 문자열에서 특정 패턴을 검색할 때 사용됩니다."
"mock",000000,3,"데이터베이스구축",95,"SQL에서 'CAST' 함수의 목적은 무엇인가","","① 데이터의 형식을 변환한다.","② 데이터를 암호화한다.","③ 데이터를 삭제한다.","④ 데이터를 압축한다.","① 데이터의 형식을 변환한다.","CAST 함수는 데이터의 형식을 다른 타입으로 변환할 때 사용됩니다."
"mock",000000,3,"데이터베이스구축",96,"SQL에서 'NULL' 값은 무엇을 의미하는가","","① 값이 존재하지 않음을 의미한다.","② 값을 알 수 없음을 의미한다.","③ 값이 0임을 의미한다.","④ 값이 비어있음을 의미한다.","① 값이 존재하지 않음을 의미한다.,NULL은 값이 존재하지 않거나 알 수 없는 상태를 나타내는 특수한 값입니다."
"mock",000000,3,"데이터베이스구축",97,"SQL에서 'LIMIT' 절은 무엇을 수행하는가","","① 검색된 모든 데이터를 반환한다.","② 결과 집합의 행 수를 제한한다.","③ 결과를 내림차순으로 정렬한다.","④ 결과를 오름차순으로 정렬한다.","② 결과 집합의 행 수를 제한한다.","LIMIT는 쿼리 결과에서 반환할 행의 수를 제한하는 데 사용됩니다."
"mock",000000,3,"데이터베이스구축",98,"SQL에서 'JOIN'의 목적은 무엇인가","","① 두 개 이상의 테이블을 결합하여 관련된 데이터를 반환한다.","② 데이터를 삭제하는 데 사용된다.","③ 데이터를 중복해서 반환한다.","④ 데이터를 한 번만 반환한다.","① 두 개 이상의 테이블을 결합하여 관련된 데이터를 반환한다.","JOIN은 여러 테이블을 결합하여 관련된 데이터를 하나의 결과로 반환하는 데 사용됩니다."
"mock",000000,3,"데이터베이스구축",99,"데이터베이스에서 '트랜잭션 격리 수준' 중 'READ COMMITTED'의 의미는 무엇인가","","① 한 트랜잭션 내에서 다른 트랜잭션의 업데이트가 즉시 반영된다.","② 트랜잭션이 완료되기 전에 다른 트랜잭션에서 데이터를 읽을 수 없다.","③ 한 트랜잭션 내에서 다른 트랜잭션의 데이터를 읽을 수 없다.","④ 트랜잭션이 완료되기 전에 다른 트랜잭션에서 데이터를 읽을 수 있다.","④ 트랜잭션이 완료되기 전에 다른 트랜잭션에서 데이터를 읽을 수 있다.","READ COMMITTED 격리 수준에서는 다른 트랜잭션에서 커밋된 데이터를 읽을 수 있습니다."
"mock",000000,3,"데이터베이스구축",100,"데이터베이스에서 '트랜잭션'이란 무엇을 의미하는가","","① 여러 SQL 명령을 하나의 단위로 묶어 처리하는 작업","② 데이터를 복사하는 작업","③ 데이터를 암호화하는 작업","④ 데이터를 인덱싱하는 작업","① 여러 SQL 명령을 하나의 단위로 묶어 처리하는 작업","트랜잭션은 여러 SQL 명령을 하나의 단위로 묶어 처리하는 작업으로, 원자성, 일관성, 격리성, 지속성의 특성을 가집니다."